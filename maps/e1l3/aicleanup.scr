//chrissstrahl - completed coopification on 2019.09.18


//
// aicleanup.scr
//
// ccaron 5.29.03
//
// usage : exec /.../aicleanup.scr
//
// remove a set of guys on a trigger event
// initialized during startup
//
// In the map...
//
// place a trigger_once targetname triggercleanup(n).
// this will automatically cleanup all guys with
// $targetname cleanup(n)
//
// To integrate with enemyspawners...
// set the $enemyname field of the spawners
// to cleanup(n)
//
// You can use the field #min_dist in the cleanuptrigger
// to determine the minimum distance away player needs
// to be to delete the guy. (DEFAULT min_dist = 1000)
// 
// ------------------------------------------------

// Find all triggercleanup(s) and start
// a thread on each
//=========================================================================
init:
//=========================================================================
{
	println "AICLEANUP >>> initializing aicleanup"

	local.i = 1
	while (local.i <= 25){
		local.trigger = $("triggercleanup" + local.i)

		if (local.trigger != NULL){
			println "AICLEANUP >>> found triggercleanup" local.i		
			thread CleanupThread local.trigger ("cleanup" + local.i) local.trigger.min_dist
		}
		local.i ++
	}
	println "AICLEANUP >>> aicleanup initialized"
}end

// Try to delete a set of guys when their
// cleanup trigger is hit
//=========================================================================
CleanupThread local.trigger local.guys_string local.mindist:
//=========================================================================
{
	if (!local.mindist){
		local.mindist = 1000
	}

	//{
	//	println "AICLEANUP >>>> local. trigger is NULL"
	//	end
	//}
	//	println "AICLEANUP >>> Cleanup thread waiting for " local.trigger

	if (local.trigger){
		local.trigger waittill trigger
		local.trigger delete
	}

	println "AICLEANUP >>> Cleaning up " local.guys_string

	//[205] chrissstrahl - supress script error
	if (local.trigger && local.trigger.target){
		println "AICLEANUP >>> targeting " local.trigger.target ", deleting"
		thread TryDelete local.trigger.target local.mindist
	}
	
	if (!$(local.guys_string)){
		println "AICLEANUP >>> could not find " local.guys_string " guys"
		end
	}

	local.arr = exec global/makearray.scr $(local.guys_string)
	local.num = $(local.guys_string).size

	for (local.i=1; local.i<=local.num; local.i++){
		thread TryDelete local.arr[local.i]
		//local.arr[local.i] delete
	}

	println "AICLEANUP >>> deleted " local.i " guys"
}end

// If a guy to close, then wait for for him to be far
// enough away to delete.
//=========================================================================
TryDelete local.ent local.dist:
//=========================================================================
{
	if (!local.ent){
		end
	}
	//chrissstrahl - replace with coop compatible
	//while (($player cansee local.ent) > 0){
	while(local.ent waitthread coop_mod/replace.scr::cansee){
		wait 1.0
		//chrissstrahl - make sure we don't get 
		if(!local.ent){
			end
		}
	}
	//waitthread WaitTillOutOfSight local.ent dist
	local.ent delete
}end

// tracks a guys distance to player
// local.dist is distance guy must
// be away from player before he is
// deleted.
//=========================================================================
WaitTillOutOfSight local.ent local.dist:
//=========================================================================
{
	while (1){
		//chrissstrahl - coop compatible
		//if (vector_length (local.ent.origin - $player.origin) < local.dist){
		local.player = exec coop_mod/replace.scr::player_closestTo local.ent
		if (local.player != NULL && vector_length (local.ent.origin - local.player.origin) < local.dist){
			wait 1.0
		}
		else{
			break
		}
	}
}end

