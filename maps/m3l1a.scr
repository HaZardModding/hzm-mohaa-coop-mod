///////////////////////////////////////////////////////////////////////////////
//
//  MoH: Allied Assault Script File
//  Level: M3L1b - D-Day, bunker and back-field section
//  Script Written By: Benson 'elmagoo' Russell
//
///////////////////////////////////////////////////////////////////////////////

// THIS SCRIPT HAS BEEN CHECKED FOR OBSCENITIES TO GUARANTEE THE READERS SAFTEY AND HEALTH

// NO PIXELS WERE HARMED IN THE MAKING OF THIS LEVEL

//***********************************************************************************************************************
//********  These are the 'acceptable' quotes from the 2015 quote list, which was updated over the course of this project
//********  There are a bunch more that can't be shown here ;)p

// Benson Russell - [edited version] Poop on my butt!
// Benson Russell - suck a duck
// Benson Russell - Ohhh you son of a crackhead!
// Benson Russell - [edited version] It feels like you're hitting your butt on the head.
// Benson Russell - It went tap, ta ta tap, ta tap tap, on his head, hu hu head, hu head! [playing counterstrike]
// Benson Russell - There is no jumping in WWII!!!
// Benson Russell - I wouldn't want to hire him with a ten foot pole.
// Benson Russell - [edited version] Your butt better be sealed!
// Benson Russell - Once you've had stick you never wanna go back.
// Benson Russell - [edited version] I have to go get my butt a haircut.
// Benson Russell - I don't go to dentists......dentists piss me off!
// Benson Russell - If we can impress Todd, we can impress the marketing guys.
// Benson Russell - [edited version] Stupid math stuff, being so perfect.
// Benson Russell - Can we split the training level into multiple BSPs?
// Steve Fukuda - Alright, who's running the random tone generator? Could you turn that down a bit? (about a trance techno artist)
// Steve Fukuda - [edited version] I am so the man! This is total man stuff! Sometimes my man'ness just blows me away.
// Steve Fukuda - Well that's just lousy penetration code.
// Steve Fukuda - Come back tomorrow with fresh new ideas swimming in your brain... What? What's so funny about that?
// Steve Fukuda - [edited version] 3D snack chips? What will they think of next?
// Steve Fukuda - There's nothing wrong with being german. They make good cars.
// Steve Fukuda - [edited version] Dude... you haven't lived until you've ridden a dog sled to Wallyland. [he's from Canada]
// Steve Fukuda - "I'm a genious."
// Steve Fukuda - [edited version] Carl's like a backseat driver! You just wanna smack him upside the head and tell him to go get some coffee!
// Steve Fukuda - [edited version] Jon: How was your christmas Steve?  Steve: It was good.............. no actually it was pretty crappy!
// Steve Fukuda - So this is what it feels like to own...
// Steve Fukuda - Thats all I live for... the gripe sessions.
// Tom Kudirka - Shut the mouth.
// Tom Kudirka - There's madness behind my method.
// Tom Kudirka - [edited version] Remember when the Germans bombed Pearl Harbor...we didn't sit on our butts...we kicked back  [supposedly quoting a movie]
// Tom Kudirka - [edited version] Look at my butt... [said loudly from behind Vince's closed office door]
// Tom Kudirka - Balls to me is the best! [in reference to the drink similarly named]
// Tom Kudirka - It wasn't just a gay bar, it was a great gay bar!
// Tom Kudirka - Woh, woh, woh, woh... [said with the exact same timing, everytime]
// Tom Kudirka - I need to illiterate something...
// Mike Milliger - I'll probably fix the problem tomorrow or this weekend...whichever comes first.
// Carl Glave - Because it makes very much logical sense.
// Carl Glave - [edited version] The server is down like a drunken b***h.
// Carl Glave - I say we need a sequence where a guy scratches him butt then smells his funger, winches, than makes the guy next to him smell his finger.  [Carl's email suggestion for a scripted sequence, demonstrating his wonderful spelling prowess]
// Justin Thomas - [edited version] I like it because I haven't eaten the crap out of it like everything else.
// Justin Thomas - We rock! Intimidation is cool!
// Justin Thomas - First I've gotta build it, then an animator's gotta go in and bone it.
// Ken Turner - Hey! Children need lubrication too!
// Vince Zampella - Finger yourself. Go on... do it.  [in reference to .plan files when we got them working]
// Vince Zampella - I can't deal with more than 19 inches.  [???]
// Adam Bellefeuil - Ooh! What is that? Frozen balls?  [in reference to the drink similarly named]
// Adam Bellefeuil - [edited version] Yeah, and someone keeps sticking a hot poker up my butt
// Adam Bellefeuil - All the programmers have squishy balls...  [all the coders got squishy toys from nVidia]
// Adam Bellefeuil - [Funny Editing Questions From Non-English Speaking Countries] Hi my name is ******** i´m from argentina, i´m learning how to make the q3 maps with the radiant, when i do the bsp fullvis the program never finish, i know that is not the time, the problem becouse when i erase a simple, whith a simple texture, whith no shader, the program finish the bsp proccess in 5 feet´ , i have read the junk.txt file and it says in a line, "Warning couldn´t find image shader for noshader". please if you know something mail me.
// Adam Bellefeuil - [Funny Editing Questions From Non-English Speaking Countries] I have problem........ When i'm going in a server in the sky is grey (build of grey squares) and thesmoke of my rockets are grey squares. This is in most of the server in the chello server it's just normal with normal smoke. How can i get rid of my problem?!?!? please e-mail back
// Earl Hammon - Smurf it!
// Earl Hammon - What the smurf!?
// Earl Hammon - Classical music is great for killing to!  [playing Q3 CTF deathmatch]
// Earl Hammon - I love you Adam!
// Earl Hammon - I am quick, like a planet.
// Earl Hammon - Genius is designed to be questioned... unless it's my genius.
// Jon Olick - If it compiles and runs there are no bugs.
// Jon Olick - There's no bugs, it just doesn't run right.
// Jon Olick - Thats not a bug, thats an undocumented feature.
// Jon Olick - (jon): It's like a binary octree! (Carl): You mean a BSP tree? (Jon): Well kinda, yea.
// Jon Olick - What do people taste like?
// Jon Olick - Woah, I got panties. Hey, look, look! I've got panties on! [playing a game in software etc.]
// Jon Olick - I'm a hot chick.
// Jon Olick - I eat my butts.  [in reference to when he used to smoke]
// Jon Olick - violence and good looking women go together......ain't nothing wrong with that!  [said after watching an action movie]
// Jon Olick - Oh wait that was a previous excuse. The current excuse is.....
// Jon Olick - If you hide it, it will be hidden
// Matt Campbell - Bottomless tossed salad! No way! [sounding really excited while checking out the menu at a restaurant]
// Matt Campbell - Jesus, I'm gay
// Preston Glenn - Preston: So... anyone want my sausage?  Steve: Is that SPAM?  Preston: No, it's real meat! [said while at a pancake house]
// Preston Glenn - Dude... if you were my cow I'd slap you.
// Preston Glenn - [edited version] You look like a friggin' retarded walrus (to Nate with chopsticks in his mouth)
// Preston Glenn - Paul was not stiff
// Brad Allen - People don't say hello to me in the street, they just move their children out of the way.
// Brad Allen - [edited version] I had a dream like that.  where I took a big devils tower crap.  Then aliens came down and shaved a crop circle in my butt hair. Then there was the monolith shaped one that all the apes started to worship and then they beat the crap out of each other with dinosaur bones. Then I took a big black poop in a cape and it cut off my hand and told me it was my father. "THAT"S NOT TRUE!!! THAT'S IMPOSSIBLE!!"
// Jeff Heath - Bring it on Tuffy!
// Jeff Heath - There is a difference between "not lit" and "african american".
// Nate Silvers [for the record, Nate is not gay, but took an 'are you gay' test on the internet and scored the highest out of everybody with a 67]
// Nate Silvers - My gayness owns joo!
// Nate Silvers - You wish you were as gay as me!
// Nate Silvers - Being gay is alright.
// Nate Silvers - Wow! You sure are errect!
// Nate Silvers - Bend over i'll lick it... [that wasnt taken out of context either!]
// Nate Silvers - Ned doesn't push hard enough!!  [refering to Neds lack of skeel in pressing the elevator button]
// Mackey McCandlish - If I blow everything in the beginning it just sucks me dry in the end!
// Mackey McCandlish - Preston can take me all day long.
// Mackey McCandlish - Ohhhh, get out of my tongue!!!  [????]
// Mackey McCandlish - Boon: "Stand.scr?"  Zied: "Formerly known as stop running dot scr"  Mackey: "Now known as occasionally stop running dot scr"  Zied: "AKA Random behavior dot scr"  Mackey: "Now known as break the game dot scr."  Zied: "Soon to be known as eradicated from all my scripts dot scr"
// Keith Bell - I'm a fixing to fix that right now.
// Keith Bell - And you reach right up there and grab her uterus! [REAL loud talking about cows in a resteraunt in Los Angeles, Nedman used to own a dairy farm]
// Keith Bell - I've had a cow lick my ass before...
// Keith Bell - Ned: "I ain't never seen THAT before!!!!"  Benson: "What the hell you doing over there ned?!?!"  Ned(casually): "Ohhh......I got my thing out and I'm playin' with it!"  [????]
// Chance Glasco - Adam: Why is your monitor all rainbowy?  Chance: The whole gay pride thing, ya know?  Adam:  Oh?  Chance:  Yeah I figured working with 30 guys, there wouldn't be a better time to start being gay.
// Bryan Kuhn - [First thing ever said to Carl] : Hi, would you like a massage?
// Zied Rieke - [edited version] the longer we wait before making that tough decision to stop trying to tie ribbons around pieces of crap and call them chocolate the harder it is to fix things...
// Zied Rieke - Thats unbelievably lame Carl.
// Zied Rieke - There is no Fukuda bug! Fukuda off! Mother Fukuda!
// Michael Heilemann - Radiants undo function is just about as useless as teets on a volkswagon!
// Jerry Keehan - Why can't this be simple and intuitive.. like everything else

//  One of the biggest gripes when working with 30 other guys with only one public bathroom, FLUSH AFTER YOU'RE DONE!!!!!!!!


// chrissstrahl - modified code layout for easier reading and better overview (collapsed)
// chrissstrahl - 2018.09.02 started modification for coop - estimating 3 months to get this to work in coop
// chrissstrahl - changed $player.sequence					to level.m3l1a_sequence
// chrissstrahl - changed $player.sequence_branch			to level.m3l1a_sequence_branch
// chrissstrahl - changed $player.wait_cycle_interval		to level.wait_cycle_interval
// chrissstrahl - changed $player.inpuzzle					to level.inpuzzle
// chrissstrahl - changed $player.progress					to level.progress
// chrissstrahl - changed $player.cover_index				to level.cover_index
// chrissstrahl - changed $player.onshelf					to level.onshelf
// chrissstrahl - changed $player.wait_interval				to level.wait_interval
// chrissstrahl - changed $player.target_offset				to level.target_offset
// chrissstrahl - changed $player.warning					to level.warning
// chrissstrahl - changed $player.warning_type				to level.warning_type
// chrissstrahl - changed $player.warning_side				to level.warning_side
// chrissstrahl - changed jitter_mg, removed jitter in mp
// chrissstrahl - changed jitter_mg_cover, removed jitter in mp
// chrissstrahl - turns out it took less than a month :)

//ai_fodder:{    while ($player.viewangles[1] < 30 && $player.viewangles[1] > 150){
//ai_friendly_pain:{
//jitter_small
//jitter_medium
//jitter_large
//craters_cover:{




//*************************************************************************************
//*************************************************************************************
//*************************************************************************************
//
// INIT SECTION
//
//*************************************************************************************
//*************************************************************************************
//*************************************************************************************
//=========================================================================
main:{
//=========================================================================
	// fade out
	fadeout .1 0 0 0 1
	level.coop_aaMap = 1						//chrissstrahl - let global scripts know this is a AA level
	level.coop_disableSpawnWarper = game.true		//chrissstrahl - disable respawn warper - we need all players to spawn at a specific place
	waitthread coop_mod/main.scr::main 			//chrissstrahl - start coop mod extensions
	level.coop_devTest = 0						//chrissstrahl - set to 0 once done testing
	level.coop_playerGlue = 1					//chrissstrahl - glue players

	level.coop_noDropHealth = game.true 		//[200] Smithy -  actually don't allow health drops

	// set the soundtrack
	soundtrack music/m3l1a.mus

	// prep the players weapons
	exec global/loadout.scr maps/m3l1a.scr

	//*************************************************************
	//  wait for the level to spawn
	//*************************************************************
level waittill prespawn

	// setup the farplane
	if (getcvar(g_ddayfog) == "2"){
		$world farplane 2000
	}else{
		$world farplane 3500
	}

	// originally was .64 .64 .65
	// perfect old match is .69 .68 .67
	$world farplane_color (.62 .62 .61)
	//setcvar ui_crosshair 0

	// TEMP reset the Objectives portion of the HUD
	//waitthread global/objectives.scr::reset_objectives
	//waitthread global/objectives.scr::blank_objectives

	// set the starting objectives for the level
	//waitthread global/objectives.scr::add_objectives 1 2 "Destroy the 2 20mm Anti-Aircraft gun emplacements" $20mm_weapon1.origin
	//waitthread global/objectives.scr::add_objectives 2 2 "Destroy the FLAK 88 Artillery emplacement" $88mm_weapon.origin
	//waitthread global/objectives.scr::add_objectives 3 2 "Destroy the 15cm Artillery emplacement" $15cm_weapon.origin
	//waitthread global/objectives.scr::add_objectives 4 2 "Meet up at the rendevous point" $rendevous_point.origin

	// give starting inventory items
	//waitthread global/items.scr::add_item "explosives" 1



	// prep the level and ai
	thread level_prep
	thread ai_prep

	//chrissstrahl - temp fixme
	while($player == NULL || $player.size < 1){
		waitframe
	}

	thread player_prep

	// init variables
	thread variable_prep

	// initialize the minefields
	thread global/minefield.scr::minefield_setup

	// initialize the crates
	thread global/crate.scr::item_crate


//  player enters the game
	//level waittill spawn //chrissstrahl

	//chrissstrahl - replacment
	waitthread coop_mod/replace.scr::waitForPlayer

	level.flags[craters] = 0

	//chrissstrahl - fix missing issue if if occurs
	if($higgins1_playerspot == NULL){
		spawn script_origin targetname higgins1_playerspot origin ( 352 -7440 -464)
	}
	//end chrissstrahl

	wait .5

	//chrissstrahl
	// glue the player to the higgins boat
	exec coop_mod/replace.scr::glue $higgins1_playerspot 0	//chrissstrahl - coop replacment
	thread coop_startBoatSpawnManager //[202][hotfix] Smithy

	$higgins1_playerspot movedown 32
	$higgins1_playerspot move

	// start the boat ride
	thread main_boat_ride
	//setcvar "g_synchronousclients" "1"

	// telling the AI to not drop health
	level.nodrophealth = 1
}end

//*************************************************************************************
//*************************************************************************************
//
// INIT THREADS
//
//*************************************************************************************
//*************************************************************************************


// init variables
//=========================================================================
variable_prep:{
//=========================================================================
	println "XXX Preping the variables"

	// set the script file
	level.script = "maps/m3l1a.scr"

	while($player == NULL || $player.size < 1){
		waitframe
	}

	// for tracking the players progress
	level.progress = "boat"

	// for when the player is in a mortar puzzle
	level.inpuzzle = 0

	// setting the players cover index
	level.cover_index = 0

	// set the players sequence marker
	level.m3l1a_sequence = 0
	level.m3l1a_sequence_branch = "center"

	// shelf killplayer routine
	level.onshelf = 0

	// setting the script damage varaible for player hurting the AI detection
	level.script_damage = 0
}end

// prep the ai
//=========================================================================
ai_prep:{
//=========================================================================
	println "XXX Preping the AI"

	// disable the AI in the players higgins boat
	$higgins1_ranger1 thread ai_friendly_setup
	$higgins1_ranger2 thread ai_friendly_setup
	$higgins1_ranger3 thread ai_friendly_setup
	$higgins1_ranger4 thread ai_friendly_setup
	$higgins1_ranger5 thread ai_friendly_setup
	$higgins1_ranger6 thread ai_friendly_setup
	$higgins1_ranger7 thread ai_friendly_setup
	$higgins1_ranger8 thread ai_friendly_setup
	$higgins1_ranger9 thread ai_friendly_setup
	$higgins1_ranger10 thread ai_friendly_setup

	// setup the coxswain
	$higgins1_coxswain thread ai_friendly_setup
	$higgins1_coxswain exec global/setsmoke.scr 0
	$higgins1_coxswain holster

	// disable the blow up guys in the second higgins boat
	//$higgins2_blowme1 exec global/ai_off.scr
	//$higgins2_blowme2 exec global/ai_off.scr
	//$higgins2_blowme3 exec global/ai_off.scr

	$higgins2_blowme1 exec global/disable_ai.scr
	$higgins2_blowme2 exec global/disable_ai.scr
	$higgins2_blowme3 exec global/disable_ai.scr

	// guy in the trench
	$trench_ranger exec global/disable_ai.scr
//	$trench_ranger.origin = $trench_ranger.origin + ( -5 5 0)
	$trench_ranger notsolid
	$trench_ranger exec global/setsmoke.scr 0
	$trench_ranger holster
	$trench_ranger nodamage

	// setup the mg42 gunners
	$mg42_leftbunker1_gunner exec global/disable_ai.scr 	//[200] Smithy - dont use these anymore
	$mg42_leftbunker1_gunner notsolid
	$mg42_leftbunker1_gunner hide
	//$mg42_leftbunker1_gunner remove

	$mg42_leftbunker2_gunner exec global/disable_ai.scr 	//[200] Smithy - dont use these anymore
	$mg42_leftbunker2_gunner notsolid
	$mg42_leftbunker2_gunner hide
	//$mg42_leftbunker2_gunner remove

	$mg42_middle1_gunner exec global/disable_ai.scr
	$mg42_middle1_gunner notsolid
	$mg42_middle1_gunner hide
	$mg42_middle1_gunner accuracy 100
	//$mg42_middle1_gunner thread mg42_middle1_death

	$mg42_middle2_gunner exec global/disable_ai.scr
	$mg42_middle2_gunner notsolid
	$mg42_middle2_gunner hide
	$mg42_middle2_gunner accuracy 100
	//$mg42_middle2_gunner thread mg42_middle2_death

	$mg42_rightbunker1_gunner exec global/disable_ai.scr //[200] Smithy - dont use these anymore
	$mg42_rightbunker1_gunner notsolid
	$mg42_rightbunker1_gunner hide
	//$mg42_rightbunker1_gunner remove

	$mg42_rightbunker2_gunner exec global/disable_ai.scr //[200] Smithy - dont use these anymore
	$mg42_rightbunker2_gunner notsolid
	$mg42_rightbunker2_gunner hide
	//$mg42_rightbunker2_gunner remove

	// TEMP TEMP TEMP
	$mg42_bunker_gunner exec global/disable_ai.scr
}end

//=========================================================================
gluer local.ent:{
//=========================================================================
//	local.timer = level.time + 15
//	while (level.time < local.timer)
	while (1){
		self.origin = local.ent.origin
		waitframe
	}
	local.ent delete
}end

// put the guys in the players higgins boat into the proper animations
//=========================================================================
higgins_ai_set_anim:{
	$higgins1_ranger1 anim higgins_ride_stand01
	$higgins1_ranger2 anim higgins_ride_stand02
	$higgins1_ranger3 anim higgins_ride_stand03
	$higgins1_ranger4 anim higgins_ride_stand04
	$higgins1_ranger5 anim higgins_ride_stand05
	$higgins1_ranger6 anim higgins_ride_stand04
	$higgins1_ranger7 anim higgins_ride_stand02
	$higgins1_ranger8 anim higgins_ride_stand03
	$higgins1_ranger9 anim higgins_ride_stand05
	$higgins1_ranger10 anim higgins_ride_stand03
}end

// prep the player
//=========================================================================
player_prep:{
//=========================================================================
}end

// prep the level, set initial time values,
// move objects to starting positions
//=========================================================================
level_prep:{
//=========================================================================
	println "XXX Preping the level"

	// setup the higgins boats
	thread setup_higgins

	// setup the mg42s
	thread setup_mg42

	// setup cover zones
	thread setup_cover

	// setup player progress triggers
	thread setup_progress

	// setup mg42 targets
	thread setup_mg42_targets

	// setup the border warning triggers
	thread setup_warning_triggers

	// setup the mortar puzzle
	thread setup_mortar_puzzle

	// setup the ambient mortar locations
	thread setup_mortar_ambient

	// setup the mortar puzzle
	thread setup_groundtype_triggers

	// setup the ai fodder than just runs up the beach
	thread setup_ai_fodder_paths
	thread setup_ai_fodder

	// launch the shelf and shingle thread
	thread shelf_trigger
	thread shingle_trigger

	// mg42 middle waittrigger threads
	thread mg42_middle1_trigger
	thread mg42_middle2_trigger

	// kill the player if he tries to leave the shelf
	thread mg42_shelf_killplayer

	// cover areas for the crater puzzle
	$craters_cover1 thread craters_cover
	$craters_cover2 thread craters_cover2
	$craters_cover3 thread craters_cover

	// hide the wavy ocean
	$ocean_wavy hide

	// hide the bangalores and make them notsolid
	$bangalore1 hide
	$bangalore2 hide
	$bangalore3 hide

	$bangalore1 notsolid
	$bangalore2 notsolid
	$bangalore3 notsolid

	// disable the bangalore trigger
	$playeritem_bangalore_give nottriggerable
}end

// higgins boat setup stuff
//=========================================================================
setup_higgins:{
//=========================================================================
	for (local.i = 1 ; local.i <= 6 ; local.i ++){
		waitthread higgins_boat_bind $("higgins" + local.i) $("higgins" + local.i + "_model") $("higgins" + local.i + "_clip") $("higgins" + local.i + "_move") $("higgins" + local.i + "_move2") $("higgins" + local.i + "_door") $("higgins" + local.i + "_door_origin") $("higgins" + local.i + "_door_clip") $("higgins" + local.i + "_spray_left") $("higgins" + local.i + "_spray_right")
	}

	// bind the coxswain spot to the players boat
	$higgins1_coxswain_spot bind $higgins1_clip
	$higgins1_coxswain_spot movedown 96
	$higgins1_coxswain_spot move

	// bind the playerspot to higgins1
	$higgins1_playerspot bind $higgins1_clip

	// bind the player pusher to higgins1
	$higgins1_clip_player bind $higgins1_clip

	// bind the mortar fx to the higgins2
	$higgins2_mortar bind $higgins2

	// bind the guys that die and launch into the air
	$higgins2_blowme1 notsolid
	$higgins2_blowme2 notsolid
	$higgins2_blowme3 notsolid

	$higgins2_blowme1 bind $higgins2_model
	$higgins2_blowme2 bind $higgins2_model
	$higgins2_blowme3 bind $higgins2_model

	$higgins2_blowme1 exec global/disable_ai.scr
	$higgins2_blowme2 exec global/disable_ai.scr
	$higgins2_blowme3 exec global/disable_ai.scr

	$higgins2_blowme1 hide
	$higgins2_blowme2 hide
	$higgins2_blowme3 hide

	$higgins2_blowme1 nodamage
	$higgins2_blowme2 nodamage
	$higgins2_blowme3 nodamage

	// glue the AI to the players higgins boat
	for (local.j = 1 ; local.j <= 10 ; local.j ++){
		$("higgins1_ranger" + local.j) glue $("higgins1_ranger" + local.j + "_spot")
		$("higgins1_ranger" + local.j) physics_off
		$("higgins1_ranger" + local.j) notsolid
	}

	// glue the coxswain to his spot
	$higgins1_coxswain glue $higgins1_coxswain_spot
	$higgins1_coxswain physics_off
	$higgins1_coxswain notsolid

	// rotate the AI in the players boat
	/* [200] Smithy - don't rotate them anymore as this isn't needed in BT engine as it makes them face wrong way  (fuck sake lol...)
	for (local.k = 1 ; local.k <= 10 ; local.k ++){
		$("higgins1_ranger" + local.k + "_spot") time .1
		$("higgins1_ranger" + local.k + "_spot") rotateyup 90
	}
	*/
	($higgins1_ranger1_spot::$higgins1_ranger2_spot::$higgins1_ranger3_spot::$higgins1_ranger4_spot::$higgins1_ranger5_spot::$higgins1_ranger6_spot::$higgins1_ranger7_spot::$higgins1_ranger8_spot::$higgins1_ranger9_spot::$higgins1_ranger10_spot) waitmove

	// rotate the coxswain
	$higgins1_coxswain_spot time .1
	$higgins1_coxswain_spot rotateyup 0 //[200] Smithy - don't rotate them anymore as this isn't needed in BT engine as it makes them face wrong way (fuck sake lol...)
	$higgins1_coxswain_spot waitmove

	// position the boats into the fleet arrangement
	$higgins2_move2 movenorth 384
	$higgins3_move2 movenorth 512
	$higgins4_move2 movenorth 768
	$higgins5_move2 movenorth 448
	$higgins6_move2 movenorth 384

	($higgins2_move2::$higgins3_move2::$higgins4_move2::$higgins5_move2::$higgins6_move2) waitmove

	/*
	println "higgins2_move2 origin: " $higgins2_move2.origin
	println "higgins3_move2 origin: " $higgins3_move2.origin
	println "higgins4_move2 origin: " $higgins4_move2.origin
	println "higgins5_move2 origin: " $higgins5_move2.origin
	println "higgins6_move2 origin: " $higgins6_move2.origin
	*/

	// higgins boats wavy motions
	for (local.l = 1 ; local.l <= 6 ; local.l ++){
		$("higgins" + local.l) thread higgins_wave_motions local.l
	}

	// higgins boats forwards and backwards motions
	for (local.m = 2 ; local.m <= 6 ; local.m ++){
		$("higgins" + local.m + "_move") thread higgins_forward_motions
	}
}end

//  Binding the Higgins boats and get them moving
//=========================================================================
higgins_boat_bind local.higgins_origin local.higgins_model local.higgins_clip local.higgins_move local.higgins_move2 local.higgins_door local.higgins_door_origin local.higgins_door_clip local.higgins_spray_left local.higgins_spray_right:{
//=========================================================================

	//println "local.higgins_model: " local.higgins_model "  binding to: " local.higgins_origin
	local.higgins_model bind local.higgins_origin
	local.higgins_model notsolid

	//println "local.higgins_door: " local.higgins_door " binding to: " local.higgins_door_origin
	local.higgins_door notsolid
	local.higgins_door bind local.higgins_door_origin
	local.higgins_door_clip bind local.higgins_door_origin
	local.higgins_door_origin bind local.higgins_origin

	local.higgins_spray_left bind local.higgins_origin
	local.higgins_spray_right bind local.higgins_origin

	local.higgins_origin bind local.higgins_move

	if (local.higgins_origin.targetname == "higgins1"){
		local.higgins_clip bind local.higgins_origin
	}
	else{
		local.higgins_clip bind local.higgins_move2
	}

	local.higgins_move bind local.higgins_move2
	local.higgins_move2 bind $higgins_fleet

	//println "local.higgins_clip: " local.higgins_clip
	//println "local.higgins_clip.number_of_guys: " local.higgins_clip.number_of_guys

	for (local.i = 1 ; local.i <= local.higgins_clip.number_of_guys ; local.i ++ ){
		$(local.higgins_origin.targetname + "_ranger" + local.i + "_spot") bind local.higgins_clip
		//println "trying to bind: " local.higgins_origin.targetname "_ranger" local.i "_spot  to: " local.higgins_clip
	}

	local.higgins_clip hide
	local.higgins_door_clip hide

	//println local.higgins_clip " origin: " local.higgins_clip.origin
	//println local.higgins_door_clip " origin: " local.higgins_door_clip.origin

	//println local.higgins_move2 " origin: " local.higgins_move2.origin

	local.higgins_move2 time .1
	local.higgins_move time .1
	local.higgins_origin time .1
	local.higgins_origin rotatezdown 1.5
	local.higgins_origin movedown 20
	local.higgins_origin waitmove
}end

//  Higgins boat waving motions
//=========================================================================
higgins_wave_motions local.higgins_number:{
//=========================================================================
	self.stop = 0
	local.flip = 0
	self time 1
	local.first_test = 1

	local.random = randomfloat 3
	wait local.random

	while (self.stop == 0 ){
		if (local.first_test == 1){
			if (local.higgins_number == 1){
	//			println "starting higgins1 guys animating"
				thread higgins_ai_set_anim
				local.first_test = 0
			}
		}
		if (local.flip == 0){
			self rotatexup 1
		}else{
			self rotatexdown 1
		}

		$("higgins" + local.higgins_number + "_spray_right") anim start
		if (local.higgins_number == 1){
			//$higgins1_spray_right playsound "sound/environment/m3l1/amb_wave_01.wav" 0 2.5 256
			$higgins1_spray_right playsound wave_crash
		}

		self movedown 6
		self waitmove

		$("higgins" + local.higgins_number + "_spray_right") anim stop

		if (local.flip == 0){
			self rotatexup 1.5
		}else{
			self rotatexdown 1.5
		}

		$("higgins" + local.higgins_number + "_spray_left") anim start
		if (local.higgins_number == 1){
			//$higgins1_spray_left playsound "sound/environment/m3l1/amb_wave_01.wav" 0 2.5 256
			$higgins1_spray_left playsound wave_crash
		}

		self rotatezup 1.5
		self movedown 3
		self waitmove

		$("higgins" + local.higgins_number + "_spray_left") anim stop

		if (local.flip == 0){
			self rotatexup 1.5
		}else{
			self rotatexdown 1.5
		}

		self rotatezup 1.5
		self moveup 3
		self waitmove

		if (local.flip == 0){
			self rotatexup 1
		}else{
			self rotatexdown 1
		}

		self moveup 6
		self waitmove

		if (local.flip == 0){
			self rotatexdown 2.5
		}else{
			self rotatexup 2.5
		}

		self rotatezdown 1.5
		self moveup 3
		self waitmove

		if (local.flip == 0){
			self rotatexdown 2.5
		}else{
			self rotatexup 2.5
		}

		self rotatezdown 1.5
		self movedown 3
		self waitmove

		if (local.flip == 0){
			local.flip = 1
		}else{
			local.flip = 0
		}
	}
}end

//  Higgins boat forward / backward motions
//=========================================================================
higgins_forward_motions:{
//=========================================================================
	self.stop_forward_motion = 0

	while (self.stop_forward_motion == 0 ){
		local.random_time = (randomint 3 + 4)
		self time local.random_time
		local.move_distance = (randomint 48 + 96)

		self movenorth local.move_distance
		self waitmove

		local.random_time = randomint 2
		wait local.random_time

		self movesouth local.move_distance
		self waitmove

		wait local.random_time
	}
}end

// setting up the MG42's
//=========================================================================
setup_mg42:{
//=========================================================================
/*
end //chrissstrahl - fixme - temporary - disabled
end //chrissstrahl - fixme - temporary - disabled
end //chrissstrahl - fixme - temporary - disabled
end //chrissstrahl - fixme - temporary - disabled
*/

	/* //[200] Smithy - are these even used?
	$mg42_left1 burstfiresettings 0 0 0 0
	$mg42_left1 firedelay .2
	$mg42_left1 tracerfrequency 2
	$mg42_left1 maxyawoffset 45
	$mg42_left1 pitchcaps (0 45 0)
	$mg42_left1 setplayerusable 0
	$mg42_left1 bulletspread 5 7
	$mg42_left1 rendereffects "+dontdraw"
	$mg42_left1 setaimtarget $player //chrissstrahl fixme

	$mg42_left2 burstfiresettings 0 0 0 0
	$mg42_left2 firedelay .2
	$mg42_left2 tracerfrequency 2
	$mg42_left2 maxyawoffset 45
	$mg42_left2 pitchcaps (0 45 0)
	$mg42_left2 setplayerusable 0
	$mg42_left2 bulletspread 5 7
	$mg42_left2 rendereffects "+dontdraw"
	$mg42_left2 setaimtarget $player //chrissstrahl fixme
	*/
	
	$mg42_leftbunker1 burstfiresettings .01 .01 .25 .25 //[200] Smithy - slow down the firerate - stabilises the map
	$mg42_leftbunker1 firedelay .5
	$mg42_leftbunker1 tracerfrequency 1
	$mg42_leftbunker1 maxyawoffset 45
	$mg42_leftbunker1 pitchcaps (0 30 0)
	$mg42_leftbunker1 setplayerusable 0
	$mg42_leftbunker1 bulletspread 5 7
	$mg42_leftbunker1 rendereffects "+dontdraw"

	$mg42_leftbunker2 burstfiresettings .01 .01 .25 .25
	$mg42_leftbunker2 firedelay .5
	$mg42_leftbunker2 tracerfrequency 1
	$mg42_leftbunker2 maxyawoffset 60
	$mg42_leftbunker2 pitchcaps (0 30 0)
	$mg42_leftbunker2 setplayerusable 0
	$mg42_leftbunker2 bulletspread 5 7
	$mg42_leftbunker2 rendereffects "+dontdraw"

	//$mg42_middle1 burstfiresettings 1 3 .2 .75
	//$mg42_middle1 burstfiresettings 0 0 0 0
	//$mg42_middle1 firedelay .2
	//$mg42_middle1 tracerfrequency 2
	$mg42_middle1 maxyawoffset 45
	$mg42_middle1 pitchcaps (0 60 0)
	$mg42_middle1 setplayerusable 0
	//$mg42_middle1 bulletspread 2 2
	$mg42_middle1 rendereffects "+dontdraw"

	//$mg42_middle2 burstfiresettings 1 3 .2 .75
	//$mg42_middle2 burstfiresettings 0 0 0 0
	//$mg42_middle2 firedelay .2
	//$mg42_middle2 tracerfrequency 2
	$mg42_middle2 maxyawoffset 45
	$mg42_middle2 pitchcaps (0 60 0)
	$mg42_middle2 setplayerusable 0
	//$mg42_middle2 bulletspread 2 2
	$mg42_middle2 rendereffects "+dontdraw"

	// set for the opening shots into the players higgins boat
	$mg42_middle1 burstfiresettings 0 0 0 0
	$mg42_middle2 burstfiresettings 0 0 0 0
	$mg42_middle1 firedelay .1
	$mg42_middle2 firedelay .1
	$mg42_middle1 tracerfrequency 3
	$mg42_middle2 tracerfrequency 3
	$mg42_middle1 bulletspread 7 7
	$mg42_middle2 bulletspread 7 7


	$mg42_rightbunker1 burstfiresettings .01 .01 .25 .25 //[200] Smithy - slow down the firerate - stabilises the map
	$mg42_rightbunker1 firedelay .5
	$mg42_rightbunker1 tracerfrequency 1
	$mg42_rightbunker1 maxyawoffset 60
	$mg42_rightbunker1 pitchcaps (0 30 0)
	$mg42_rightbunker1 setplayerusable 0
	$mg42_rightbunker1 bulletspread 5 7
	$mg42_rightbunker1 rendereffects "+dontdraw"
	

	$mg42_rightbunker2 burstfiresettings .01 .01 .25 .25
	$mg42_rightbunker2 firedelay .5
	$mg42_rightbunker2 tracerfrequency 1
	$mg42_rightbunker2 maxyawoffset 60
	$mg42_rightbunker2 pitchcaps (0 30 0)
	$mg42_rightbunker2 setplayerusable 0
	$mg42_rightbunker2 bulletspread 5 7
	$mg42_rightbunker2 rendereffects "+dontdraw"


	/* //[200] Smithy - are these even used?
	$mg42_right1 burstfiresettings 0 0 0 0
	$mg42_right1 firedelay .2
	$mg42_right1 tracerfrequency 2
	$mg42_right1 maxyawoffset 60
	$mg42_right1 pitchcaps (0 45 0)
	$mg42_right1 setplayerusable 0
	$mg42_right1 bulletspread 5 7
	$mg42_right1 rendereffects "+dontdraw"
	$mg42_right1 setaimtarget $player //chrissstrahl fixme

	$mg42_right2 burstfiresettings 0 0 0 0
	$mg42_right2 firedelay .2
	$mg42_right2 tracerfrequency 2
	$mg42_right2 maxyawoffset 60
	$mg42_right2 pitchcaps (0 45 0)
	$mg42_right2 setplayerusable 0
	$mg42_right2 bulletspread 5 7
	$mg42_right2 rendereffects "+dontdraw"
	$mg42_right2 setaimtarget $player //chrissstrahl fixme
	*/

	$mg42_bunker rendereffects "+dontdraw"
	$mg42_bunker.maxyawoffset = 10
	$mg42_bunker maxyawoffset 15
	$mg42_bunker pitchcaps ( -45 10 0)
	$mg42_bunker setplayerusable 0
}end

// setup cover zones
//=========================================================================
setup_cover:{
//=========================================================================
	for (local.i = 1; local.i <= $cover_sound.size; local.i ++){
		local.lookup[$cover_sound[local.i].set] = local.i
	}

	for (local.i = 1; local.i <= $cover_trigger.size ; local.i ++){
		$cover_trigger[local.i].sound_index = local.lookup[$cover_trigger[local.i].set]

		//chrissstrahl - do this only in sp - we have a different approach for coop
		if(level.gametype == 0){
			$cover_trigger[local.i] thread cover_zone local.i
		}
	}

	local.lookup = NIL
}end

// setup the mortar puzzle
//=========================================================================
setup_mortar_puzzle:{
//=========================================================================

	// setup the mortar puzzle triggers with their respective mortars
	for (local.i = 1 ; local.i <= $mortar_puzzle.size ; local.i ++){
		// init the array counter
		local.array_index = 1

		// cycle through the mortars for a match
		for (local.j = 1 ; local.j <= $mortar.size ; local.j ++){
			// if a match is found, assign it's index into the trigger for fast lookup later
			if ($mortar_puzzle[local.i].zone == $mortar[local.j].zone){
				// for each mortar found in that zone, put it's index into an array in the trigger
				$mortar_puzzle[local.i].mortar_index[local.array_index] = local.j
				local.array_index ++
			}

			//waitframe
		}

		$mortar_puzzle[local.i] thread mortar_puzzle_trigger local.i
	}
}end

// setup the ambient mortars
//=========================================================================
setup_mortar_ambient:{
//=========================================================================

	// init index counters
	local.shore_index = 1
	local.lower_beach_index = 1
	local.upper_beach_index = 1
	local.shingle_index = 1

	// take the index of each ambient mortar and assign them to an array to store the indexes per location
	for (local.i = 1; local.i <= $mortar.size ; local.i ++){
		if ($mortar[local.i].location != NIL){
			//println "AMB MORTAR SETUP:  current mortar: " local.i "  :  " $mortar[local.i].location
        		switch ($mortar[local.i].location)
			{
				case "shore":
					level.mortar_shore[local.shore_index] = local.i
					//println "AMB MORTAR SETUP:  set to shore mortar: " local.shore_index "  : location :  " $mortar[local.i].location "  : index : " local.i "  : stuffed index : " level.mortar_shore[local.shore_index]
					local.shore_index ++
					break

				case "lower_beach":
					level.mortar_lower_beach[local.lower_beach_index] = local.i
					//println "AMB MORTAR SETUP:  set to lower_beach mortar: " local.lower_beach_index "  : location :  " $mortar[local.i].location "  : index : " local.i "  : stuffed index : " level.mortar_lower_beach[local.lower_beach_index]
					local.lower_beach_index ++
					break

				case "upper_beach":
					level.mortar_upper_beach[local.upper_beach_index] = local.i
					//println "AMB MORTAR SETUP:  set to upper_beach mortar: " local.upper_beach_index "  : location :  " $mortar[local.i].location "  : index : " local.i "  : stuffed index : " level.mortar_upper_beach[local.upper_beach_index]
					local.upper_beach_index ++
					break

				case "shingle":
					level.mortar_shingle[local.shingle_index] = local.i
					//println "AMB MORTAR SETUP:  set to shingle mortar: " local.shingle_index "  : location :  " $mortar[local.i].location "  : index : " local.i "  : stuffed index : " level.mortar_shingle[local.shingle_index]
					local.shingle_index ++
					break
			}
		}
	}
}end

// setup mg42 targets
//=========================================================================
setup_mg42_targets:{
//=========================================================================

	// bind the left targets to their origins
	for (local.i = 1 ; local.i <= $mg42_target_left.size ; local.i ++){
		for (local.j = 1 ; local.j <= $mg42_target_left_origin.size ; local.j ++){
			if ($mg42_target_left_origin[local.j].set == $mg42_target_left[local.i].set){
				$mg42_target_left[local.i] bind $mg42_target_left_origin[local.j]
				goto setup_mg42_targets_left_next
			}
			//waitframe
		}
		setup_mg42_targets_left_next:
	}

	// bind the right targets to their origins
	for (local.i = 1 ; local.i <= $mg42_target_right.size ; local.i ++){
		for (local.j = 1 ; local.j <= $mg42_target_right_origin.size ; local.j ++){
			if ($mg42_target_right_origin[local.j].set == $mg42_target_right[local.i].set){
				$mg42_target_right[local.i] bind $mg42_target_right_origin[local.j]
				goto setup_mg42_targets_right_next
			}
			//waitframe
		}
		setup_mg42_targets_right_next:
	}

	// start spinning the targets
	$mg42_target_left_origin[1] rotatey -30
	$mg42_target_left_origin[2] rotatey 30
	$mg42_target_left_origin[3] rotatey 45
	$mg42_target_left_origin[4] rotatey -45

	$mg42_target_right_origin[1] rotatey -30
	$mg42_target_right_origin[2] rotatey 30
	$mg42_target_right_origin[3] rotatey 45
	$mg42_target_right_origin[4] rotatey -45
}end

// setup the warning triggers
//=========================================================================
setup_warning_triggers:{
//=========================================================================

	for (local.i = 1 ; local.i <= $warning_left.size ; local.i ++){
		$warning_left[local.i] thread warning_left_triggers
	}

	for (local.i = 1 ; local.i <= $warning_right.size ; local.i ++){
		$warning_right[local.i] thread warning_right_triggers
	}
}end

// setup progress triggers
//=========================================================================
setup_progress:{
//=========================================================================
	for (local.i = 1 ; local.i <= $progress_player.size ; local.i ++){
		$progress_player[local.i] thread progress_player local.i
	}
}end

// setup ai groundtype triggers
//=========================================================================
setup_groundtype_triggers:{
//=========================================================================
	for (local.i = 1 ; local.i <= $ai_groundtype.size ; local.i ++){
		$ai_groundtype[local.i] thread ai_groundtype
	}
}end

// setup ai fodder guys
//=========================================================================
setup_ai_fodder:{
//=========================================================================

	for (local.i = 1 ; local.i <= 9 ; local.i ++){
		local.dead_dork = $("ai_fodder" + local.i)
		//println "SETUP AI FODDER: setting up fodder: " local.dead_dork
		local.dead_dork.number = local.i
		local.dead_dork thread ai_fodder
	}
}end

// setup ai fodder guys paths
//=========================================================================
setup_ai_fodder_paths:{
//=========================================================================
	for (local.i = 1; local.i <= 9 ; local.i ++){
		// build the targetnames for the path and it's extension
		local.path = $("ai_fodder" + local.i + "_path")
		local.path_ext = $("ai_fodder" + local.i + "_path_ext")

		// cycle through the path to match up it's extensions and grab it's index
		for (local.j = 1; local.j <= local.path.size ; local.j ++){
			for (local.k = 1; local.k <= local.path_ext.size ; local.k ++){
				// check for a matching set number
				if (local.path_ext[local.k].set == local.path[local.j].set){
					// assign the index into the base path
					local.path[local.j].ext_index = local.k
				}
			}
		}
	}
}end


//*************************************************************************************
//*************************************************************************************
//
// GAME OBJECT BACKGROUND THREADS
//
//*************************************************************************************
//*************************************************************************************

// progress triggers for tracking the player
//=========================================================================
progress_player local.index:{
//=========================================================================
	progress_player_loop:
	self waittill trigger

	level.progress = self.area

	//println "player is now in area: " level.progress

	if (level.progress == "shore"){
		// when the player is in water, give him more time
		if (getcvar(skill) == "0"){  // easy skill
			level.wait_interval = .75
		}
		else if (getcvar(skill) == "2"){  // hard skill
			level.wait_interval = .5
		}
		else{  // medium skill
			level.wait_interval = .6
		}

		level.wait_cycle_interval = 1.5
		level.target_offset = 55

		// change the ambient track
		forcemusic aux3 aux3

		if(level.gametype == 0){	//chrissstrahl - make sure we get the maximum in coop and keep the original in sp
			// change the world fog
			if (getcvar(g_ddayfog) == "2"){  // low setting
				$world farplane  2500
			}
			else if (getcvar(g_ddayfog) == "1"){  // medium setting
				$world farplane 5000
			}
			else{  // high setting
				$world farplane 8300
			}
		}
		else{	//chrissstrahl - COOP
			$world farplane 6000
		}
	}
	else if (level.progress == "lower_beach")
	{
		// when the player out of water, give him less time
		if (getcvar(skill) == "0"){  // easy skill
			level.wait_interval = .5
		}
		else if (getcvar(skill) == "2"){  // hard skill
			level.wait_interval = .4
		}
		else{  // medium skill
			level.wait_interval = .4
		}

		level.wait_cycle_interval = 1
		level.target_offset = 2

		// change the ambient track
		forcemusic aux3 aux3

		// change the world fog
		if(level.gametype == 0){	//chrissstrahl - make sure we get the maximum in coop and keep the original in sp
			if (getcvar(g_ddayfog) == "2"){  // low setting
				$world farplane  2000
			}
			else if (getcvar(g_ddayfog) == "1"){  // medium setting
				$world farplane 4500
			}
			else{  // high setting
				$world farplane 7500
			}
		}
		else{	//chrissstrahl - COOP
			$world farplane 6000
		}

		// remove the higgins2 boat
		if ( $higgins2 != NULL ){
			$higgins2 unbind
			$higgins2_model unbind
			$higgins2_clip unbind
			$higgins2_move unbind
			$higgins2_move2 unbind
			$higgins2_door unbind
			$higgins2_door_origin unbind
			$higgins2_door_clip unbind
			$higgins2_spray_left unbind
			$higgins2_spray_right unbind
			$higgins2_mortar unbind

			$higgins2 remove
			$higgins2_model remove
			$higgins2_clip remove
			$higgins2_move remove
			$higgins2_move2 remove
			$higgins2_door remove
			$higgins2_door_origin remove
			$higgins2_door_clip remove
			$higgins2_spray_left remove
			$higgins2_spray_right remove
			$higgins2_mortar remove
		}
	}
	else if (level.progress == "upper_beach")
	{
		// when the player out of water, give him less time
		if (getcvar(skill) == "0")  // easy skill
		{
			level.wait_interval = .5
		}
		else if (getcvar(skill) == "2")  // hard skill
		{
			level.wait_interval = .4
		}
		else  // medium skill
		{
			level.wait_interval = .4
		}

		level.wait_cycle_interval = 1.25
		level.target_offset = 2

		// change the ambient track
		forcemusic aux4 aux4

		// show the water
		$ocean_wavy show

		// change the world fog
		if(level.gametype == 0){	//chrissstrahl - make sure we get the maximum in coop and keep the original in sp
			if (getcvar(g_ddayfog) == "2"){  // low setting
					$world farplane  2000
			}
			else if (getcvar(g_ddayfog) == "1"){  // medium setting
				$world farplane 4000
			}
			else{  // high setting
				$world farplane 6700
			}
		}
		else{//chrissstrahl - coop
			$world farplane 6000
		}
	}
	else if (level.progress == "pre_shingle")
	{
		// when the player out of water, give him less time
		if (getcvar(skill) == "0")  // easy skill
		{
			level.wait_interval = .6
		}
		else if (getcvar(skill) == "2")  // hard skill
		{
			level.wait_interval = .5
		}
		else  // medium skill
		{
			level.wait_interval = .5
		}

		level.wait_cycle_interval = 2
		level.target_offset = 16

		// hide the water
		$ocean_wavy hide

		// change the world fog
		$world farplane 5700
	}
	else if (level.progress == "shingle")
	{
		// when the player out of water, give him less time
		if (getcvar(skill) == "0"){  // easy skill
			level.wait_interval = .7
		}
		else if (getcvar(skill) == "2"){  // hard skill
			level.wait_interval = .5
		}
		else{  // medium skill
			level.wait_interval = .6
		}

		level.wait_cycle_interval = 1.5
		level.target_offset = 16

		// trigger the mg42_attack script
		trigger $mg42_waittrigger

		// hide the guns and gunners
		trigger $shingle_waittrigger
	}
	else if (level.progress == "shelf")
	{
		// unhide the guns and gunners
		trigger $shelf_waittrigger

		// start the shelf killplayer routine
		level.onshelf = 0
		trigger $shelf_killplayer_waittrigger
	}
	else if (level.progress == "shelf_bunker")
	{
		// reset the onshelf player killing variable
		level.onshelf = 1
	}
	else if (level.progress == "craters")
	{
		$mg42_middle1 firetype "bullet"
		$mg42_middle2 firetype "bullet"
		level.flags[craters] = 1
		// deny the player access back to the base of the bunker
//		$sequence_12_playerclip2 solid // NO, THE PLAYER SHALL NOT BE DENIED.
	}
	else if (level.progress == "trench")
	{
		// change the ambient track
		forcemusic aux4 aux4

		// change the world fog
		if(level.gametype == 0){	//chrissstrahl - make sure we get the maximum in coop and keep the original in sp
			if (getcvar(g_ddayfog) == "2"){  // low setting
				$world farplane  3300
			}
			else if (getcvar(g_ddayfog) == "1"){  // medium setting
				$world farplane 3300
			}
			else{  // high setting
				$world farplane 5300
			}
		}
		else{	//chrissstrahl - coop
			$world farplane 5300
		}
	}
	else if (level.progress == "bunker")
	{
		// change the ambient track
		forcemusic aux5 aux5

		// change the world fog
		if(level.gametype == 0){	//chrissstrahl - make sure we get the maximum in coop and keep the original in sp
			if (getcvar(g_ddayfog) == "2"){  // low setting
				$world farplane  3300
			}
			else if (getcvar(g_ddayfog) == "1"){  // medium setting
				$world farplane 3300
			}
			else{  // high setting
				$world farplane 4500
			}
		}
		else{	//chrissstrahl - coop
			$world farplane 4500
		}
	}
	wait .5

	goto progress_player_loop
}end

// shingle trigger for hiding guns and guys
//=========================================================================
shingle_trigger:{
//=========================================================================

	$shingle_waittrigger waittill trigger

	// hide the guns and their gunners
	$mg42_leftbunker1 rendereffects "+dontdraw"
	$mg42_leftbunker2 rendereffects "+dontdraw"
	$mg42_middle1 rendereffects "+dontdraw"
	$mg42_middle2 rendereffects "+dontdraw"
	$mg42_rightbunker1 rendereffects "+dontdraw"
	$mg42_rightbunker2 rendereffects "+dontdraw"

	$mg42_leftbunker1_gunner hide
	$mg42_leftbunker1_gunner notsolid
	$mg42_leftbunker2_gunner hide
	$mg42_leftbunker2_gunner notsolid
	$mg42_middle1_gunner hide
	$mg42_middle1_gunner notsolid
	$mg42_middle2_gunner hide
	$mg42_middle2_gunner notsolid
	$mg42_rightbunker1_gunner hide
	$mg42_rightbunker1_gunner notsolid
	$mg42_rightbunker2_gunner hide
	$mg42_rightbunker2_gunner notsolid

	goto shingle_trigger
}end

// shelf trigger for showing guns and guys
//=========================================================================
shelf_trigger:{
//=========================================================================
	$shelf_waittrigger waittill trigger

	// show the guns and their gunners
	$mg42_leftbunker1 rendereffects "-dontdraw"
	$mg42_leftbunker2 rendereffects "-dontdraw"
	$mg42_middle1 rendereffects "-dontdraw"
	$mg42_middle2 rendereffects "-dontdraw"
	$mg42_rightbunker1 rendereffects "-dontdraw"
	$mg42_rightbunker2 rendereffects "-dontdraw"

	$mg42_leftbunker1_gunner show
	$mg42_leftbunker1_gunner solid
	$mg42_leftbunker2_gunner show
	$mg42_leftbunker2_gunner solid
	$mg42_middle1_gunner show
	$mg42_middle1_gunner solid
	$mg42_middle2_gunner show
	$mg42_middle2_gunner solid
	$mg42_rightbunker1_gunner show
	$mg42_rightbunker1_gunner solid
	$mg42_rightbunker2_gunner show
	$mg42_rightbunker2_gunner solid
	goto shelf_trigger
}end

// mortar puzzle triggers
//=========================================================================
mortar_puzzle_trigger local.index:{
//=========================================================================
	local.player = parm.other
//=========================================================================
	mortar_puzzle_trigger_loop:
//=========================================================================
	if(self.flags["activeFunc"] != NIL){
		iprintlnbold_noloc("MORTAR PUZZLE multicall")
		end
	}
	self.flags["activeFunc"] = 1
	self waittill trigger


	//println "MORTAR PUZZLE: player is touching a mortar puzzle trigger"
	//iprintlnbold_noloc("MORTAR PUZZLE: player is touching a mortar puzzle trigger")

	while ((exec coop_mod/replace.scr::istouching self) == 1){	//chrissstrahl - coop compatibility
		level.inpuzzle = local.index
	//	println "player is in cover: " level.cover_index
		trigger $mortar_waittrigger
		wait .2
	}

	level.inpuzzle = 0
	self.flags["activeFunc"] = NIL
	goto mortar_puzzle_trigger_loop
}end

// mortar puzzle routine
//=========================================================================
mortar_puzzle:{
//=========================================================================

//=========================================================================
mortar_puzzle_loop:
//=========================================================================

	$mortar_waittrigger waittill trigger

	if (level.inpuzzle == 0){
		// triggered slightly before puzzle was set
		println "ARTY: PUZZLE WAS TRIGGERD BEFORE PLAYER.INPUZZLE WAS SET!!!"
		goto mortar_puzzle_loop
	}

	println "ARTY1: PICKING FIRST MORTAR: " level.inpuzzle
	local.arty_trigger = level.inpuzzle
	local.arty = (randomint $mortar_puzzle[local.arty_trigger].mortar_index.size + 1)
	local.arty_previous = local.arty

	//println "ARTY1: number of mortars in current trigger: " $mortar_puzzle[local.arty_trigger].mortar_index.size
	//println "ARTY1: mortar choosen: " local.arty
	//println "ARTY1: mortar choosens index: " $mortar_puzzle[local.arty_trigger].mortar_index[local.arty]


	//iprintlnbold_noloc("MORTAR selected")


	exec coop_mod/replace.scr::playsound warn_player_arty_cover //chrissstrahl - replaced player entity
	//println "\n\n\nINCOMING ARTILLERY!!  TAKE COVER YOU FOOL!!!"

	wait 1

	println "ARTY1: FIRING FIRST MORTAR"
	$mortar[$mortar_puzzle[local.arty_trigger].mortar_index[local.arty]] waitthread mortar_call

	mortar_puzzle_fireagain:
	wait (randomfloat .3 + .25)

	println "ARTY2: STARTING TO PICK THE SECOND MORTAR: " level.inpuzzle
	// if the player has left the puzzle area, then just bomb the last known location
	if (level.inpuzzle != 0){
	//	println "ARTY2: player still in mortar puzzle area"
	//	println "ARTY2: players current location: " level.inpuzzle
		local.arty_trigger = level.inpuzzle
	}

	//println "ARTY2: PICKING SECOND MORTAR"
	mortar_puzzle_pickagain:
	// pick another arty to fire, if it's the same as the last one, re-pick
	local.arty = (randomint $mortar_puzzle[local.arty_trigger].mortar_index.size + 1)

	//println "ARTY2: number of mortars in current trigger: " $mortar_puzzle[local.arty_trigger].mortar_index.size
	//println "ARTY2: mortar choosen: " local.arty
	//println "ARTY2: mortar choosens index: " $mortar_puzzle[local.arty_trigger].mortar_index[local.arty]
	//println "ARTY2: previous mortar choosen: " local.arty_previous

	if (local.arty == local.arty_previous){
	//	println "ARTY2: picked the same mortar, picking again"
		goto mortar_puzzle_pickagain
	}

	local.arty_previous = local.arty

	// fire the second mortar
	$mortar[$mortar_puzzle[local.arty_trigger].mortar_index[local.arty]] waitthread mortar_call

	// pick a random number to determine if it should fire another mortar
	local.go_again = randomint 4

	if (local.go_again == 1){
	//	println "ARTY3: do another hit"
		goto mortar_puzzle_fireagain
	}

	//println "MORTAR PUZZLE: skill: " (getcvar(skill))
	if (getcvar(skill) == "0"){  // easy skill
		//println "MORTAR PUZZLE: waiting on easy"
		wait (randomfloat 2 + 5)
	}
	else if (getcvar(skill) == "2"){  // hard skill
		//println "MORTAR PUZZLE: waiting on hard"
		wait (randomfloat 2 + 2)
	}
	else{  // player is in medium skill
		//println "MORTAR PUZZLE: waiting on medium"
		wait (randomfloat 2 + 3)
	}

	//println "ARTY3: restarting the loop"
	goto mortar_puzzle_loop
}end

// ambient mortars
//=========================================================================
mortar_ambient:{
//=========================================================================

//=========================================================================
	mortar_ambient_loop:
//=========================================================================
	local.position = level.progress
	//println "AMBIENT MORTARS: Player is in: " level.progress

	if (local.position != "bunker" && level.inpuzzle == 0){
		//println "AMBIENT MORTARS: Mortars to choose: " local.position
		switch (local.position)
		{
			case "shore":
				local.choice = (randomint level.mortar_shore.size) + 1
				if (local.choice == local.previous_choice){
					goto mortar_ambient_loop
				}
				local.previous_choice = local.choice
				$mortar[level.mortar_shore[local.choice]] waitthread mortar_call
				break

			case "lower_beach":
				local.choice = (randomint level.mortar_lower_beach.size) + 1
				if (local.choice == local.previous_choice){
					goto mortar_ambient_loop
				}
				local.previous_choice = local.choice
				$mortar[level.mortar_lower_beach[local.choice]] waitthread mortar_call
				break

			case "upper_beach":
				local.choice = (randomint level.mortar_upper_beach.size) + 1
				if (local.choice == local.previous_choice){
					goto mortar_ambient_loop
				}
				local.previous_choice = local.choice
				$mortar[level.mortar_upper_beach[local.choice]] waitthread mortar_call
				break

			default:
				local.choice = (randomint level.mortar_shingle.size) + 1
				if (local.choice == local.previous_choice){
					goto mortar_ambient_loop
				}
				local.previous_choice = local.choice
				$mortar[level.mortar_shingle[local.choice]] waitthread mortar_call
				break
		}
	}
	wait (randomint 4 + 4)

	goto mortar_ambient_loop
}end

// warning left triggers
//=========================================================================
warning_left_triggers:{
//=========================================================================
	//chrissstrahl - modified for coop
	self thread maps/m3l1a/coopified.scr::warningTriggers 10000
}end

// warning right triggers
//=========================================================================
warning_right_triggers:{
//=========================================================================
	//chrissstrahl - modified for coop
	self thread maps/m3l1a/coopified.scr::warningTriggers 10000
}end

// warning the player near a boarder, then killing him if he doesn't retreat
//=========================================================================
boarder_warning:{
//=========================================================================

//=========================================================================
boarder_warning_loop:
//=========================================================================
	$warning_waittrigger waittill trigger
	local.player = parm.other
	if(local.player == NIL || local.player.targetname != "player"){
		iprintlnbold_noloc("DEV: boarder_warning_loop, no player")
	}

	// give the proper warning
	if (level.warning_type == "mortar"){
		local.player playsound warn_player_arty
		local.death_type = "arty"
		//println "\n\n\nsoldiers yelling....I DUNNO, LOTS OF ARTILLERY OVER THERE!!!"
	}
	else{
		if ((randomint 2) == 0){
			local.player playsound warn_player_arty
			local.death_type = "arty"
			//println "\n\n\nsoldiers yelling....I DUNNO, LOTS OF ARTILLERY OVER THERE!!!"
		}
		else{
			local.player playsound warn_player_mg
			local.death_type = "mg"
			//println "\n\n\nsoldiers yelling....YA KNOW...THOSE MG42S REALLY SEEM TO LIKE THAT OPEN SPACE OVER THERE!!!"
		}
	}

	// wait several seconds, then check again
	// if in water, wait a little longer
	if (level.progress == "shore"){
		wait 5
	}else{
		wait 4
	}

	println ("warning is " + level.warning)

	if (level.warning == 1 && local.player != NULL && local.player.health > 0){ //chrissstrahl - coop
		if (local.death_type == "arty"){
			// kill them with arty
			// spawn either water or dirt mortar dependant upon player location
			if (level.progress == "shore"){
				spawn animate/fx_mortar_water targetname player_mortar_of_doom
			}else{
				spawn animate/fx_mortar_dirt targetname player_mortar_of_doom
			}

			// position the mortar
			local.temp_origin = local.player.origin //chrissstrahl - coop
			local.temp_origin[2] += 32
			$player_mortar_of_doom.origin = local.temp_origin

			// shoot zhem......shoot zhem both!!
			thread jitter_large
			$player_mortar_of_doom anim start
			local.player thread bhit 10000 //chrissstrahl - coop
		}
		else{
			// kill them with mg
			local.mg42_1 = $("mg42_" + level.warning_side + "1")
			local.mg42_2 = $("mg42_" + level.warning_side + "2")
			//println "local.mg42_1: " local.mg42_1
			//println "local.mg42_2: " local.mg42_2

			// start the turrets firing
			local.mg42_1 startfiring
			local.mg42_2 startfiring

			// put the smack down on the player  BAD PLAYER,  YOU NO GO THERE NO MORE!!!!
			local.player thread bhit 100 //chrissstrahl - coop
			thread jitter_mg
			wait .4

			local.player thread bhit 10000 //chrissstrahl - coop
			thread jitter_mg

			// stop firing the turrets, our work here is done
			local.mg42_1 stopfiring
			local.mg42_2 stopfiring
		}
	}
	else{
		goto boarder_warning_loop
	}
}end

// cover zone threads
//=========================================================================
cover_zone local.index:{
//=========================================================================

//=========================================================================
cover_zone_loop:
//=========================================================================
	//chrissstrahl - this is only done in sp
	self waittill trigger

	//chrissstrahl - make sure we don't get multiple loop issue
	if( self.flags["isActive"] != NIL ){ end }
	self.flags["isActive"] = 1//chrissstrahl

	while ($player istouching self == 1){
		level.cover_index = local.index
	//	println "player is in cover: " level.cover_index
	//	println "players cover is stand: " self.stand
		if (self.stand == 0){
	//		println "player is in crouching cover: " level.cover_index
        	if ($player getposition != "crouching"){
	//			println "the player was NOT crouching in cover: " level.cover_index
                trigger $mg42_waittrigger
			}
		}
		wait .5
	}

	level.cover_index = 0
	trigger $mg42_waittrigger
	self.flags["isActive"] = NIL //chrissstrahl
	goto cover_zone_loop
}end

// MG42 attack thread for when player is in the open
//=========================================================================
mg42_attack_beach:{
//=========================================================================
	//[200] Smithy - added fixes to prevent sound errors as increased firerate in SH/BT of MGs when used by AI 
	//causes sounds to stop working. The game just can't handle so many bullets hitting water and ground...

	//[200] Smithy - so I've slowed down the firerate a little bit using burstfiresettings (firedelay does nothing now...)

	$mg42_middle1 burstfiresettings .01 .01 .08 .08 //[200] Smithy - re-enable - slows down the firing - stabilises map
	//$mg42_middle1 burstfiresettings 0 0 0 0
	$mg42_middle1 firedelay .4
	$mg42_middle1 tracerfrequency 1
	//$mg42_middle1 maxyawoffset 60
	//$mg42_middle1 pitchcaps (0 60 0)
	//$mg42_middle1 setplayerusable 0
	$mg42_middle1 AIbulletspread 2 2 		  	//[200] Smithy - use AI bullet spread now 

	$mg42_middle2 burstfiresettings .01 .01 .08 .08 //1 3 .2 .75 	//[200] Smithy - re-enable - slows down the firing - stabilises map
	//$mg42_middle2 burstfiresettings 0 0 0 0
	$mg42_middle2 firedelay .4
	$mg42_middle2 tracerfrequency 1
	//$mg42_middle2 maxyawoffset 60
	//$mg42_middle2 pitchcaps (0 60 0)
	//$mg42_middle2 setplayerusable 0
	$mg42_middle2 AIbulletspread 2 2           	//[200] Smithy - use AI bullet spread now

	$mg42_middle1 startfiring
	$mg42_middle2 startfiring

	//chrissstrahl - run coop function instead
	if(level.gametype != 0){
		thread maps/m3l1a/coopified.scr::mg42AttackBeach
		end
	}

//=========================================================================
	mg42_attack_beach_loop:
//=========================================================================
	//if (level.cover_index == 0 && level.inpuzzle == 0)
	if (level.cover_index == 0){
		/*
		println "wait_interval: " level.wait_interval
		println "wait_cycle: " level.wait_cycle_interval
		println "target_offset: " level.target_offset
		*/
//=========================================================================
		mg42_attack_fire:
//=========================================================================
		//println "ahh....player stepped out of cover, I HAVE YOU NOW!!!"

		// bullet run-up warning
		for (local.i = 4 ; local.i >= 1 ; local.i --){
			local.temp_origin = $player.origin
			local.temp_origin[1] += (128 * local.i)
			local.temp_origin[2] += level.target_offset

			$player_target.origin = local.temp_origin
			$mg42_middle1 setaimtarget $player_target
			$mg42_middle2 setaimtarget $player_target

			wait level.wait_interval
		}

//=========================================================================
		mg42_attack_keepfiring:
//=========================================================================
		// if the player is on the shelf, stop this thread

		//	println "progress: " level.progress
		if (level.progress == "shelf"){
			end
		}

		for (local.j = 1 ; local.j <= 8 ; local.j ++){
			// set the aim target to be a the player while hitting
			local.temp_origin = $player.origin
			local.temp_origin[2] += level.target_offset

			$player_target.origin = local.temp_origin

			if (level.cover_index != 0){
	//			println "I'm shooting at the player, he's in cover"
				if ($cover_trigger[level.cover_index].stand != 1){
	//				println "He's not behind standing cover"
					if (local.player getposition != "crouching"){
	//					println "He's not crouching"
						thread mg42_damage_player
					}
					else{
	//					println "He's crouching"
						thread mg42_incover_player
					}
				}
				else{
	//				println "He's behind standing cover"
					thread mg42_incover_player
				}
			}
			else{
	//			println "He's in the open"
				thread mg42_damage_player
			}
			wait (randomfloat(0.6) + 0.3)
		}

		// if the player is still in the open, keep pegging him
		if (level.cover_index != 0){
			if ($cover_trigger[level.cover_index].stand == 0){
				if ($player getposition != "crouching"){
	//				println "the player didn't settle behind crouching cover, keep nailing him"
					$player playsound warn_player_cover
					goto mg42_attack_keepfiring
				}
			}
		}
		else{
	//		println "the player didn't settle behind cover, keep nailing him"
			$player playsound warn_player_cover
			goto mg42_attack_keepfiring
		}
	}
	else if (level.cover_index != 0 && $cover_trigger[level.cover_index].stand == 0){
		if ($player getposition != "crouching"){
	//		println "the player didn't settle behind crouching cover, keep nailing him"
			$player playsound warn_player_cover
			goto mg42_attack_fire
		}
	}
//=========================================================================
	mg42_attack_abort:
//=========================================================================
	// set the MG42 turrets to fire at normal targets
	local.index = (randomint 3 + 1)

	$mg42_middle1 setaimtarget $mg42_target_left[local.index]
	$mg42_middle2 setaimtarget $mg42_target_right[local.index]

	// wait for the player to leave cover
	$mg42_waittrigger waittill trigger
	wait level.wait_cycle_interval
	goto mg42_attack_beach_loop
}end

// Normal damage
//=========================================================================
normal_damage local.amount:{
//=========================================================================
	$player normal_damage local.amount (0 -1 0)
}end

// mg42 damage player routine
//=========================================================================
mg42_damage_player:{
//=========================================================================
		//println "MG42 DAMAGE PLAYER: skill: " (getcvar(skill))
		if (getcvar(skill) == "0"){  // player is in easy skill
			//println "MG42 DAMAGE PLAYER: doing 5"
			$player thread normal_damage 5
		}
		else if (getcvar(skill) == "2"){  // player is in hard skill
			//println "MG42 DAMAGE PLAYER: doing 15"
			$player thread normal_damage 15
		}
		else{  // player is in medium skill
			//println "MG42 DAMAGE PLAYER: doing 9.5"
			$player thread normal_damage 9.5
		}

	$player playsound snd_bh_flesh
	thread jitter_mg
	//println "silly player, take THAT"
}end

// mg42 player is in cover routine
//=========================================================================
mg42_incover_player:{
//=========================================================================
	thread jitter_mg_cover

	if ($cover_trigger[level.cover_index].cover_type == "hedgehog"){
	//	println "trigger set: " $cover_trigger[level.cover_index].set
	//	println "trigger sound index: " $cover_trigger[level.cover_index].sound_index
	//	println "sound set: " $cover_sound[$cover_trigger[level.cover_index].sound_index].set
	//	println "OOOOO, just come out from that hedgehog, it won't hurt.......FOR LONG!!!"
		$cover_sound[$cover_trigger[level.cover_index].sound_index] playsound hedgehog_supression
	}
	else if ($cover_trigger[level.cover_index].cover_type == "ramp"){
	//	println "Damn log ramps, I KNEW we shouldn't have set those up out there!!!"
		$cover_sound[$cover_trigger[level.cover_index].sound_index] playsound ramp_supression
	}
	else if ($cover_trigger[level.cover_index].cover_type == "crater"){
	//	println "Get out of that crater there boy, I GOT SOME LOVIN' FOR YOU!!!!!"
		$cover_sound[$cover_trigger[level.cover_index].sound_index] playsound crater_supression
	}
}end

// mg42_middle1 gun puzzle start
//=========================================================================
mg42_middle1_trigger:{
//=========================================================================
/*
end //chrissstrahl - fixme - temporary - disabled
end //chrissstrahl - fixme - temporary - disabled
end //chrissstrahl - fixme - temporary - disabled
end //chrissstrahl - fixme - temporary - disabled
*/

	$mg42_middle1_waittrigger waittill trigger

	//println "activating middle1 mg42"

	$mg42_middle1.max_range = 5000
	$mg42_middle1.maxyawoffset = 60
	$mg42_middle1.pitchcaps = (0 60 0)
	$mg42_middle1 firetype "bullet"
	$mg42_middle1 thread global/mg42_active.scr::mg42
	local.player = exec coop_mod/replace.scr::player_closestTo $mg42_middle2 //chrissstrahl - coop compatible
	$mg42_middle1.setaimtarget = local.player
}end

// mg42_middle2 gun puzzle start
//=========================================================================
mg42_middle2_trigger:{
//=========================================================================
/*
end //chrissstrahl - fixme - temporary - disabled
end //chrissstrahl - fixme - temporary - disabled
end //chrissstrahl - fixme - temporary - disabled
end //chrissstrahl - fixme - temporary - disabled
*/

	$mg42_middle2_waittrigger waittill trigger

	//println "activating middle2 mg42"

	$mg42_middle2.max_range = 4000
	$mg42_middle2.maxyawoffset = 60
	$mg42_middle2.pitchcaps = (0 60 0)
	$mg42_middle2 firetype "bullet"
	$mg42_middle2 thread global/mg42_active.scr::mg42
	local.player = exec coop_mod/replace.scr::player_closestTo $mg42_middle2 //chrissstrahl - coop compatible
	$mg42_middle2.setaimtarget = local.player
}end

// craters cover
//=========================================================================
craters_cover:{
//=========================================================================
	//println "craters cover self: " self
	local.target = $(self.targetname + "_target")

	//println "local.target: " local.target
	local.target thread local.target.targetname

	//chrissstrahl - handle coop
	if(level.gametype != 0){
		exec maps/m3l1a/coopified.scr::craters_cover
		end
	}

	while(1){
		self waittill trigger

		while ($player istouching self){
			if ($player getposition != "crouching"){
				//$mg42_middle1.setaimtarget = $player
				//$mg42_middle2.setaimtarget = $player
				$mg42_middle1 firetype "bullet"
				$mg42_middle2 firetype "bullet"
			}
			else{
				//$mg42_middle1.setaimtarget = local.target
				//$mg42_middle2.setaimtarget = local.target
				$mg42_middle1 firetype "fakebullet"
				$mg42_middle2 firetype "fakebullet"
			}
			wait .5
		}

		$mg42_middle1 firetype "bullet"
		$mg42_middle2 firetype "bullet"
	}
}end

// craters cover1 target move
//=========================================================================
craters_cover1_target:{
//=========================================================================
	local.i = 1
	self time 1

	while (local.i == 1){
		self movewest 160
		self movenorth 32
		self moveup 32
		self waitmove

		self moveeast 160
		self movesouth 32
		self movedown 32
		self waitmove

		self moveeast 64
		self movesouth 96
		self movedown 8
		self waitmove

		self movewest 64
		self movenorth 96
		self moveup 8
		self waitmove
	}
}end

// craters cover3 target move
//=========================================================================
craters_cover3_target:{
//=========================================================================
	local.i = 1
	self time 1

	while (local.i == 1){
		self moveeast 172
		self movenorth 128
		self moveup 16
		self waitmove

		self moveeast 296
		self movesouth 144
		self movedown 40
		self waitmove

		self movewest 296
		self movenorth 144
		self moveup 40
		self waitmove

		self movewest 172
		self movesouth 128
		self movedown 16
		self waitmove
	}
}end

// craters cover grenade tossing for the second crater
//=========================================================================
craters_cover2:{
//=========================================================================
	self waittill trigger
}end

// mg42 killplayer routine on shelf
//=========================================================================
mg42_shelf_killplayer:{
//=========================================================================
	$shelf_killplayer_waittrigger waittill trigger

	//chrissstrahl - kill fast in coop
	if(level.gametype != 0){
		parm.other thread bhit 5000
		end
	}

	wait 4
	while (level.onshelf == 0){
		$player thread bhit 50
		thread jitter_mg
		wait (randomfloat .5 + .4)
	}
	goto mg42_shelf_killplayer
}end

// tellls the bunker mg42s to shoot their fake targets
//=========================================================================
mg42_shoot_targets:{
//=========================================================================

//=========================================================================
	mg42_shoot_targets_loop:
//=========================================================================
	//end //[200] Smithy - not used anymore
	

	// set the MG42 turrets to fire at normal targets
	local.index1 = (randomint 3 + 1)
	local.index2 = (randomint 3 + 1)

	$mg42_leftbunker1 setaimtarget $mg42_target_left[local.index1]
	$mg42_rightbunker2 setaimtarget $mg42_target_right[local.index2]

	$mg42_leftbunker1 startfiring
	$mg42_rightbunker2 startfiring

	wait (randomint 3 + 2)

	$mg42_leftbunker1 stopfiring
	$mg42_rightbunker2 stopfiring

	// set the MG42 turrets to fire at normal targets
	local.index1 = (randomint 3 + 1)
	local.index2 = (randomint 3 + 1)

	$mg42_leftbunker2 setaimtarget $mg42_target_left[local.index1]
	$mg42_rightbunker1 setaimtarget $mg42_target_right[local.index2]

	$mg42_leftbunker2 startfiring
	$mg42_rightbunker1 startfiring

	wait (randomint 3 + 2)

	$mg42_leftbunker2 stopfiring
	$mg42_rightbunker1 stopfiring

	goto mg42_shoot_targets_loop
}end

// trigger to set the AIs ground type as they pass through
//=========================================================================
ai_groundtype:{
//=========================================================================
	self waittill trigger

	local.ai = parm.other
	//println "AI SETGROUND TYPE:  setting: " local.ai " groundtype to: " self.type
	local.ai exec global/setgroundtype.scr self.type
	goto ai_groundtype
}end


//*************************************************************************************
//*************************************************************************************
//
// GAME THREADS
//
//*************************************************************************************
//*************************************************************************************

// starting boat ride in
//=========================================================================
main_boat_ride:{
//=========================================================================
	//change the ambient track
	forcemusic aux1 aux1

	if(level.coop_devTest != 1){	//chrissstrahl
		wait 1.5

		// June 6, 1944
		showmenu dday1
		hidemouse

		wait 3.25
		// Omaha Beach, Charlie Sector
		showmenu dday2
		hidemouse

		wait 3
	}

	fadein 3.5 0 0 0 1

	if(level.coop_devTest != 1){	//chrissstrahl
		wait 2
		hidemenu dday1
		hidemenu dday2
		hidemouse
	}

	waitthread global/objectives.scr::add_objectives 1 1 "Get to the shingle." $shingle_objective.origin

	// coxswaine and main captain pep-talk
	$higgins1_coxswain say dfr_scripted_m3l1_002i  // clear the ramp
	$higgins1_coxswain waittill saydone

	if( level.coop_devTest != 1){//chrissstrahl - hack for faster dev
		wait .5

		$higgins1_coxswain say dfr_scripted_m3l1_001i  // 30 seconds
		$higgins1_coxswain waittill saydone

		wait 1

		$higgins1_ranger10 say streamed_dfr_scripted_M3L1_005a  // alright men
		$higgins1_ranger10 waittill saydone

		wait .5

		$higgins1_ranger10 say streamed_dfr_scripted_M3L1_006a  // port side, your with powell
		$higgins1_ranger10 waittill saydone

		wait .5
	}

	thread main_boat_ride_fog
	thread main_boat_ride_go

	$higgins1_ranger10 say streamed_dfr_scripted_M3L1_007a
	$higgins1_ranger10 waittill saydone


	wait .75
	//waitthread global/objectives.scr::blank_objectives
	waitthread global/objectives.scr::add_objectives 1 2  // get to the shingle, setting to active

	wait .5
	waitthread global/objectives.scr::current_objectives 1  // setting get to shingle as current
}end

// start moving the boats towards the shore
//=========================================================================
main_boat_ride_go:{
//=========================================================================

	// move the higgins fleet to first point
	// original fleet time here should be 20
	if( level.coop_devTest ){//chrissstrahl - hack for faster dev
		$higgins_fleet time 1
	}else{
		//chrissstrahl - don't take so long in mp
		if(level.gametype != 0){ $higgins_fleet time 10 }
		else{ $higgins_fleet time 20 }
	}
	$higgins_fleet movenorth 1800
	$higgins_fleet waitmove

	$higgins2_move.stop_forward_motion = 1
	$higgins3_move.stop_forward_motion = 1
	$higgins4_move.stop_forward_motion = 1
	$higgins5_move.stop_forward_motion = 1
	$higgins6_move.stop_forward_motion = 1

	//println "MAINRIDE: blowing the second higgins boat"

	//stop and blow the higgins boat
	$higgins2.stop = 1
	thread higgins2_blow

	//println "MAINRIDE: moving after the second higgins boat"

	// original fleet time should be 10 here
	if( level.coop_devTest ){//chrissstrahl - hack for faster dev
		$higgins_fleet time 1
	}else{
		$higgins_fleet time 10
	}
	$higgins_fleet movenorth 600
	$higgins_fleet waitmove

	//println "MAINRIDE: DONE moving after the second higgins boat"

	// land the higgin's boats
	thread higgins1_landing
	thread higgins3_landing
	thread higgins4_landing
	thread higgins5_landing
	thread higgins6_landing
}end

// higgins boat 1 landing
//=========================================================================
higgins1_landing:{
//=========================================================================
	//println "MAINRIDE: higgins1 starting it's landing"

	if( level.coop_devTest){//chrissstrahl - hack for faster dev
		$higgins1.stop = 1
		$higgins1_move2 time 1
		$higgins1_move2 movenorth 2084
		$higgins1_move2 waitmove
	}else{
		$higgins1_move2 time 3
		$higgins1_move2 rotatexup 15
		$higgins1_move2 rotateydown 5
		$higgins1_move2 moveeast 48
		$higgins1_move2 movenorth 32
		$higgins1_move2 waitmove

		$higgins1_move2 time 2
		$higgins1_move2 rotatexdown 15
		$higgins1_move2 rotateyup 5
		$higgins1_move2 moveeast 24
		$higgins1_move2 movenorth 160
		$higgins1_move2 waitmove

		$higgins1_move2 time 10
		$higgins1_move2 rotateydown 7
		$higgins1_move2 movenorth 1224
		$higgins1_move2 moveeast 32
		$higgins1_move2 waitmove

		$higgins1_move2 time 6
		$higgins1_move2 rotateyup 7
		$higgins1_move2 movenorth 368
		$higgins1_move2 moveeast 32
		$higgins1_move2 waitmove

		$higgins1.stop = 1

		$higgins1_move2 time 7
		$higgins1_move2 movenorth 300
		$higgins1_move2 waitmove
	}

	thread jitter_mg_cover
	thread higgins1_opening_sequence

	//put the AI into disembarking positions
	thread higgins1_ready

	$higgins1 time 2
	$higgins1 rotatezup 2
	$higgins1 movedown 8
	$higgins1 waitmove

	$ocean_wavy show
	wait .5
	$ocean_calm hide

	wait 1

	$mg42_middle1 setaimtarget $higgins1_clip
	$mg42_middle2 setaimtarget $higgins1_clip

	wait 1.5

	$mg42_middle1 startfiring
	$mg42_middle2 startfiring

	// unglue the rest of the AI in the boat
	$higgins1_ranger1 unglue
	$higgins1_ranger1 solid
	$higgins1_ranger1 physics_on
	$higgins1_ranger2 unglue
	$higgins1_ranger2 solid
	$higgins1_ranger2 physics_on
	$higgins1_ranger3 unglue
	$higgins1_ranger3 solid
	$higgins1_ranger3 physics_on
	$higgins1_ranger4 unglue
	$higgins1_ranger4 solid
	$higgins1_ranger4 physics_on
	$higgins1_ranger5 unglue
	$higgins1_ranger5 solid
	$higgins1_ranger5 physics_on
	$higgins1_ranger6 unglue
	$higgins1_ranger6 solid
	$higgins1_ranger6 physics_on
	$higgins1_ranger7 unglue
	$higgins1_ranger7 solid
	$higgins1_ranger7 physics_on
	$higgins1_ranger8 unglue
	$higgins1_ranger8 solid
	$higgins1_ranger8 physics_on
	$higgins1_ranger9 unglue
	$higgins1_ranger9 solid
	$higgins1_ranger9 physics_on
	$higgins1_ranger10 unglue
	$higgins1_ranger10 solid
	$higgins1_ranger10 physics_on
	$higgins1_coxswain solid
	$higgins1_coxswain physics_on
}end

// for when the door opens, timing the sounds and initial deaths and hits
//=========================================================================
higgins1_opening_sequence:{
//=========================================================================
	//$player playsound "sound/vehicle/higgins/mec_whistle_01.wav" 1 .5
	//println "\n\n\nwhistle sounds"

	// autosave the game
	exec global/autosave.scr 1

	$higgins1_door playsound higgins_whistle

	// if in easy mode, display a hint message about the obstacles
	if (getcvar(skill) == "0")
	{
		iprintlnbold "Use beach obstacles as cover from enemy machinegun fire."
	}

	wait 2
	//$higgins1_door playsound "sound/vehicle/higgins/door_higgins_04.wav" 0 1
	$higgins1_door playsound higgins_door_opening

	wait 2.3
	// disembark - getting the guys off the boat

	$higgins1_door_origin time .65
	$higgins1_door_origin rotatezdown 90
	$higgins1_door_origin move

	///****** temprem
	//turn off g_synchronousclients since the boat ride is over
	//setcvar "g_synchronousclients" "0"

	level.scripted_damage = 1

	wait .6
	//$player playsound higgins_door_opening_hits
	$higgins1_playerspot playsound higgins_bullet_hits	//chrissstrahl - coop mod compatible, play sound on glue entity rather than on player
	$higgins1_playerspot playsound higgins_guys_rush	//chrissstrahl - coop mod compatible, play sound on glue entity rather than on player

	// start the ai fodder dorks
	trigger $ai_fodder_waittrigger
	wait .5

	$higgins1_ranger1 thread higgins1_disembark_kill
	wait .2

	$higgins1_ranger2 thread higgins1_disembark_kill2
	wait .25

	$higgins1_ranger3 thread higgins1_disembark_kill
	wait .15

	$higgins1_ranger4 thread higgins1_disembark_kill2
	wait .3

	$higgins1_ranger5 thread higgins1_disembark_kill2

	// TEMP TEMP TEMP
	//$higgins1_ranger6 remove
	//$higgins1_ranger8 remove
	//$higgins1_ranger9 remove
	//$higgins1_ranger10 remove


	// start the beach
	thread start_beach


	//chrissstrahl - stuff in coop
	if(level.gametype != 0){
		exec coop_mod/replace.scr::unglue

		for (local.i = 1;local.i <= $player.size;local.i++){
			local.player =  $player[local.i]
			if( local.player != NULL ){
				exec coop_mod/main.scr::playerPlaceAtSpawn local.i
				local.player show
			}
		}

		thread maps/m3l1a/coopified.scr::manageRespawns
	}// release the player, give him starting weapons
	else{
		$player unglue
		$player physics_on
		$player item weapons/colt45.tik
		$player item weapons/M2frag_grenade_sp_start.tik
		$player item weapons/ThompsonSMG.tik
		$player ammo pistol 40
		$player ammo rifle 15
		$player ammo smg 120
		$player ammo agrenade 4
		$player useweaponclass smg
	}
	
	thread coop_stopBoatSpawnManager //[202][hotfix] Smithy

	// start the player pusher
	$higgins1_clip_player time 3
	$higgins1_clip_player movenorth 340
	$higgins1_clip_player move

	wait 2
	$higgins1_ranger6.isinsequence = 1
	$higgins1_ranger7.isinsequence = 1
	$higgins1_ranger8.isinsequence = 1
	$higgins1_ranger9.isinsequence = 1
	$higgins1_ranger10.isinsequence = 1

	$higgins1_ranger6 thread higgins1_disembark_ranger6
	$higgins1_ranger7 thread higgins1_disembark_ranger7
	$higgins1_ranger8 thread higgins1_disembark_ranger8
	$higgins1_ranger9 thread higgins1_disembark_ranger9
	$higgins1_ranger10 thread higgins1_disembark_ranger10
	wait 5

	// kill the coxswain
	$higgins1_coxswain thread bhit 1000 -1
}end

// higgins1 ranger6 disembark
//=========================================================================
higgins1_disembark_ranger6:{
//=========================================================================
	self runto $higgins1_disembark_left
	self waittill movedone

	self runto $higgins1_ranger6_path_0
	self waittill movedone
}end

// higgins1 ranger7 disembark
//=========================================================================
higgins1_disembark_ranger7:{
//=========================================================================
	wait .4

	self runto $higgins1_disembark_right
	self waittill movedone

	self runto $higgins1_ranger7_path_0
	self waittill movedone
}end

// higgins1 ranger8 disembark
//=========================================================================
higgins1_disembark_ranger8:{
//=========================================================================
	wait .6

	self runto $higgins1_disembark_left
	self waittill movedone

	self runto $higgins1_ranger8_path_0
	self waittill movedone
}end

// higgins1 ranger9 disembark
//=========================================================================
higgins1_disembark_ranger9:{
//=========================================================================
	wait 1

	self runto $higgins1_disembark_right
	self waittill movedone

	self runto $higgins1_ranger9_path_0
	self waittill movedone

	thread higgins1_disembark_firstsequence
}end

// higgins1 ranger6 disembark
//=========================================================================
higgins1_disembark_ranger10:{
//=========================================================================
	self runto $higgins1_disembark_left
	self waittill movedone

	self runto $higgins1_ranger10_path_0
	self waittill movedone
}end

// kill the higgins boat front guys
//=========================================================================
higgins1_disembark_kill:{
//=========================================================================
	self runto $higgins1_deathnode1
	wait (randomfloat .3 + .5)

	self thread bhit 40 -1
	wait .2

	self thread bhit 40 -1
	wait .3

	self thread bhit 1000 -1
}end

// kill the higgins boat first guys
//=========================================================================
higgins1_disembark_kill2:{
//=========================================================================
	self runto $higgins1_deathnode2
	wait (randomfloat .3 + .5)

	self thread bhit 40 -1
	wait .2

	self thread bhit 40 -1
	wait .1

	self thread bhit 1000 -1
}end

// higgins boat 3 landing
//=========================================================================
higgins3_landing:{
//=========================================================================
	wait 1.5

	$higgins3_move2 time 3
	$higgins3_move2 rotatexdown 12
	$higgins3_move2 rotateyup 5
	$higgins3_move2 movewest 24
	$higgins3_move2 movenorth 32
	$higgins3_move2 waitmove

	$higgins3_move2 time 2
	$higgins3_move2 rotatexup 12
	$higgins3_move2 rotateydown 5
	$higgins3_move2 movewest 12
	$higgins3_move2 movenorth 128
	$higgins3_move2 waitmove

	$higgins3_move2 time 13
	$higgins3_move2 rotateydown 7
	$higgins3_move2 movenorth 1100
	$higgins3_move2 moveeast 120
	$higgins3_move2 waitmove

	$higgins3_move2 time 5
	$higgins3_move2 rotateyup 7
	$higgins3_move2 movenorth 300
	$higgins3_move2 moveeast 90
	$higgins3_move2 waitmove

	$higgins3.stop = 1

	$higgins3_move2 time 6
	$higgins3_move2 movenorth 250
	$higgins3_move2 waitmove

	$higgins3 time 2
	$higgins3 rotatezup 2
	$higgins3 moveup 8
	$higgins3 waitmove
	wait 2

	$higgins3_door_origin time .75
	$higgins3_door_origin rotatezdown 90
	$higgins3_door_origin waitmove

	$higgins3_model anim removesoldiers
	wait 1

	// spawn the actual guys in and run them off the boat
	spawn "models/human/dday_ranger_private" targetname "higgins3_ranger1" gun "m1 garand"
	spawn "models/human/dday_ranger_private" targetname "higgins3_ranger2" gun "m1 garand"
	spawn "models/human/dday_ranger_private" targetname "higgins3_ranger3" gun "bar"
	spawn "models/human/dday_ranger_sergeant" targetname "higgins3_ranger4" gun "m1 garand"
	spawn "models/human/dday_ranger_lieutenant" targetname "higgins3_ranger5" gun "thompson"

	// prep them for the world
	$higgins3_ranger1 thread ai_friendly_setup
	$higgins3_ranger2 thread ai_friendly_setup
	$higgins3_ranger3 thread ai_friendly_setup
	$higgins3_ranger4 thread ai_friendly_setup
	$higgins3_ranger5 thread ai_friendly_setup

	// position them on the boat
	$higgins3_ranger1.origin = $higgins3_ranger1_spot.origin
	$higgins3_ranger2.origin = $higgins3_ranger2_spot.origin
	$higgins3_ranger3.origin = $higgins3_ranger3_spot.origin
	$higgins3_ranger4.origin = $higgins3_ranger4_spot.origin
	$higgins3_ranger5.origin = $higgins3_ranger5_spot.origin

	$higgins3_ranger1.isinsequence = 1
	$higgins3_ranger2.isinsequence = 1
	$higgins3_ranger3.isinsequence = 1
	$higgins3_ranger4.isinsequence = 1
	$higgins3_ranger5.isinsequence = 1

	while (level.m3l1a_sequence_isupdating == 1){
		println "HIGGINS 3 DISEMBARK: waiting to update"
		wait .2
	}

	level.m3l1a_sequence_isupdating = 1

	thread ai_add_todo $higgins3_ranger1 level.m3l1a_sequence "move" $higgins3_disembark_left
	thread ai_add_todo $higgins3_ranger2 level.m3l1a_sequence "move" $higgins3_disembark_right
	thread ai_add_todo $higgins3_ranger3 level.m3l1a_sequence "move" $higgins3_disembark_left
	thread ai_add_todo $higgins3_ranger4 level.m3l1a_sequence "move" $higgins3_disembark_right
	thread ai_add_todo $higgins3_ranger5 level.m3l1a_sequence "move" $higgins3_disembark_left
	wait .2

	thread ai_add_todo $higgins3_ranger1 level.m3l1a_sequence "move"
	thread ai_add_todo $higgins3_ranger2 level.m3l1a_sequence "move"
	thread ai_add_todo $higgins3_ranger3 level.m3l1a_sequence "move"
	thread ai_add_todo $higgins3_ranger4 level.m3l1a_sequence "move"
	thread ai_add_todo $higgins3_ranger5 level.m3l1a_sequence "move"

	level.m3l1a_sequence_isupdating = 0
	// get their butt moving
	wait .2

	$higgins3_ranger1.isinsequence = 0
	wait .1

	$higgins3_ranger2.isinsequence = 0
	wait .2

	$higgins3_ranger3.isinsequence = 0
	$higgins3_ranger4.isinsequence = 0
	wait .2

	$higgins3_ranger5.isinsequence = 0
}end

// higgins boat 4 landing
//=========================================================================
higgins4_landing:{
//=========================================================================
	wait 2.5

	$higgins4_move2 time 13
	$higgins4_move2 rotateyup 24
	$higgins4_move2 movewest 512
	$higgins4_move2 movenorth 900
	$higgins4_move2 waitmove

	$higgins4_move2 time 8
	$higgins4_move2 rotateydown 24
	$higgins4_move2 movewest 448
	$higgins4_move2 movenorth 600
	$higgins4_move2 waitmove

	$higgins4.stop = 1

	$higgins4_move2 time 7
	$higgins4_move2 movenorth 350
	$higgins4_move2 waitmove

	$higgins4 time 2
	$higgins4 rotatezup 2
	$higgins4 moveup 8
	$higgins4 waitmove
	wait 2

	$higgins4_door_origin time .75
	$higgins4_door_origin rotatezdown 90
	$higgins4_door_origin waitmove

	$higgins4_model anim removesoldiers
}end

// higgins boat 5 landing
//=========================================================================
higgins5_landing:{
//=========================================================================
	wait 1.5

	$higgins5_move2 time 3
	$higgins5_move2 rotatexup 12
	$higgins5_move2 rotateydown 5
	$higgins5_move2 moveeast 24
	$higgins5_move2 movenorth 32
	$higgins5_move2 waitmove

	$higgins5_move2 time 2
	$higgins5_move2 rotatexdown 12
	$higgins5_move2 rotateyup 5
	$higgins5_move2 moveeast 12
	$higgins5_move2 movenorth 128
	$higgins5_move2 waitmove

	$higgins5_move2 time 15
	$higgins5_move2 rotateydown 11
	$higgins5_move2 movenorth 1424
	$higgins5_move2 moveeast 160
	$higgins5_move2 waitmove

	$higgins5_move2 time 7
	$higgins5_move2 rotateyup 11
	$higgins5_move2 movenorth 400
	$higgins5_move2 moveeast 110
	$higgins5_move2 waitmove

	$higgins5.stop = 1

	$higgins5_move2 time 6
	$higgins5_move2 movenorth 250
	$higgins5_move2 waitmove

	$higgins5 time 2
	$higgins5 rotatezup 2
	$higgins5 moveup 8
	$higgins5 waitmove

	wait 2

	$higgins5_door_origin time .75
	$higgins5_door_origin rotatezdown 90
	$higgins5_door_origin move

	$higgins5_model anim removesoldiers

	// spawn the actual guys in and run them off the boat
	spawn "models/human/dday_ranger_private" targetname "higgins5_ranger1" gun "m1 garand"
	spawn "models/human/dday_ranger_private" targetname "higgins5_ranger2" gun "m1 garand"
	spawn "models/human/dday_ranger_private" targetname "higgins5_ranger3" gun "bar"
	spawn "models/human/dday_ranger_sergeant" targetname "higgins5_ranger4" gun "m1 garand"
	spawn "models/human/dday_ranger_lieutenant" targetname "higgins5_ranger5" gun "thompson"

	// prep them for the world
	$higgins5_ranger1 thread ai_friendly_setup
	$higgins5_ranger2 thread ai_friendly_setup
	$higgins5_ranger3 thread ai_friendly_setup
	$higgins5_ranger4 thread ai_friendly_setup
	$higgins5_ranger5 thread ai_friendly_setup

	// position them on the boat
	$higgins5_ranger1.origin = $higgins5_ranger1_spot.origin
	$higgins5_ranger2.origin = $higgins5_ranger2_spot.origin
	$higgins5_ranger3.origin = $higgins5_ranger3_spot.origin
	$higgins5_ranger4.origin = $higgins5_ranger4_spot.origin
	$higgins5_ranger5.origin = $higgins5_ranger5_spot.origin

	$higgins5_ranger1.isinsequence = 1
	$higgins5_ranger2.isinsequence = 1
	$higgins5_ranger3.isinsequence = 1
	$higgins5_ranger4.isinsequence = 1
	$higgins5_ranger5.isinsequence = 1

	while (level.m3l1a_sequence_isupdating == 1){
		println "HIGGINS 5 DISEMBARK: waiting to update"
		wait .2
	}

	level.m3l1a_sequence_isupdating = 1

	thread ai_add_todo $higgins5_ranger1 level.m3l1a_sequence "move" $higgins5_disembark_left
	thread ai_add_todo $higgins5_ranger2 level.m3l1a_sequence "move" $higgins5_disembark_right
	thread ai_add_todo $higgins5_ranger3 level.m3l1a_sequence "move" $higgins5_disembark_left
	thread ai_add_todo $higgins5_ranger4 level.m3l1a_sequence "move" $higgins5_disembark_right
	thread ai_add_todo $higgins5_ranger5 level.m3l1a_sequence "move" $higgins5_disembark_left
	wait .2

	thread ai_add_todo $higgins5_ranger1 level.m3l1a_sequence "move"
	thread ai_add_todo $higgins5_ranger2 level.m3l1a_sequence "move_mortar_death" NIL NIL 8
	thread ai_add_todo $higgins5_ranger3 level.m3l1a_sequence "move"
	thread ai_add_todo $higgins5_ranger4 level.m3l1a_sequence "move_mg_death" NIL NIL 8.5
	thread ai_add_todo $higgins5_ranger5 level.m3l1a_sequence "move"

	level.m3l1a_sequence_isupdating = 0
	// get their butt moving
	wait .2

	$higgins5_ranger1.isinsequence = 0
	wait .1

	$higgins5_ranger2.isinsequence = 0
	wait .2

	$higgins5_ranger3.isinsequence = 0
	$higgins5_ranger4.isinsequence = 0
	wait .1

	$higgins5_ranger5.isinsequence = 0
}end

// higgins boat 6 landing
//=========================================================================
higgins6_landing:{
//=========================================================================
	wait 2.5

	$higgins6_move2 time 16
	$higgins6_move2 rotateydown 24
	$higgins6_move2 moveeast 512
	$higgins6_move2 movenorth 1300
	$higgins6_move2 waitmove

	$higgins6_move2 time 10
	$higgins6_move2 rotateyup 24
	$higgins6_move2 moveeast 448
	$higgins6_move2 movenorth 900
	$higgins6_move2 waitmove

	$higgins6.stop = 1

	$higgins6_move2 time 8.5
	$higgins6_move2 movenorth 400
	$higgins6_move2 waitmove

	$higgins6 time 2
	$higgins6 rotatezup 2
	$higgins6 moveup 8
	$higgins6 waitmove
	wait 2

	$higgins6_door_origin time .75
	$higgins6_door_origin rotatezdown 90
	$higgins6_door_origin waitmove

	$higgins6_model anim removesoldiers
}end

// blow the 2nd higgins boat
//=========================================================================
higgins2_blow:{
//=========================================================================
	//println "MAINRIDE: higgins2 blowup thread start"
	wait 6

	//println "MAINRIDE: higgins2 blowup mortar leadin"

	$higgins1_playerspot playsound arty_leadin	//chrissstrahl - coop mod compatible, play sound on glue entity rather than on player
	wait 1.1

	$higgins2_mortar anim start
	$higgins2 playsound higgins_explosion
	$higgins2 playsound higgins_blowup_guys
	thread jitter_large
	thread higgins1_look

	//change the ambient track
	forcemusic aux2 aux2

	$higgins2_blowme1 unbind
	$higgins2_blowme2 unbind
	$higgins2_blowme3 unbind

	//$higgins2_blowme1 notsolid
	//$higgins2_blowme2 notsolid
	//$higgins2_blowme3 notsolid

	$higgins2_blowme1 show
	$higgins2_blowme2 show
	$higgins2_blowme3 show

	$higgins2_blowme1 thread higgins2_mortar_death
	$higgins2_blowme2 thread higgins2_mortar_death
	$higgins2_blowme3 thread higgins2_mortar_death

	//$higgins2_blowme1 remove
	//$higgins2_blowme2 remove
	//$higgins2_blowme3 remove

	$higgins2_model model "vehicles/higgins_damage.tik"

	$higgins1_playerspot playsound snd_step_equipment	//chrissstrahl - coop mod compatible, play sound on glue entity rather than on player
	wait .6

	$higgins1_playerspot playsound snd_step_equipment	//chrissstrahl - coop mod compatible, play sound on glue entity rather than on player
	wait 2

	$higgins2 time 15
	$higgins2 rotatezup 7
	$higgins2 movedown 96
	$higgins2 movenorth 96
	$higgins2 waitmove

	$higgins2 unbind
	$higgins2 remove
	$higgins2_move unbind
	$higgins2_move remove
	$higgins2_move2 unbind
	$higgins2_move2 remove
	$higgins2_door_origin unbind
	$higgins2_door_origin remove
	$higgins2_door_clip unbind
	$higgins2_door_clip remove
	$higgins2_spray_left unbind
	$higgins2_spray_left remove
	$higgins2_spray_right unbind
	$higgins2_spray_right remove
}end

// guys flying out of the higgins2
//=========================================================================
higgins2_mortar_death:{
//=========================================================================
	local.choice = randomint 3

	switch (local.choice)
	{
		case 0:
			self anim_noclip higgins_mortar_medium
			break

		case 1:
			self anim_noclip higgins_mortar_twist
			break

		case 2:
			self anim_noclip higgins_mortar_flip
			break
	}
	self waittill animdone
	self remove
}end

// pulling the fog back
//=========================================================================
main_boat_ride_fog:{
//=========================================================================
	println "FARPLANE: the g_ddayfog value: " (getcvar(g_ddayfog))

	if( level.gametype == 0 ){	//chrissstrahl - keep handle in sp
		if (getcvar(g_ddayfog) == "2"){  // low setting
			local.farplane_start = 2000
			local.farplane_done =  2500
		}
		else if (getcvar(g_ddayfog) == "1"){  // medium setting
			local.farplane_start = 3500
			local.farplane_done = 5000
		}
		else{  // high setting
			local.farplane_start = 3500
			local.farplane_done = 8300
		}
	}else{	//chrissstrahl - coop
		local.farplane_start = 3500
		local.farplane_done = 7000
	}

	println "FARPLANE: starting fog: " local.farplane_start
	println "FARPLANE: rolling back fog to: " local.farplane_done

	for (local.i = local.farplane_start ; local.i <= local.farplane_done ; local.i += 50){
		$world farplane local.i
		wait .1
	}
}end

// higgins runup mortars
//=========================================================================
higgins_runup_mortar1:{
//=========================================================================
	$higgins_runup_mortar1 waitthread mortar_call
	wait 1.3

	//make the guys in the higgins boat crouch "down" a bit after the first mortar hits
	thread higgins1_crouch
}end
//=========================================================================
higgins_runup_mortar2:{
//=========================================================================
	$higgins_runup_mortar2 thread mortar_call
	wait 1.5

	//make the guys in the higgins boat flinch
	thread higgins1_flinch
}end
//=========================================================================
higgins_runup_mortar3:{
//=========================================================================
	$higgins_runup_mortar3 thread mortar_call
	wait 1.2

	//make the guys in the higgins boat flinch
	thread higgins1_flinch
}end
//=========================================================================
higgins_runup_mortar4:{
//=========================================================================
	$higgins_runup_mortar4 thread mortar_call
	wait 1.4

	//make the guys in the higgins boat flinch
	thread higgins1_flinch
}end
//=========================================================================
higgins_runup_mortar5:{
//=========================================================================
	$higgins_runup_mortar5 thread mortar_call
	wait 1.5

	//make the guys in the higgins boat flinch
	thread higgins1_flinch
}end
//=========================================================================
higgins_runup_mortar6:{
//=========================================================================
	$higgins_runup_mortar6 thread mortar_call
	wait 1.3

	//make the guys in the higgins boat flinch
	thread higgins1_flinch
}end

// player has entered the beach, let's kick it
//=========================================================================
start_beach:{
//=========================================================================
	// set particular variables
	level.wait_interval = .6
	level.wait_cycle_interval = 2
	level.target_offset = 55
	level.progress = "shore"

	// start the gun turrets shooting at their targets
	thread mg42_shoot_targets

	// start the warning threads
	thread boarder_warning

	// start the mortar puzzle
	thread mortar_puzzle

	// start the ambient mortars
	thread mortar_ambient

	// start the gun turrets attacking the player when not in cover
	wait 2
	thread mg42_attack_beach
}end

// mg42 puzzle in the craters start
//=========================================================================
mg42_crater_puzzle_start:{
//=========================================================================
	trigger $mg42_middle1_waittrigger
	trigger $mg42_middle2_waittrigger
}end

//  Dust triggers in the bunker
//=========================================================================
bunker_dust_trigger:{
//=========================================================================
	while(1){
		//chrissstrahl - singleplayer variant
		if(level.gametype == 0){
			while (level.progress == "bunker"){
				$player playsound arty_exp_interior
				thread jitter_medium

				for (local.i = 1 ; local.i <= $bunker_dust1.size ; local.i ++){
					$bunker_dust1[local.i] anim start
					wait (randomfloat .15 + .1)
				}

				wait (randomint 5 + 15)
			}
			wait 5
		}
		//chrissstrahl - coop variant
		else{
			for (local.i = 1 ; local.i <= $bunker_dust1.size ; local.i ++){
				$bunker_dust1[local.i] anim start
				wait (randomfloat .15 + .1)
			}
			wait (randomint 5 + 15)
		}
	}
}end

// give the player the springfield
//=========================================================================
playerweapon_springfield_give:{
//=========================================================================
	//chrissstrahl - don't in coop
	//if(level.gametype != 0){ end } //[200] Smithy - do do in coop

	// remove the fake weapon
	$playerweapon_springfield remove

	//[200] Smithy - old way
	// give the player the weapon and arm it
	//$player take models/weapons/m1_garand.tik
	//wait .1
	//$player item weapons/Springfield.tik
	//$player useweaponclass rifle

	//[200] Smithy - new way - coop compatible
	thread coop_mod/replace.scr::takePlayerWeapon "models/weapons/m1_garand.tik"
	thread coop_mod/replace.scr::givePlayerWeapon "weapons/Springfield.tik" parm.other "one" .1 //[200] Smithy - give weapon and use it (after delay)

}end

// activate the mg42 in the trench bunker
//=========================================================================
mg42_bunker:{
//=========================================================================
	$mg42_bunker thread global/mg42_active.scr::mg42
	$mg42_bunker rendereffects "-dontdraw"

	// have the mg42 shooting into the corridor
	spawn script_model targetname "new_target"
	local.target = $(new_target)
	local.target model fx/dummy.tik

	local.target.health = 1000000
	local.target.origin = $mg42_bunker_target.origin

	$mg42_bunker.setaimtarget = local.target
	wait 1

	$trench_ranger say streamed_dfr_scripted_M3L1_106f  //hold up....there's an MG42 down.....
	$trench_ranger waittill saydone
	wait 1

	$trench_ranger anim trench_idle_down

	// wait till the gunner is dead
	while (isalive $mg42_bunker_gunner){	//chrissstrahl - multiplayer compatible
		local.player = exec coop_mod/replace.scr::player_closestTo $mg42_bunker_target
		$mg42_bunker.setaimtarget = local.player
		wait .5
	}

	// add objective
	waitthread global/objectives.scr::add_objectives 7 2 "Infiltrate the bunker." $end_level.origin
	waitthread global/objectives.scr::current_objectives 7

	// have the captain come up and give the rest of the orders
	spawn "models/human/dday_ranger_captain" targetname "trench_captain" gun "thompson"
	spawn "models/human/dday_ranger_sergeant" targetname "trench_sergeant" gun "m1 garand"

	$trench_captain exec global/disable_ai.scr
	$trench_sergeant exec global/disable_ai.scr

	$trench_captain.origin = (2056.00 4680.00 -496.00)
	$trench_sergeant.origin = (1992.00 4656.00 -496.00)

	$trench_captain runto $trench_captain_path
	$trench_sergeant runto $trench_sergeant_path

	//$trench_captain waittill movedone
	wait 4

	$trench_captain waitexec coop_mod/replace.scr::turnto
	$trench_captain waittill turndone

	$trench_captain turnto NULL

	$trench_captain exec coop_mod/replace.scr::lookat

	$trench_captain say streamed_dfr_scripted_M3L1_108a  //powell, go scout out the bunker, medic....
	$trench_captain waittill saydone
	wait .5

	$trench_captain lookat $trench_ranger
	$trench_captain turnto $trench_ranger
	$trench_captain waittill turndone

	$trench_captain turnto NULL

	// make the trench captain kneel down and inspect the wounded soldier
	$trench_captain anim fallen
}end

// give the player the bangalores
//=========================================================================
playeritem_bangalore_give:{
//=========================================================================
	$bangalore1 remove
	$bangalore2 remove
	$bangalore3 remove

	thread global/items.scr::add_item "bangalores"

	waitthread global/objectives.scr::add_objectives 3 3  // marking get the bangalores complete
	waitthread global/objectives.scr::add_objectives 4 2 "Bring the bangalores back to the shingle." $shingle_ranger1.origin
	waitthread global/objectives.scr::current_objectives 4

	// get the next sequence going
	thread sequence_10_shingle_start

	// spawn a reinforcement wave
	thread spawn_shingle_reinforcement_wave
}end

// the player enters the trench
//=========================================================================
enter_trench:{
//=========================================================================
	// complete the objective
	waitthread global/objectives.scr::add_objectives 6 3  // completing get to the trench
	waitthread global/objectives.scr::current_objectives 0

	// position the trench ranger
	$trench_ranger anim trench_idle_up
}end

//  end level thread
//=========================================================================
end_level:{
//=========================================================================
	// mark the last objective as completed
	waitthread global/objectives.scr::add_objectives 7 3  // comleting infiltrate the bunker

	// end the level
	exec global/missioncomplete.scr m3l1b 1
}end


//*************************************************************************************
//*************************************************************************************
//
// BEACH SEQUENCE THREADS
//
//*************************************************************************************
//*************************************************************************************

// AI getting blown up by squib mortars
// 2 guys out of higgins5 at start
//=========================================================================
higgins5_ranger2_0_center_squibmortar1 local.parm1 local.parm2 local.parm3 local.parm4:{
//=========================================================================
	// parm1 is unused
	// parm2 is unused
	// parm3 is unused
	// parm4 is unused
	$higgins5_ranger2 thread ai_mortar_death "water"
	wait .75

	$higgins5_ranger4 thread ai_mg_death
}end

// AI sequences
// rangers have just gotten off of higgins1
//=========================================================================
higgins1_disembark_firstsequence:{
//=========================================================================
	//$higgins1_ranger6 nodamage //chrissstrahl - null
	$higgins1_ranger7 nodamage
	$higgins1_ranger8 nodamage
	$higgins1_ranger9 nodamage
	$higgins1_ranger10 nodamage
	wait 3

	// conversation between the private and the sergeant
	local.choice = (randomint 2)

	$higgins1_ranger7 lookat $higgins1_ranger9
	$higgins1_ranger9 lookat $higgins1_ranger7

	if (local.choice == 0){
		$higgins1_ranger9 say streamed_dfr_scripted_M3L1_046e  //sir sir it's a massacre....
	}else{
		$higgins1_ranger9 say streamed_dfr_scripted_M3L1_048e  //we don't stand a chance.....
	}

	$higgins1_ranger9 waittill saydone
	wait .3

	$higgins1_ranger7 say dfr_scripted_M3L1_017f  //we're getting off this damn beach....
	$higgins1_ranger7 waittill saydone

	// randomly choose if they want to say a few more lines
	local.choice = (randomint 2)
	wait .2

	if (local.choice == 0){
		$higgins1_ranger8 lookat $higgins1_ranger7
		$higgins1_ranger8 say streamed_dfr_scripted_M3L1_018e  //what's the rallying point....
		wait .1

		$higgins1_ranger7 lookat $higgins1_ranger8
		$higgins1_ranger9 lookat $higgins1_ranger8
		wait .1

		$higgins1_ranger6 lookat $higgins1_ranger8
		$higgins1_ranger10 lookat $higgins1_ranger8

		$higgins1_ranger8 waittill saydone
		wait .2

		$higgins1_ranger7 say streamed_dfr_scripted_M3L1_019f-2  //anywhere but here, stick close......
		wait .1

		$higgins1_ranger9 lookat $higgins1_ranger7
		$higgins1_ranger6 lookat $higgins1_ranger7
		wait .1

		$higgins1_ranger6 lookat $higgins1_ranger7
		$higgins1_ranger10 lookat $higgins1_ranger7

		$higgins1_ranger7 waittill saydone
		wait .2
	}

	$higgins1_ranger6 lookat NULL
	$higgins1_ranger7 lookat NULL
	$higgins1_ranger8 lookat NULL
	$higgins1_ranger9 lookat NULL
	$higgins1_ranger10 lookat NULL

	//$higgins1_ranger6.isinsequence = 0 //chrissstrahl - NULL
	$higgins1_ranger7.isinsequence = 0
	$higgins1_ranger8.isinsequence = 0
	$higgins1_ranger9.isinsequence = 0
	$higgins1_ranger10.isinsequence = 0

	//$higgins1_ranger6 takedamage //chrissstrahl - NULL
	$higgins1_ranger7 takedamage
	$higgins1_ranger8 takedamage
	$higgins1_ranger9 takedamage
	$higgins1_ranger10 takedamage

	if ($player_sequence_1_center != NULL){
		trigger $player_sequence_1_center
	}
}end

// higgins1_ranger10 yelling at guys to move up the shingle
//=========================================================================
higgins1_ranger10_2_center_speak:{
//=========================================================================
	$higgins1_ranger6 nodamage
	$higgins1_ranger7 nodamage
	$higgins1_ranger8 nodamage
	$higgins1_ranger9 nodamage
	$higgins1_ranger10 nodamage

	//$higgins1_ranger6.isinsequence = 1//chrissstrahl - null
	$higgins1_ranger7.isinsequence = 1
	$higgins1_ranger8.isinsequence = 1
	$higgins1_ranger9.isinsequence = 1

	$higgins1_ranger10 say dfr_scripted_M3L1_014a  //move up to the shingle!!
	wait .2

	//$higgins1_ranger6 lookat $higgins1_ranger10
	$higgins1_ranger7 lookat $higgins1_ranger10
	wait .2

	$higgins1_ranger8 lookat $higgins1_ranger10
	$higgins1_ranger9 lookat $higgins1_ranger10

	$higgins1_ranger10 waittill saydone
	wait .2

	if !(isalive $higgins1_ranger6){
		goto higgins1_ranger10_2_center_speak_end
	}

	$higgins1_ranger6 say streamed_dfr_scripted_M3L1_015g  //sir I'm staying here
	$higgins1_ranger6 waittill saydone
	wait .1

	$higgins1_ranger10 say streamed_dfr_scripted_M3L1_016a  //you stay in one spot you're a dead man
	$higgins1_ranger10 waittill saydone

	// decide if they want to say a few more lines
	local.choice = randomint 2

	if (local.choice == 0){
		$higgins1_ranger6 say streamed_dfr_scripted_M3L1_049g  //sir i'm not going anywhere, it's a firing squad...
		$higgins1_ranger6 waittill saydone

		wait .2
		//$higgins1_ranger10 say dfr_M3L1_300f  //get up the beach now!!
		$higgins1_ranger10 say streamed_dfr_scripted_M3L1_044a  //get up the beach now....move move...cmon...go
		$higgins1_ranger10 waittill saydone
	}
//=========================================================================
	higgins1_ranger10_2_center_speak_end:
//=========================================================================
	$higgins1_ranger10 lookat NULL
	wait .1

	//$higgins1_ranger6 lookat NULL //chrissstrahl - NULL
	//$higgins1_ranger6.isinsequence = 0 //chrissstrahl - NULL
	$higgins1_ranger7 lookat NULL
	$higgins1_ranger7.isinsequence = 0
	wait .2

	$higgins1_ranger8 lookat NULL
	$higgins1_ranger8.isinsequence = 0
	$higgins1_ranger9 lookat NULL
	$higgins1_ranger9.isinsequence = 0

	//$higgins1_ranger6 takedamage //chrissstrahl - NULL
	$higgins1_ranger7 takedamage
	$higgins1_ranger8 takedamage
	$higgins1_ranger9 takedamage
	$higgins1_ranger10 takedamage
}end

// higgins5_ranger5 yelling at guys to move up the shingle on the right
//=========================================================================
higgins5_ranger5_2_right_speak:{
//=========================================================================
	$higgins5_ranger1 nodamage
	$higgins5_ranger3 nodamage
	$higgins5_ranger5 nodamage
	$higgins1_ranger7 nodamage
	$higgins1_ranger9 nodamage

	$higgins5_ranger1.isinsequence = 1
	$higgins5_ranger3.isinsequence = 1
	$higgins1_ranger7.isinsequence = 1
	$higgins1_ranger9.isinsequence = 1

	if !(isalive $higgins5_ranger3){
		goto higgins5_ranger5_2_right_speak_end
	}

	$higgins5_ranger3 lookat $higgins5_ranger5

	$higgins5_ranger3 say streamed_dfr_scripted_M3L1_030g  //sir, where are the tanks.....
	wait .2

	$higgins5_ranger5 lookat $higgins5_ranger3
	$higgins1_ranger7 lookat $higgins5_ranger3
	wait .1

	$higgins5_ranger1 lookat $higgins5_ranger3
	$higgins1_ranger9 lookat $higgins5_ranger3

	$higgins5_ranger3 waittill saydone
	wait .2

	$higgins5_ranger5 say streamed_dfr_scripted_M3L1_031f  //they're either destroyed.....
	$higgins5_ranger5 waittill saydone
	wait .15

	$higgins5_ranger3 say streamed_dfr_scripted_M3L1_032g  //we can't take the beach without......
	$higgins5_ranger3 waittill saydone
	wait .2

	$higgins5_ranger5 say streamed_dfr_scripted_M3L1_033f  //all we can do here is die.....
	$higgins5_ranger5 waittill saydone

	local.choice = randomint 2

	if (local.choice == 0){
		$higgins5_ranger1 say streamed_dfr_scripted_M3L1_041c  //you can either stay here and die.......

		wait .2
		$higgins5_ranger5 lookat $higgins5_ranger1

		wait .1
		$higgins5_ranger3 lookat $higgins5_ranger1

		$higgins5_ranger1 waittill saydone
	}
//=========================================================================
	higgins5_ranger5_2_right_speak_end:
//=========================================================================
	wait .2

	$higgins5_ranger3 lookat NULL
	$higgins5_ranger3.isinsequence = 0
	$higgins1_ranger7 lookat NULL
	wait .2

	$higgins5_ranger1 lookat NULL
	$higgins5_ranger1.isinsequence = 0
	$higgins1_ranger9 lookat NULL
	wait .3

	$higgins5_ranger5 lookat NULL
	wait 1

	$higgins1_ranger7.isinsequence = 0
	$higgins1_ranger9.isinsequence = 0

	$higgins5_ranger1 takedamage
	$higgins5_ranger3 takedamage
	$higgins5_ranger5 takedamage
	$higgins1_ranger7 takedamage
	$higgins1_ranger9 takedamage
}end

// higgins3_ranger5 yelling at guys to move up the shingle on the left
//=========================================================================
higgins3_ranger5_2_left_speak:{
//=========================================================================

	$higgins3_ranger1 nodamage
	$higgins3_ranger3 nodamage
	$higgins3_ranger5 nodamage

	$higgins3_ranger1.isinsequence = 1  // private
	$higgins3_ranger3.isinsequence = 1  // private
	$higgins3_ranger5.isinsequence = 1  // lieutenant

	if !(isalive $higgins3_ranger1 || !(isalive $higgins3_ranger3)){
		goto higgins3_ranger5_2_left_speak_end
	}

	$higgins3_ranger1 lookat $higgins3_ranger5
	$higgins3_ranger1 say streamed_dfr_scripted_M3L1_054e  //sir the bombers didn't hit a thing......
	wait .2

	$higgins3_ranger3 lookat $higgins3_ranger1
	$higgins3_ranger5 lookat $higgins3_ranger1

	$higgins3_ranger1 waittill saydone
	wait .2

	//$higgins3_ranger5 say streamed_dfr_scripted_M3L1_042d  //I may die here today
	$higgins3_ranger3 say streamed_dfr_scripted_M3L1_068f  //well there's no way we're gonna make it
	wait .2

	$higgins3_ranger5 lookat $higgins3_ranger3

	$higgins3_ranger3 waittill saydone
	wait .3

	//$higgins3_ranger3 say streamed_dfr_scripted_M3L1_043g  //I am sir......
	$higgins3_ranger5 say streamed_dfr_scripted_M3L1_069b  //there's gotta be a way up through....
	$higgins3_ranger5 waittill saydone
	wait .3

	$higgins3_ranger1 say dfr_scripted_M3L1_070e  //there are no others!!!
	$higgins3_ranger1 waittill saydone

//=========================================================================
	higgins3_ranger5_2_left_speak_end:
//=========================================================================
	wait .5

	$higgins3_ranger1 lookat NULL
	wait .2

	$higgins3_ranger1.isinsequence = 0
	wait .3

	$higgins3_ranger3 lookat NULL
	$higgins3_ranger3.isinsequence = 0
	wait .3

	$higgins3_ranger5 lookat NULL

	$higgins3_ranger1 takedamage
	$higgins3_ranger3 takedamage
	$higgins3_ranger5 takedamage
}end

// higgins1_ranger10 yelling at guys in the middle to use craters for cover
//=========================================================================
higgins1_ranger10_6_speak:{
//=========================================================================
	self say dfr_scripted_M3L1_063a  // defilade up ahead, use those craters and stay low
	self waittill saydone
}end


//************************************************
//************************************************
// AI Special Scripted Sequences
//************************************************
//************************************************

// sequence engineer on the right side, at 2nd ramps
//=========================================================================
higgins5_ranger3_4_right_engineer:{
//=========================================================================
	$higgins5_ranger3 nodamage
	$higgins1_ranger7 nodamage
	$right_engineer nodamage

	$higgins1_ranger7.isinsequence = 1
	$right_engineer.isinsequence = 1


	// move the guys to the hedgehog
	$right_engineer thread right_sequence_4_movetohedgehog_rightengineer

	$higgins5_ranger3 runto $higgins5_ranger3_path_4
	$higgins1_ranger7 thread right_sequence_4_movetohedgehog_higgins1ranger7
	$higgins5_ranger3 waittill movedone

	$higgins5_ranger3 turnto $mg42_middle1
	//$higgins5_ranger3 turnto $right_engineer

	$higgins5_ranger3 exec global/crouch.scr
	$higgins5_ranger3 waittill turndone

	$higgins5_ranger3 turnto NULL
	wait 1

	$higgins5_ranger3 lookat $right_engineer

	$higgins5_ranger3 say dfr_scripted_M3L1_023h  //who the hell are you guys
	wait .2

	//$right_engineer turnto $higgins5_ranger3
	$right_engineer lookat $higgins5_ranger3
	//$right_engineer waittill turndone

	$higgins5_ranger3 waittill saydone
	//$right_engineer turnto NULL
	wait .3

	$right_engineer say dfr_M3L1_301i  //special engineering task force
	$right_engineer waittill saydone
	wait .3

	$higgins5_ranger3 say dfr_scripted_M3L1_025h  //are you nuts......
	$higgins5_ranger3 waittill saydone
	wait .2

	$right_engineer say dfr_M3L1_302i  //find someplace else.....
	$right_engineer waittill saydone

	$higgins5_ranger3 lookat NULL
	$right_engineer lookat NULL

	// set the engineer to blow the hog
	thread ai_add_todo $right_engineer level.m3l1a_sequence "sequence" NIL "higgins5_ranger3_4_right_engineer_blow"

	// relinquish control of the guys
	$higgins5_ranger3.isinsequence = 0
	wait .3

	$higgins1_ranger7.isinsequence = 0
	$right_engineer.isinsequence = 0

	$higgins5_ranger3 takedamage
	$higgins1_ranger7 takedamage
}end

// engineer blows the hog
//=========================================================================
higgins5_ranger3_4_right_engineer_blow:{
//=========================================================================
	$right_engineer runto $sequence_4_right_engineer_path2
	$right_engineer waittill movedone

	$right_engineer turnto $hedgehog_explosive_hog_right
	$right_engineer exec global/crouch.scr
	$right_engineer waittill turndone

	$right_engineer turnto NULL

	local.tag = $hedgehog_explosive_hog_right gettagposition "explosive_start"

	local.tempx = local.tag[0]
	local.tempy = local.tag[1]
	local.tempz = $right_engineer.origin[2]

	$right_engineer.origin = (local.tempx local.tempy local.tempz)
	wait .4

	$right_engineer anim_noclip explosives
	$hedgehog_explosive_hog_right anim plant

	$right_engineer waittill animdone

	$right_engineer takedamage
	$right_engineer thread ai_mg_death
}end

//=========================================================================
right_sequence_4_movetohedgehog_rightengineer:{
//=========================================================================
	$right_engineer runto $sequence_4_right_engineer_path1
	$right_engineer waittill movedone

	$right_engineer turnto $mg42_middle1
	$right_engineer exec global/crouch.scr
	$right_engineer waittill turndone

	$right_engineer turnto NULL
}end

//=========================================================================
right_sequence_4_movetohedgehog_higgins1ranger7:{
//=========================================================================
	$higgins1_ranger7 runto $higgins1_ranger7_path_4
	$higgins1_ranger7 waittill movedone

	$higgins1_ranger7 turnto $mg42_middle1
	$higgins1_ranger7 exec global/crouch.scr
	$higgins1_ranger7 waittill turndone

	$higgins1_ranger7 turnto NULL
}end

// sequence engineer on the left side, at 2nd ramps - engineer blow hog, then move
//=========================================================================
sequence_4_left_engineer:{
//=========================================================================
	println "LEFT ENG: starting left engineer sequence"

	$higgins3_ranger1.isinsequence = 1
	$higgins3_ranger2.isinsequence = 1
	$higgins3_ranger3.isinsequence = 1
	$higgins3_ranger5.isinsequence = 1

	$higgins3_ranger1 nodamage
	$higgins3_ranger2 nodamage
	$higgins3_ranger3 nodamage
	$higgins3_ranger5 nodamage
	$left_engineer nodamage

	println "LEFT ENG: moving engineer to first hog"

	$left_engineer runto $sequence_4_left_engineer_path1
	$left_engineer waittill movedone

	println "LEFT ENG: turning engineer to face first hog"

	$left_engineer exec global/crouch.scr
	$left_engineer turnto $hedgehog_explosive_hog_left_blow
	$left_engineer waittill turndone

	$left_engineer turnto NULL

	println "LEFT ENG: engineer is facing the first hog, now snaping into position"

	local.tag = $hedgehog_explosive_hog_left_blow gettagposition "explosive_start"

	local.tempx = local.tag[0]
	local.tempy = local.tag[1]
	local.tempz = $left_engineer.origin[2]

	$left_engineer.origin = (local.tempx local.tempy local.tempz)

	println "LEFT ENG: snapped left engineer into position"
	wait .4

	println "LEFT ENG: planting explosive animations on hog and guy"

	$left_engineer anim_noclip explosives
	$hedgehog_explosive_hog_left_blow anim plant

	$left_engineer waittill animdone

	println "LEFT ENG: animations finished, moving engineer"

	if (isalive $higgins3_ranger3){  // if the key ranger is alive, play out the sequence
		$left_engineer runto $sequence_4_left_engineer_path2
	}
	else{ // else if he's dead play out the sequence without him killing the engineer
		// kill the engineer
		$left_engineer takedamage
		$left_engineer.isinsequence = 0
		thread ai_add_todo $left_engineer level.m3l1a_sequence "move_crouch" $sequence_4_left_engineer_path2 NIL 3

		// move the rangers up to their next spots
		$higgins3_ranger1 thread left_sequence_5_movetohedgehog_higgins3ranger1
		$higgins3_ranger2 thread left_sequence_5_movetohedgehog_higgins3ranger2
		$higgins3_ranger5 thread left_sequence_5_movetohedgehog_higgins3ranger5

		// stack their next orders
		thread ai_add_todo $higgins3_ranger1 level.m3l1a_sequence "move_crouch" $higgins3_ranger1_path_5_scripted1
		thread ai_add_todo $higgins3_ranger2 level.m3l1a_sequence "move_crouch" $higgins3_ranger2_path_5_scripted1
		thread ai_add_todo $higgins3_ranger3 level.m3l1a_sequence "move_crouch" $higgins3_ranger3_path_5_scripted1
		thread ai_add_todo $higgins3_ranger5 level.m3l1a_sequence "move_crouch" $higgins3_ranger5_path_5_scripted1

		// release the AI for their next sequences
		$higgins3_ranger1 takedamage
		$higgins3_ranger2 takedamage
		$higgins3_ranger3 takedamage
		$higgins3_ranger5 takedamage

		$higgins3_ranger3.isinsequence = 0
		$higgins3_ranger1.isinsequence = 0
		wait .2

		$higgins3_ranger2.isinsequence = 0
		wait .1

		$higgins3_ranger5.isinsequence = 0

		end
	}

	//$left_engineer waittill movedone
	wait 3

	// spawn an explosion and blow the hedgehog up
	spawn "animate/fx_explosion_mine" targetname "left_hog_exploder" angle "-1"

	local.temp_origin = $hedgehog_explosive_hog_left_blow.origin
	//local.temp_origin[2] += 32

	$left_hog_exploder.origin = local.temp_origin

	$left_hog_exploder thread mortar_call 1
	$hedgehog_explosive_hog_left_blow remove
	$hedgehog_explosive_hog_left_blow_clip remove

	$left_engineer turnto $mg42_middle1
	$left_engineer exec global/crouch.scr
	$left_engineer waittill turndone

	$left_engineer turnto NULL
	wait 1.5

	$left_hog_exploder remove

	$higgins3_ranger1 thread left_sequence_5_movetohedgehog_higgins3ranger1
	$higgins3_ranger2 thread left_sequence_5_movetohedgehog_higgins3ranger2
	$higgins3_ranger5 thread left_sequence_5_movetohedgehog_higgins3ranger5

	$higgins3_ranger3 runto $higgins3_ranger3_path_5
	$higgins3_ranger3 waittill movedone

	$higgins3_ranger3 turnto $left_engineer
	$higgins3_ranger3 exec global/crouch.scr
	$higgins3_ranger3 waittill turndone

	$higgins3_ranger3 turnto NULL

	// actual hedgehog sequence
	$higgins3_ranger3 lookat $left_engineer

	$higgins3_ranger3 say dfr_scripted_M3L1_023h  //who the hell are you guys
	wait .2

	$left_engineer lookat $higgins3_ranger3

	$higgins3_ranger3 waittill saydone
	wait .3

	$left_engineer say dfr_M3L1_301i  //special engineering task force
	$left_engineer waittill saydone
	wait .3

	$higgins3_ranger3 say dfr_scripted_M3L1_025h  //are you nuts......
	$higgins3_ranger3 waittill saydone
	wait .2

	$left_engineer say dfr_M3L1_302i  //find someplace else.....
	$left_engineer waittill saydone

	$higgins3_ranger3 lookat NULL
	$left_engineer lookat NULL

	thread ai_add_todo $higgins3_ranger1 level.m3l1a_sequence "move_crouch" $higgins3_ranger1_path_5_scripted1
	thread ai_add_todo $higgins3_ranger2 level.m3l1a_sequence "move_crouch" $higgins3_ranger2_path_5_scripted1
	thread ai_add_todo $higgins3_ranger3 level.m3l1a_sequence "move_crouch" $higgins3_ranger3_path_5_scripted1
	thread ai_add_todo $higgins3_ranger5 level.m3l1a_sequence "move_crouch" $higgins3_ranger5_path_5_scripted1

	// set the engineer to blow the hog
	thread ai_add_todo $left_engineer level.m3l1a_sequence "sequence" NIL "sequence_4_left_engineer_blow"

	$higgins3_ranger3.isinsequence = 0
	$higgins3_ranger1.isinsequence = 0
	$left_engineer.isinsequence = 0
	wait .2

	$higgins3_ranger2.isinsequence = 0
	wait .1

	$higgins3_ranger5.isinsequence = 0

	$higgins3_ranger1 takedamage
	$higgins3_ranger2 takedamage
	$higgins3_ranger3 takedamage
	$higgins3_ranger5 takedamage
	$left_engineer takedamage
}end

// have the engineer blow the hog
//=========================================================================
sequence_4_left_engineer_blow:{
//=========================================================================
	$left_engineer runto $sequence_5_left_engineer_path1
	$left_engineer waittill movedone

	$left_engineer turnto $hedgehog_explosive_hog_left
	$left_engineer exec global/crouch.scr
	$left_engineer waittill turndone

	$left_engineer turnto NULL

	local.tag = $hedgehog_explosive_hog_left gettagposition "explosive_start"

	local.tempx = local.tag[0]
	local.tempy = local.tag[1]
	local.tempz = $left_engineer.origin[2]

	$left_engineer.origin = (local.tempx local.tempy local.tempz)
	wait .4

	$left_engineer anim_noclip explosives
	$hedgehog_explosive_hog_left anim plant

	$left_engineer waittill animdone

	$left_engineer thread ai_mg_death
}end

//=========================================================================
left_sequence_5_movetohedgehog_higgins3ranger1:{
//=========================================================================
	self runto $higgins3_ranger1_path_5
	self waittill movedone

	self turnto $mg42_middle1
	self exec global/crouch.scr
	self waittill turndone

	self turnto NULL
}end

//=========================================================================
left_sequence_5_movetohedgehog_higgins3ranger2:{
//=========================================================================
	self runto $higgins3_ranger2_path_5
	self waittill movedone

	self turnto $mg42_middle1
	self exec global/crouch.scr
	self waittill turndone

	self turnto NULL
}end

//=========================================================================
left_sequence_5_movetohedgehog_higgins3ranger5:{
//=========================================================================
	self runto $higgins3_ranger5_path_5
	self waittill movedone

	self turnto $left_engineer
	self exec global/crouch.scr
	self waittill turndone

	self turnto NULL
}end

// sequence 2 guys run up, one get's shot, the other comes up to help, then they both die
//=========================================================================
higgins1_ranger10_5_center_injure:{
//=========================================================================
	$higgins1_ranger8.isinsequence = 1

	$higgins1_ranger8 nodamage
	$higgins1_ranger10 nodamage

	$higgins1_ranger10 runto $higgins1_ranger10_path_5_scripted1
	wait .5

	$higgins1_ranger8 runto $higgins1_ranger8_path_5_scripted1
	wait 1

	$higgins1_ranger8 takedamage
	$higgins1_ranger10 takedamage
	$higgins1_ranger8.isinsequence = 0
	$higgins1_ranger10.isinsequence = 0

	$higgins1_ranger10 thread ai_mg_death
	wait .5

	$higgins1_ranger8 thread ai_mg_death
}end

// radioman in the center, speak when player get's close enough
//=========================================================================
sequence_5_center_radioman:{
//=========================================================================
	self.isinsequence = 1
	self nodamage

	// check the distance
	local.distance = 666 //chrissstrahl - Natas!!!

	// wait for a player to get close
	while (isalive self && (exec coop_mod/replace.scr::withinDistanceOf self 160) != 1 ){
		wait 1
	}

	if !(isalive self){
		end
	}

	self say streamed_dfr_scripted_M3L1_036h  //shore party, gap teams........
	self anim radioman
	self.isinsequence = 0
	self takedamage
}end

// medic sequences just after the second row of ramps
//=========================================================================
sequence_5_medic local.medic local.patient local.side:{
//=========================================================================
	// variable used to tell whether the medic has talked to the patient already
	local.talked_to_patient = 0

	// amount of health to check for initial
	local.health_check = 1

	if !(isalive local.medic){
		goto sequence_5_medic_done
	}

	local.medic.isinsequence = 1
	local.medic nodamage

	local.patient.isinsequence = 1
	local.patient nodamage

	// check the distance
	local.distance = 667 //chrissstrahl - no satan remark here

	// wait for the player to get close to the medic
	while (isalive local.medic && local.distance >= 110){
		wait 1
		if (isalive local.medic){
       		local.distance = vector_length ((exec coop_mod/replace.scr::origin local.medic) - local.medic.origin) //chrissstrahl - coop compatibility
		}
	}

	if !(isalive local.medic){
		goto sequence_5_medic_done
	}

	// delete the other sequence
	if (local.side == "left"){
		if (isalive $right_patient){
       		$right_patient.isinsequence = 0
			$right_patient takedamage
			$right_patient remove
		}

		if (isalive $right_medic){
       		$right_medic.isinsequence = 0
			$right_medic takedamage
			$right_medic remove
		}
	}else{
		if (isalive $left_patient){
       		$left_patient.isinsequence = 0
			$left_patient takedamage
			$left_patient remove
		}

		if (isalive $left_medic){
       		$left_medic.isinsequence = 0
			$left_medic takedamage
			$left_medic remove
		}
	}

//=========================================================================
	sequence_5_medic_loop:
//=========================================================================
	//chrissstrahl - made compatible for coop
	if( level.gametype != 0 ){
		waitexec maps/m3l1a/coopified.scr::sequence_5_medic local.medic local.patient
		goto sequence_5_medic_guts
	}


	// check if the player needs health, if so, heal him, else talk to the guy on the ground
	if (($player.health / $player.max_health) < local.health_check){
		// if the player is below half of his max, give him 30% back
		local.medic exec global/crouch.scr

		local.medic lookat $player
		local.medic turnto $player
		local.medic waittill turndone

		// have him say something to the player and hand him a canteen

		//println "HEAL PLAYER: telling player not to worry!!"
		//local.medic say streamed_dfr_scripted_M3L1_035d  //don't worry, you'll be ok
		if (randomint(100) > 50){
			local.medic say medic_heal1   //just hold on private......
		}else{
			local.medic say medic_heal2   //just hold on private......
		}

		local.medic upperanim pass_canteen_start
		local.medic waittill upperanimdone

		//println "HEAL PLAYER: healing player"
		//println "HEAL PLAYER: skill: " getcvar(skill)

		while (vector_length ($player.origin - local.medic.origin) >= 110){
			wait 1
		}

		if (getcvar(skill) == "0"){ // easy skill
			$player heal 1
			$player playsound med_kit
			iprintlnbold "You have received health from a medic."
			println "healed"
		}
		else if (getcvar(skill) == "2"){  // hard skill
			$player heal .3
			$player playsound med_kit
			iprintlnbold "You have received health from a medic."
		}
		else{  // player is in medium skill
			$player heal .5
			$player playsound med_kit
			iprintlnbold "You have received health from a medic."
		}

		//println "HEAL PLAYER: wrapping up"
		local.medic upperanim pass_canteen_end
		wait 1

		//println "HEAL PLAYER: going back to patient"

		// make him turn back to his patient
		local.medic lookat NULL
		local.medic turnto local.patient
		local.medic.turndoneerror = 10
		local.medic waittill turndone
		wait 1
		local.medic turnto NULL
	}
	else{
		// wait for the player to get close to the medic
		while (isalive local.medic && local.distance >= 128){
			wait 1

			if (isalive local.medic){
				local.distance = vector_length ($player.origin - local.medic.origin)
			}
		}

		if !(isalive local.medic){
			goto sequence_5_medic_done
		}
		wait 2
		goto sequence_5_medic_loop
	}

//=========================================================================
	sequence_5_medic_guts:	//chrissstrahl - use this to jump here in coop
//=========================================================================
	local.patient say dfr_scripted_M3L1_034e  //my guts been torn out
	local.patient waittill saydone

	wait .3
	local.medic anim medic01
	local.medic say dfr_scripted_M3L1_035k  //just hangon private....
	local.medic waittill saydone

	local.medic.isinsequence = 0
	local.medic takedamage

	local.patient.isinsequence = 0
	local.patient takedamage
//=========================================================================
	sequence_5_medic_done:
//=========================================================================
}end

// guy freaking out behind hedgehog
//=========================================================================
sequence_5_freaky local.side:{
//=========================================================================
	self.isinsequence = 1
	self nodamage

	// wait for the player to bring them back to the captain
	while ( isalive self && (exec coop_mod/replace.scr::withinDistanceOf self 128) != 1 ){
		wait 1
	}

	if !(isalive self){
		end //chrissstrahl - make it simple, just end it
	}

	// delete the other sequence
	if (local.side == "left"){
		if (isalive $right_freaky){
        	$right_freaky.isinsequence = 0
			$right_freaky takedamage
			$right_freaky thread ai_mg_death
		}
	}else{
		if (isalive $left_freaky){
        	$left_freaky.isinsequence = 0
			$left_freaky takedamage
			$left_freaky thread ai_mg_death
		}
	}

	self say streamed_dfr_scripted_M3L1_038e  //this isn't happening.....this isn't happening.....
	self waittill saydone

	self.isinsequence = 0
	self takedamage
	wait .5

	while (isalive self){
		self anim hedge_look02

		wait 1.2
		self anim hedge_dodge03
		self waittill animdone

		local.choice = (randomint 2 + 2)
		local.anim = ("hedge_shake0" + local.choice)
		//self anim hedge_shake02
		self anim local.anim

		wait (randomint 4 + 4)
	}
}end

// spawn in one guy dragging another to be blown up to pieces
//=========================================================================
dragging_guys_blow:{
//=========================================================================
	local.location = self.location

	//[200] Smithy - use nottriggerable and delete for extra safety
	$dragging_guys_blow_triggerright nottriggerable
	$dragging_guys_blow_triggerright delete
	$dragging_guys_blow_triggerleft nottriggerable
	$dragging_guys_blow_triggerleft delete

	spawn "models/human/dday_29th_private" targetname "dragger" gun "m1 garand" angles "0 270 0"
	spawn "models/human/dday_29th_private" targetname "draggie" gun "m1 garand" angles "0 270 0"

	$dragger thread ai_friendly_setup NIL
	$draggie thread ai_friendly_setup NIL

	$dragger holster
	$draggie holster

	$dragger nodamage
	$draggie nodamage

	$dragger exec global/setdeathanim.scr death_mortar_high
	$draggie exec global/setdeathanim.scr death_mortar_flip

	println "DRAGGER: location choosen: " local.location

	if (local.location == "right"){
		$dragger.origin = ( -176.00 -560.00 -472.00)
		$draggie.origin = ( -176.00 -592.00 -472.00)
	}else{
		$dragger.origin = (192.00 -528.00 -472.00)
		$draggie.origin = (192.00 -560.00 -472.00)
	}

	$dragger setsynctime 0
	$draggie setsynctime 0

	$dragger anim drag_dragging
	$draggie anim drag_beingdragged
	wait 7

	$dragger takedamage
	$draggie takedamage

	spawn animate/fx_mortar_dirt targetname "temp_mortar"
	$temp_mortar.origin = $draggie.origin

	$temp_mortar anim start
	//$player exec global/bullethit.scr (0 -1 0) 1000 50 1
	radiusdamage $temp_mortar.origin 4000 256
	wait 3

	$temp_mortar remove
}end

// sequence kill a random AI with a mortar as he runs to the middle
//=========================================================================
sequence_6_left_mortar:{
//=========================================================================
	wait 2

	local.choice = randomint 6

	if (local.choice == 0){
		local.target = $higgins3_ranger5
	}
	else if (local.choice == 1){
		local.target = $higgins3_ranger3
	}
	else if (local.choice == 2){
		local.target = $higgins3_ranger4
	}
	else if (local.choice == 3){
		local.target = $higgins1_ranger6
	}
	else if (local.choice == 4){
		local.target = $higgins3_ranger2
	}
	else if (local.choice == 5){
		local.target = $higgins3_ranger1
	}

	local.target thread ai_mortar_death

	// give a chance to kill another guy
	local.random = randomint 4
	if (local.random== 0){
		goto sequence_6_left_mortar
	}
}end

// sequence kill a random AI with a mortar as he runs to the middle
//=========================================================================
sequence_6_right_mortar:{
//=========================================================================
	wait 2

	local.choice = randomint 7

	if (local.choice == 0){
		local.target = $higgins1_ranger8
	}
	else if (local.choice == 1){
		local.target = $higgins1_ranger10
	}
	else if (local.choice == 2){
		local.target = $higgins5_ranger3
	}
	else if (local.choice == 3){
		local.target = $higgins1_ranger7
	}
	else if (local.choice == 4){
		local.target = $higgins1_ranger9
	}
	else if (local.choice == 5){
		local.target = $higgins5_ranger1
	}
	else if (local.choice == 6){
		local.target = $higgins5_ranger5
	}

	local.target thread ai_mortar_death

	// give a chance to kill another guy
	local.random = randomint 4
	if (local.random== 0){
		goto sequence_6_right_mortar
	}
}end

// spawn the shingle wave to run up to the shingle
//=========================================================================
sequence_6_spawn_shingle:{
//=========================================================================
	println "SHINGLEGUYS: cvar: " (getcvar(g_ddayshingleguys))

	//chrissstrahl - fixme
	if (getcvar(g_ddayshingleguys) == "2"){  // guys that are to spawn on high detail
		spawn "models/human/dday_29th_private" targetname "shingle_wave1" gun "m1 garand"
		spawn "models/human/dday_29th_private" targetname "shingle_wave6" gun "m1 garand"
		spawn "models/human/dday_29th_private" targetname "shingle_wave10" gun "m1 garand"
		spawn "models/human/dday_29th_private" targetname "shingle_wave14" gun "m1 garand"
		spawn "models/human/dday_29th_private" targetname "shingle_wave18" gun "m1 garand"

		$shingle_wave1 thread ai_friendly_setup NIL 1
		$shingle_wave6 thread ai_friendly_setup NIL 1
		$shingle_wave10 thread ai_friendly_setup NIL 1
		$shingle_wave14 thread ai_friendly_setup NIL 1
		$shingle_wave18 thread ai_friendly_setup NIL 1

		$shingle_wave1.origin = $shingle_wave_spawn1.origin
		$shingle_wave6.origin = $shingle_wave_spawn6.origin
		$shingle_wave10.origin = $shingle_wave_spawn10.origin
		$shingle_wave14.origin = $shingle_wave_spawn14.origin
		$shingle_wave18.origin = $shingle_wave_spawn18.origin

		$shingle_wave1 turnto $mg42_middle1
		$shingle_wave6 turnto $mg42_middle1
		$shingle_wave10 turnto $mg42_middle1
		$shingle_wave14 turnto $mg42_middle1
		$shingle_wave18 turnto $mg42_middle1
	}

	if (getcvar(g_ddayshingleguys) != "0"){  // guys that are to spawn on medium detail
		spawn "models/human/dday_29th_private" targetname "shingle_wave4" gun "m1 garand"
		spawn "models/human/dday_29th_private" targetname "shingle_wave8" gun "bar"
		spawn "models/human/dday_29th_private" targetname "shingle_wave12" gun "m1 garand"
		spawn "models/human/dday_29th_private" targetname "shingle_wave16" gun "bar"

		$shingle_wave4 thread ai_friendly_setup NIL 1
		$shingle_wave8 thread ai_friendly_setup NIL 1
		$shingle_wave12 thread ai_friendly_setup NIL 1
		$shingle_wave16 thread ai_friendly_setup NIL 1

		$shingle_wave4.origin = $shingle_wave_spawn4.origin
		$shingle_wave8.origin = $shingle_wave_spawn8.origin
		$shingle_wave12.origin = $shingle_wave_spawn12.origin
		$shingle_wave16.origin = $shingle_wave_spawn16.origin

		$shingle_wave4 turnto $mg42_middle1
		$shingle_wave8 turnto $mg42_middle1
		$shingle_wave12 turnto $mg42_middle1
		$shingle_wave16 turnto $mg42_middle1
	}

	// guys that spawn always
	spawn "models/human/dday_29th_private" targetname "shingle_wave3" gun "bar"
	spawn "models/human/dday_29th_private" targetname "shingle_wave7" gun "m1 garand"
	spawn "models/human/dday_29th_private" targetname "shingle_wave9" gun "m1 garand"
	spawn "models/human/dday_29th_private" targetname "shingle_wave13" gun "bar"
	spawn "models/human/dday_29th_private" targetname "shingle_wave17" gun "m1 garand"

	$shingle_wave3 thread ai_friendly_setup NIL 1
	$shingle_wave7 thread ai_friendly_setup NIL 1
	$shingle_wave8 thread ai_friendly_setup NIL 1
	$shingle_wave9 thread ai_friendly_setup NIL 1
	$shingle_wave13 thread ai_friendly_setup NIL 1
	$shingle_wave17 thread ai_friendly_setup NIL 1


	$shingle_wave3.origin = $shingle_wave_spawn3.origin
	$shingle_wave7.origin = $shingle_wave_spawn7.origin
	$shingle_wave9.origin = $shingle_wave_spawn9.origin
	$shingle_wave13.origin = $shingle_wave_spawn13.origin
	$shingle_wave17.origin = $shingle_wave_spawn17.origin

	$shingle_wave3 turnto $mg42_middle1
	$shingle_wave7 turnto $mg42_middle1
	$shingle_wave9 turnto $mg42_middle1
	$shingle_wave13 turnto $mg42_middle1
	$shingle_wave17 turnto $mg42_middle1

	$shingle_wave_spawn3 remove
	$shingle_wave_spawn4 remove
	$shingle_wave_spawn7 remove
	$shingle_wave_spawn8 remove
	$shingle_wave_spawn9 remove
	$shingle_wave_spawn10 remove
	$shingle_wave_spawn15 remove
	$shingle_wave_spawn16 remove
	$shingle_wave_spawn17 remove
	$shingle_wave_spawn18 remove
}end

// spawn the rangers waiting already at the shingle
//=========================================================================
sequence_7_spawn_shingle:{
//=========================================================================
	
	//[200] Smithy - add some extra security - does this cause targetname array error ??? 
	println "****************************************** sequence_7_spawn_shingle CALLED  ******************************************"
	if (level.thread["sequence_7_spawn_shingle"]){ end }
	level.thread["sequence_7_spawn_shingle"] = game.true

	spawn "models/human/dday_ranger_captain" targetname "shingle_ranger1" gun "thompson"
	spawn "models/human/dday_ranger_sergeant" targetname "shingle_ranger2" gun "m1 garand"
	spawn "models/human/dday_ranger_private" targetname "shingle_ranger3" gun "m1 garand"
	spawn "models/human/dday_ranger_private" targetname "shingle_ranger4" gun "m1 garand"
	spawn "models/human/dday_ranger_private" targetname "shingle_ranger5" gun "bar"
	spawn "models/human/dday_ranger_medic" targetname "shingle_ranger6" gun "none"
	spawn "models/human/dday_ranger_lieutenant" targetname "shingle_ranger7" gun "thompson"

	$shingle_ranger1 thread ai_friendly_setup NIL 2
	$shingle_ranger2 thread ai_friendly_setup NIL 2
	$shingle_ranger3 thread ai_friendly_setup NIL 2
	$shingle_ranger4 thread ai_friendly_setup NIL 2
	$shingle_ranger5 thread ai_friendly_setup NIL 2
	$shingle_ranger6 thread ai_friendly_setup NIL 2
	$shingle_ranger7 thread ai_friendly_setup NIL 2

	// set the health of the captain and his buddies
	$shingle_ranger1 nodamage
	$shingle_ranger2 nodamage
	$shingle_ranger3 nodamage
	$shingle_ranger4 health 100
	$shingle_ranger5 health 100
	$shingle_ranger6 health 100
	$shingle_ranger7 health 100

	$shingle_ranger1.origin = $shingle_ranger1_spawn.origin
	$shingle_ranger2.origin = $shingle_ranger2_spawn.origin
	$shingle_ranger3.origin = $shingle_ranger3_spawn.origin
	$shingle_ranger4.origin = $shingle_ranger4_spawn.origin
	$shingle_ranger5.origin = $shingle_ranger5_spawn.origin
	//$shingle_ranger6.origin = $shingle_ranger6_spawn.origin
	$shingle_ranger6.origin = ( -368 2944 -356)
	$shingle_ranger7.origin = $shingle_ranger7_spawn.origin

	$shingle_ranger1 turnto $higgins1_clip
	$shingle_ranger2 turnto $mg42_middle1
	$shingle_ranger3 turnto $mg42_middle1
	$shingle_ranger4 turnto $mg42_middle1
	$shingle_ranger5 turnto $mg42_middle1
	$shingle_ranger6 turnto $mg42_middle1
	$shingle_ranger7 turnto $mg42_middle1

	$shingle_ranger1 anim shingle_idle_lookat
	$shingle_ranger2 anim shingle_idle_bang
	$shingle_ranger3 anim shingle_idle_bang
	$shingle_ranger4 anim shingle_idle_bang
	$shingle_ranger5 anim shingle_idle_bang

	$shingle_ranger1_spawn remove
	$shingle_ranger2_spawn remove
	$shingle_ranger3_spawn remove
	$shingle_ranger4_spawn remove
	$shingle_ranger5_spawn remove
	$shingle_ranger6_spawn remove
	$shingle_ranger7_spawn remove
}end

// check amongst the shingle wave before they jet up to the shingle
//=========================================================================
sequence_7_shingle_chatter:{
//=========================================================================
	while (level.m3l1a_sequence == 7){
		local.choice = (randomint 18 + 1)
		local.dude = $("shingle_wave" + local.choice)

		// check if the guy is alive
		if (local.dude != NULL){
			// check his distance to the player, if under 192, say something
			local.player = exec coop_mod/replace.scr::player_closestTo local.dude
			if (local.player != NULL){ //[203] chrissstrahl - prevent console spam if no player found
				local.distance = vector_length(local.player.origin - local.dude.origin)
				if (local.distance < 192 && local.dude.isinsequence != 1 && local.dude.isbusy != 1){
					local.say = randomint 4

					local.dude lookat local.player //chrissstrahl - coop compatible
					wait .5

					// pick a random thing to say
					switch (local.say)
					{
						case 0:
							local.dude say streamed_dfr_scripted_M3L1_072g  //Damn, that was close!
							break

						case 1:
							local.dude say dfr_scripted_M3L1_052e  //We're never gonna make it!
							break

						case 2:
							local.dude say dfr_scripted_M3L1_061d  //We gotta keep moving sir!
							break

						case 3:
							local.dude say streamed_dfr_scripted_M3L1_021g  //We're gonna die if we don't get off the beach!
							break
					}

					local.dude waittill saydone
					wait .5
					local.dude lookat NULL

					// now that the player's heard something, wait quite a while before saying somthing else
					wait 15
				}	
			}
		}
		wait .5
	}
}end

// captain calls powell over, bangalores appear, says to go get bangalores
//=========================================================================
sequence_9_shingle_start:{
//=========================================================================
	level.m3l1a_sequence = 9
	waitthread global/objectives.scr::add_objectives 1 3  // completing get to the shingle
	waitthread global/objectives.scr::current_objectives 0

	// spawn in the bangalore guys
	spawn "models/human/dday_29th_private" targetname "bangalore_wave1" gun "m1 garand"
	spawn "models/human/dday_ranger_private" targetname "bangalore_wave2" gun "m1 garand"
	spawn "models/human/dday_ranger_private" targetname "bangalore_wave3" gun "m1 garand"
	spawn "models/human/dday_29th_private" targetname "bangalore_wave4" gun "m1 garand"
	spawn "models/human/dday_29th_private" targetname "bangalore_wave5" gun "m1 garand"
	spawn "models/human/dday_ranger_private" targetname "bangalore_wave6" gun "m1 garand"

	$bangalore_wave1 thread ai_friendly_setup NIL 1
	$bangalore_wave2 thread ai_friendly_setup NIL 1
	$bangalore_wave3 thread ai_friendly_setup NIL 1
	$bangalore_wave4 thread ai_friendly_setup NIL 1
	$bangalore_wave5 thread ai_friendly_setup NIL 1
	$bangalore_wave6 thread ai_friendly_setup NIL 1

	$bangalore_wave1.origin = $bangalore_wave1_spawn.origin
	$bangalore_wave2.origin = $bangalore_wave2_spawn.origin
	$bangalore_wave3.origin = $bangalore_wave3_spawn.origin
	$bangalore_wave4.origin = $bangalore_wave4_spawn.origin
	$bangalore_wave5.origin = $bangalore_wave5_spawn.origin
	$bangalore_wave6.origin = $bangalore_wave6_spawn.origin

	$bangalore_wave1 turnto $mg42_middle1
	$bangalore_wave2 turnto $mg42_middle1
	$bangalore_wave3 turnto $mg42_middle1
	$bangalore_wave4 turnto $mg42_middle1
	$bangalore_wave5 turnto $mg42_middle1
	$bangalore_wave6 turnto $mg42_middle1

	$bangalore_wave1_spawn remove
	$bangalore_wave2_spawn remove
	$bangalore_wave3_spawn remove
	$bangalore_wave4_spawn remove
	$bangalore_wave5_spawn remove
	$bangalore_wave6_spawn remove

	$bangalore_wave2 nodamage
	wait 2

	//[200] Smithy - WTF WHY IS THERE MORE THAN ONE *SOMETIMES* ???
	//iprintlnbold_noloc "RANGER1 SIZE IS " $shingle_ranger1.size
	if ($shingle_ranger1.size > 1){
		//iprintlnbold_noloc $shingle_ranger1[1].origin
		//iprintlnbold_noloc $shingle_ranger1[2].origin
		$shingle_ranger1[2] delete
	}

	// add the new objective and set it to meet up with the captain
	waitthread global/objectives.scr::add_objectives 2 2 "Meet up with the Captain." $shingle_ranger1.origin
	waitthread global/objectives.scr::current_objectives 2

	// bring a medic over to heal the player
	thread shingle_medic

	// if he's not close enough, call out to the player
	if ((exec coop_mod/replace.scr::withinDistanceOf $shingle_ranger1 256) != 1){
		goto sequence_9_shingle_start_getbangalores
	}

	$shingle_ranger1 exec coop_mod/replace.scr::lookat //chrissstrahl - coop compatible //[200] Smithy - removed 'exec' on targetname
	wait .3

	$shingle_ranger1 say dfr_scripted_M3L1_073a_prone  //powell get over here
	$shingle_ranger1 waittill saydone

	$shingle_ranger1 anim shingle_idle_lookat
	wait 1

	$shingle_ranger1 lookat NULL
	wait 2

	sequence_9_shingle_start_check:

	// check to see if the player is close enough to talk to the captain
	if ((exec coop_mod/replace.scr::withinDistanceOf $shingle_ranger1 600)){  //chrissstrahl - coop compatible		// original distance 192
		goto sequence_9_shingle_start_getbangalores
	}
	else{
		if (randomint 2 == 0){
			wait .3

			$shingle_ranger5 say dfr_scripted_M3L1_075k  //powell, get down the line, the....
			$shingle_ranger5 waittill saydone

			$shingle_ranger5 anim shingle_idle_bang
		}else{
			wait .3
			$shingle_ranger4 say dfr_scripted_M3L1_074e  //powell, they need you down there
			$shingle_ranger4 waittill saydone

			$shingle_ranger4 anim shingle_idle_bang
		}
	}
	wait 4

	goto sequence_9_shingle_start_check

//=========================================================================
	sequence_9_shingle_start_getbangalores:
//=========================================================================

	// complete the objective
	waitthread global/objectives.scr::add_objectives 2 3  // completing get to the captain

	// spawn a reinforcement wave for the shingle
	thread spawn_shingle_reinforcement_wave

	wait 1
	// move out the bangalore wave
	thread ai_add_todo $bangalore_wave1 level.m3l1a_sequence "move_mg_death" NIL NIL 5
	thread ai_add_todo $bangalore_wave3 level.m3l1a_sequence "move_mg_death" NIL NIL 4.75
	thread ai_add_todo $bangalore_wave4 level.m3l1a_sequence "move_mortar_death" NIL NIL 4
	thread ai_add_todo $bangalore_wave5 level.m3l1a_sequence "move_mg_death" NIL NIL 3.5
	thread ai_add_todo $bangalore_wave6 level.m3l1a_sequence "move_mg_death" NIL NIL 5.25

	// this is the bangalore guy
	thread ai_add_todo $bangalore_wave2 level.m3l1a_sequence "move_mg_death" NIL NIL 3.75
	wait 1

	$bangalore_wave2 say streamed_dfr_scripted_M3L1_078d  //right over here, I've got some.......SPLAT!!
	$bangalore_wave2 takedamage
	wait .3

	$shingle_ranger1 lookat $bangalore_ranger2
	wait .3

	// drop the bangalores on the ground
	wait 3
	$bangalore1 show
	$bangalore2 show
	$bangalore3 show

	// assign the give bangalore objective
	waitthread global/objectives.scr::add_objectives 3 2 "Get the bangalores." $bangalore2.origin
	waitthread global/objectives.scr::current_objectives 3

	// spawn a health canteen by the bangalores if on easy
	if ( level.gametype == 0 && getcvar(skill) == "0"){
		local.canteen = "canteen"
		spawn items/item_25_healthbox targetname local.canteen origin ( -1395.70 2308.05 -423.97) //chrissstrahl - fixed this
		local.canteen = $(local.canteen)

	}

	$playeritem_bangalore_give triggerable
	wait 1

	$shingle_ranger1 exec coop_mod/replace.scr::lookat //chrissstrahl - coop compatible
	wait .3

	$shingle_ranger1 say streamed_dfr_scripted_M3L1_079a  //powell, go back down there........
	wait .5

	$shingle_ranger1 waittill saydone
	$shingle_ranger1 anim shingle_idle_lookat

	// check the players distance to see if he's left to get the bangalores yet
	while (level.m3l1a_sequence != 10){
		wait 5
		local.waiting = 1
		if(level.gametype == 0){	//chrissstrahl - sp
			local.distance = vector_length ($player.origin - $shingle_ranger1.origin)
			if (local.distance <= 256){
				local.waiting = 0
			}
		}else if($playeritem_bangalore_give == NULL || (exec coop_mod/replace.scr::withinDistanceOf $playeritem_bangalore_give 200) ){	//chrissstrahl - mp - any player close to bangalore trigger
			local.waiting = 0
		}

		if(local.waiting){ //chrissstrahl
        	$shingle_ranger1 say streamed_dfr_scripted_M3L1_080a  //what the hell are you waiting.....
			$shingle_ranger1 waittill saydone

			$shingle_ranger1 anim shingle_idle_lookat
		}
	}
}end

// medic that heals the player on the shingle
//=========================================================================
shingle_medic:{
//=========================================================================
	//chrissstrahl - handle coop
	if(level.gametype != 0){
		exec maps/m3l1a/coopified.scr::shingle_medic $shingle_ranger6
		end
	}

	local.health_check = 1
	local.distance = vector_length ($player.origin - $shingle_ranger6.origin)

	// wait for the player to get close to the medic
	while (isalive $shingle_ranger6 && local.distance >= 92){
		wait 1
		// if the player is beyond the shingle, stop checking
		if (level.progress == "shelf_bunker"){
			end
		}
		local.distance = vector_length ($player.origin - $shingle_ranger6.origin)
	}

	if !(isalive $shingle_ranger6){
		end
	}

	// check if the player needs health, if so, heal him, else talk to the guy on the ground
	if (($player.health / $player.max_health) < local.health_check){
		// if the player is below half of his max, give him all health back
		$shingle_ranger6 exec global/crouch.scr

		$shingle_ranger6 exec coop_mod/replace.scr::lookat //chrissstrahl - coop compatible
		$shingle_ranger6 exec coop_mod/replace.scr::turnto //chrissstrahl - coop compatible
//		$shingle_ranger6.turndoneerror = 50
		$shingle_ranger6 waittill turndone

		// have him say something to the player and hand him a canteen

		//println "HEAL PLAYER: telling player not to worry!!"
		if (randomint(100) > 50){
			$shingle_ranger6 say medic_heal1
		}
		else{
			$shingle_ranger6 say medic_heal2
		}

		$shingle_ranger6 upperanim pass_canteen_start
		$shingle_ranger6 waittill upperanimdone

		//println "HEAL PLAYER: healing player"

		while (vector_length ($player.origin - $shingle_ranger6.origin) >= 110){
			wait 1
		}

		if (getcvar(skill) == "0"){  // easy skill
			$player heal 1
			$player playsound med_kit
			iprintlnbold "You have received health from a medic."
			println "healed"

			if(level.gametype == 0){	//chrissstrahl - save only in sp
				if (level.cover_index != 0){
					exec global/autosave.scr 2
				}
			}
		}
		else if (getcvar(skill) == "2"){  // hard skill
			$player heal .3
			$player playsound med_kit
			iprintlnbold "You have received health from a medic."
		}
		else{  // player is in medium skill
			$player heal .5
			$player playsound med_kit
			iprintlnbold "You have received health from a medic."
		}
		wait .6

		//println "HEAL PLAYER: wrapping up"
		$shingle_ranger6 upperanim pass_canteen_end
		wait 2

		// reset his turnto
		$shingle_ranger6 lookat NULL
		$shingle_ranger6.turndoneerror = 10
		$shingle_ranger6 turnto $mg42_middle1
		$shingle_ranger6 waittill turndone
		wait 1

		$shingle_ranger6 turnto NULL
		$shingle_ranger6 exec global/prone.scr
	}
}end

// when the player brings back the bangalores to the captain
//=========================================================================
sequence_10_shingle_start:{
//=========================================================================
	level.m3l1a_sequence = 10

	thread ai_add_todo $shingle_ranger4 level.m3l1a_sequence "move_prone"
	thread ai_add_todo $shingle_ranger5 level.m3l1a_sequence "move_prone"
	wait 1

	thread ai_add_todo $shingle_wave5 level.m3l1a_sequence "move_prone"
	thread ai_add_todo $shingle_wave6 level.m3l1a_sequence "move_prone"
	thread ai_add_todo $shingle_wave9 level.m3l1a_sequence "move_prone"
	thread ai_add_todo $shingle_wave10 level.m3l1a_sequence "move_prone"
	thread ai_add_todo $shingle_wave11 level.m3l1a_sequence "move_prone"
	thread ai_add_todo $shingle_wave12 level.m3l1a_sequence "move_prone"
	thread ai_add_todo $shingle_wave13 level.m3l1a_sequence "move_prone"
	thread ai_add_todo $shingle_wave14 level.m3l1a_sequence "move_prone"
	thread ai_add_todo $shingle_wave15 level.m3l1a_sequence "move_prone"
	thread ai_add_todo $shingle_wave16 level.m3l1a_sequence "move_prone"
	thread ai_add_todo $shingle_wave17 level.m3l1a_sequence "move_prone"
	thread ai_add_todo $shingle_wave18 level.m3l1a_sequence "move_prone"

	$shingle_ranger1 say streamed_dfr_scripted_M3L1_083a  //bring up the bangalores.......
	$shingle_ranger1 waittill saydone

	$shingle_ranger1 anim shingle_idle_lookat

	// check the distance wait for the player to bring them back to the captain
	while ((exec coop_mod/replace.scr::withinDistanceOf $shingle_ranger1 160) != 1){	//chrissstrahl - coop compatible
		wait 1
	}

	// complete the objective
	waitthread global/objectives.scr::add_objectives 4 3  // completing bring the bangalores back
	waitthread global/objectives.scr::current_objectives 0

	$shingle_ranger1 say streamed_dfr_scripted_M3L1_084a  //good job powell, let's get this stuff....
	$shingle_ranger1 waittill saydone

	$shingle_ranger1 lookat $shingle_ranger3
	$shingle_ranger2 lookat NULL
	$shingle_ranger3 lookat NULL

	// take the bangalores from the players inventory
	waitthread global/items.scr::remove_item "bangalores"
	wait .75

	//$shingle_ranger3 holster
	//$shingle_ranger3 anim bangalore
	$shingle_ranger3 thread shingle_ranger_bangalore
	wait 1

	//$shingle_ranger2 holster
	//$shingle_ranger2 anim bangalore

	$shingle_ranger2 thread shingle_ranger_bangalore
	$shingle_ranger1 say streamed_dfr_scripted_M3L1_085a  //ok guys, bangers.......
	$shingle_ranger1 waittill saydone

	$shingle_ranger1 anim shingle_idle_lookat
	wait 1

	$shingle_ranger3 say streamed_dfr_scripted_M3L1_088g  //heads up, bangers coming......
	$shingle_ranger3 waittill saydone
	wait 3

	$shingle_ranger1 say streamed_dfr_scripted_M3L1_089a  //bangalores!!  Clear the shingle!!!
	$shingle_ranger1 waittill saydone

	$shingle_ranger1 anim shingle_idle_lookat
	$shingle_ranger1 lookat NULL
	wait .5

	$shingle_ranger2 say dfr_scripted_M3L1_090g  //fire in the hole
	$shingle_ranger2 waittill saydone
	wait .3

	$shingle_ranger3 say dfr_scripted_M3L1_093e  //fire in the hole
	$shingle_ranger3 waittill saydone
	wait .2

	$shingle_ranger1 say dfr_scripted_M3L1_094a  //get down!!
	$shingle_ranger1 waittill saydone

	$shingle_ranger1 anim shingle_coveridle_capt
	wait .75

	// blow the shingle
	$bangalore_explosion1a anim start
	$bangalore_explosion1b anim start
	thread jitter_large
	$bangalore_explosion1b playsound exp_shingle	//chrissstrahl - use entity instead for coop
	
	//[203] Chrissstrahl - allow all players to join the party
	//players that are stuck way back in the field will be respawned at the shingle
	
	iprintlnbold_noloc("DEVDEBUG: allow all players to join the party")
	
	level.beachPartyTime = 1

	// if the player is too close or not crouching damage him
	radiusdamage $bangalore_explosion1a 2000 192

	//chrissstrahl - handle for coop
	for (local.i = 1;local.i <= $player.size;local.i++){
		local.player =  $player[local.i]
		//if existing, touching the trigger and alive
		if( local.player != NULL && local.player.health > 0 && local.player.dmteam != "spectator" /*&&local.player.flags["coop_isActive"] != 1*/){
			if(local.player getposition != "crouching" && vector_length (local.player.origin - $bangalore_explosion1a.origin) <= 512){
				local.player thread bhit 100
			}
		}
	}
	//chrissstrahl - end handle for coop
	wait .3

	$bangalore_explosion2a anim start
	$bangalore_explosion2b anim start
	$bangalore_explosion2b playsound exp_shingle	//chrissstrahl - using entity rather than player for coop

	// if the player is too close or not crouching damage him
	radiusdamage $bangalore_explosion1a 2000 192

	//chrissstrahl - handle for coop
	for (local.i = 1;local.i <= $player.size;local.i++){
		local.player =  $player[local.i]
		//if existing, touching the trigger and alive
		if( local.player != NULL && local.player.health > 0 && local.player.dmteam != "spectator" /*&&local.player.flags["coop_isActive"] != 1*/){
			if(local.player getposition != "crouching" && vector_length (local.player.origin - $bangalore_explosion1a.origin) <= 512){
				local.player thread bhit 100
			}
		}
	}
	//chrissstrahl - end handle for coop
	wait .5

	$bangalore_explosion3a anim start
	$bangalore_explosion3b anim start
	thread jitter_large
	$bangalore_explosion3a playsound exp_shingle	//chrissstrahl - using entity rather than player for coop
	$bangalore_explosion3b playsound arty_exp_sand	//chrissstrahl - using entity rather than player for coop

	// if the player is too close or not crouching damage him
	radiusdamage $bangalore_explosion1a 2000 192

	//chrissstrahl - handle for coop
	for (local.i = 1;local.i <= $player.size;local.i++){
		local.player =  $player[local.i]
		//if existing, touching the trigger and alive
		if( local.player != NULL && local.player.health > 0 && local.player.dmteam != "spectator" /*&&local.player.flags["coop_isActive"] != 1*/){
			if(local.player getposition != "crouching" && vector_length (local.player.origin - $bangalore_explosion1a.origin) <= 512){
				local.player thread bhit 100
			}
		}
	}
	//chrissstrahl - end handle for coop

	$barbwire_fence1 remove
	$barbwire_fence2 remove
	$barbwire_fence3 remove

	$barbwire_fence_collision remove
	$barbwire_fence_collision_player remove

	// start the next sequence
	thread sequence_11_shelf_start
	wait 6

	$bangalore_explosion1a remove
	wait 2

	$bangalore_explosion1b remove
	wait 4

	$bangalore_explosion2a remove
	wait 3

	$bangalore_explosion2b remove
	wait 2

	$bangalore_explosion3a remove
	wait 3

	$bangalore_explosion3b remove
}end

// shingle rangers 2 and 3 playing bangalore animation, then back to idle
//=========================================================================
shingle_ranger_bangalore:{
//=========================================================================
	self nodamage

	//self holster
	self thread coop_mod/replace.scr::holster //[200] Smithy - coop compatible. I hate the unholster bug...

	self anim bangalore
	self waittill animdone

	self anim shingle_coveridle_bang

	self health 10000
	self takedamage
}end

// after the barbwire is destroyed, guys run up to the base of the bunker
//=========================================================================
sequence_11_shelf_start:{
//=========================================================================
	level.m3l1a_sequence = 11

	$shingle_ranger1 lookat NULL
	$shingle_ranger2 lookat NULL
	$shingle_ranger3 lookat NULL

	$shingle_ranger1 say dfr_scripted_M3L1_102a_2  //Go go, get moving......
	$shingle_ranger1 anim shingle_stand_capt
	$shingle_ranger1 waittill animdone

	$shingle_ranger1 playsound shingle_guys_rush

	//println "SEQUENCE 11: moving the captain now"

	// add objective
	waitthread global/objectives.scr::add_objectives 5 2 "Follow the Captain to the bunker." $shingle_ranger1.origin
	waitthread global/objectives.scr::current_objectives 5
	thread follow_captain

	thread ai_add_todo $shingle_ranger1 level.m3l1a_sequence "move" NIL "sequence_12_bunker_base" NIL NIL $higgins1
	wait .75

	$shingle_ranger2 thread coop_mod/replace.scr::unholster //[200] Smithy - stupid unholster bug...
	//$shingle_ranger2 unholster
	thread ai_add_todo $shingle_ranger2 level.m3l1a_sequence "move"
	thread ai_add_todo $shingle_ranger3 level.m3l1a_sequence "move"
	wait .5

	$shingle_ranger3 thread coop_mod/replace.scr::unholster //[200] Smithy - stupid unholster bug...
	//$shingle_ranger3 unholster
	thread ai_add_todo $shingle_ranger4 level.m3l1a_sequence "move_mortar_death" NIL NIL 5.9 "mine"
	thread ai_add_todo $shingle_ranger5 level.m3l1a_sequence "move_mortar_death" NIL NIL 6.4 "mine"
	wait 1

	$shingle_ranger1 say streamed_dfr_scripted_M3L1_096a  //minefields, watch for minefields....

	// remove the player collision
	//$barbwire_fence_collision_player remove
}end

// when the player gets on the shelf, have guys run up to get gunned down
//=========================================================================
sequence_11_shelf_run:{
//=========================================================================

	// first wave
	thread ai_add_todo $shingle_wave1 level.m3l1a_sequence "move_mg_death" $shelf_death_path1 NIL 8
	thread ai_add_todo $shingle_wave3 level.m3l1a_sequence "move_mg_death" $shelf_death_path4 NIL 6
	wait .3

	thread ai_add_todo $shingle_wave2 level.m3l1a_sequence "move_mg_death" $shelf_death_path2 NIL 8
	thread ai_add_todo $shingle_wave9 level.m3l1a_sequence "move_mg_death" $shelf_death_path6 NIL 7
	wait .3

	thread ai_add_todo $shingle_wave17 level.m3l1a_sequence "move_mg_death" $shelf_death_path3 NIL 6
	thread ai_add_todo $shingle_wave18 level.m3l1a_sequence "move_mg_death" $shelf_death_path5 NIL 7
	wait .5

	// second wave
	thread ai_add_todo $shingle_wave5 level.m3l1a_sequence "move_mg_death" $shelf_death_path1 NIL 8
	thread ai_add_todo $shingle_wave6 level.m3l1a_sequence "move_mg_death" $shelf_death_path2 NIL 7
	wait .2

	thread ai_add_todo $shingle_wave15 level.m3l1a_sequence "move_mg_death" $shelf_death_path3 NIL 6
	thread ai_add_todo $shingle_wave12 level.m3l1a_sequence "move_mg_death" $shelf_death_path4 NIL 8
	wait .3

	thread ai_add_todo $shingle_wave10 level.m3l1a_sequence "move_mg_death" $shelf_death_path5 NIL 6
	thread ai_add_todo $shingle_wave7 level.m3l1a_sequence "move_mg_death" $shelf_death_path6 NIL 7
	wait .5

	// last wave
	thread ai_add_todo $shingle_wave14 level.m3l1a_sequence "move_mg_death" $shelf_death_path3 NIL 6
	thread ai_add_todo $shingle_wave4 level.m3l1a_sequence "move_mg_death" $shelf_death_path4 NIL 7
	wait .2

	thread ai_add_todo $shingle_wave11 level.m3l1a_sequence "move_mg_death" $shelf_death_path4 NIL 8
	thread ai_add_todo $shingle_wave13 level.m3l1a_sequence "move_mg_death" $shelf_death_path4 NIL 6

	thread ai_add_todo $shingle_ranger6 level.m3l1a_sequence "move_mg_death" $shelf_death_path4 NIL 8
}end

// follow captain objective marker updater
//=========================================================================
follow_captain:{
//=========================================================================
	while (level.flags[followcaptain] == NIL){
		set_objective_pos $shingle_ranger1.origin
		waitframe
	}
}end

// after the barbwire is destroyed, guys run up to the base of the bunker
//=========================================================================
sequence_12_bunker_base:{
//=========================================================================
	println "SEQUENCE 12 BUNKER BASE START"

	// wait for the player to get near the captain before continuing
	while (vector_length ((exec coop_mod/replace.scr::origin $shingle_ranger1) - $shingle_ranger1.origin) > 348){//chrissstrahl - coop compatible
		wait 2
	}

	$shingle_ranger2 lookat $shingle_ranger1
	$shingle_ranger3 lookat $shingle_ranger1
	$shingle_ranger1 nodamage
	$shingle_ranger2 nodamage
	$shingle_ranger3 nodamage

	level.m3l1a_sequence = 12

	waitthread global/objectives.scr::add_objectives 5 3  // completing follow the captain to the bunker
	waitthread global/objectives.scr::current_objectives 0
	level.flags[followcaptain] = 1
	waitframe

	// autosave the game
	if(level.gametype == 0){	//chrissstrahl - only do in sp
		exec global/autosave.scr 4
		waitframe
	}
	// the player has gotten close enough, we may begin.....
	$shingle_ranger1 exec coop_mod/replace.scr::lookat	//chrissstrahl - coop replacment
	wait .3

	$shingle_ranger1 say dfr_scripted_M3L1_098a_2  //hold up right here......
	$shingle_ranger1 waittill saydone
	wait .3

	$shingle_ranger1 lookat NULL
	wait 1

	$shingle_ranger1 anim bunker_peek_slow
	wait 2

	$mg42_middle1.setaimtarget = $sequence_12_mg42_target
	$mg42_middle2.setaimtarget = $sequence_12_mg42_target
	wait 2.2

	$shingle_ranger1 say dfr_scripted_M3L1_099a_2  //two mg42s, plus enfilade from that bunker....
	wait .5

	//chrissstrahl - should be aiming on who ever triers to cross, closest to
	if(level.gametype == 0){
		$mg42_middle1.setaimtarget = $player
		$mg42_middle2.setaimtarget = $player
	}else{
		level.mg42_attack_closest = 1
		thread maps/m3l1a/coopified.scr::mg42_attack_closest
	}

	$shingle_ranger1 waittill saydone
	wait 1

	$shingle_ranger1 lookat $shingle_ranger2
	wait .3

	$shingle_ranger1 say dfr_scripted_M3L1_100a_2  //Jefferson, Weber, you're up!!.....
	$shingle_ranger1 waittill saydone
	wait .5

	$shingle_ranger1 lookat NULL
	wait 1

	$shingle_ranger1 say dfr_scripted_M3L1_101a_2  //covering fire!!

	// remove the first playerclip
	$sequence_12_playerclip1 remove

	// make the guys not solid so they don't shoot each other
	$shingle_ranger1 nodamage
	$shingle_ranger2 nodamage
	$shingle_ranger3 nodamage
	wait .75

	$shingle_ranger1 runto $shingle_ranger1_12_aimpoint
	wait .3

	$shingle_ranger2 runto $shingle_ranger2_12_aimpoint
	wait .2

	$shingle_ranger3 runto $shingle_ranger3_12_aimpoint
	wait .4

	$shingle_ranger2 thread ai_shoot_volley  NIL $mg42_middle2
	$shingle_ranger3 thread ai_shoot_volley NIL $mg42_middle2
	$shingle_ranger1 waitthread ai_shoot_volley NIL $mg42_middle1

	$shingle_ranger1 say dfr_scripted_M3L1_105a_1  //Go
	$shingle_ranger1 waittill saydone
	wait .2

	$shingle_ranger2 runto $shingle_ranger2_12_path1
	wait .3

	$shingle_ranger3 runto $shingle_ranger3_12_path1
	$sequence_12_playerclip2 notsolid

	$shingle_ranger1 say dfr_scripted_M3L1_105a_1  //Go
	$shingle_ranger1 waittill saydone
	wait .2

	$shingle_ranger1 runto $t480

	$shingle_ranger1 say dfr_scripted_M3L1_105a_1  //Go
	$shingle_ranger1 waittill saydone

	//chrissstrahl - stop aiming on player
	if(level.gametype != 0){
		level.mg42_attack_closest = 0
	}

	$mg42_middle1.setaimtarget = $shingle_ranger3
	$mg42_middle2.setaimtarget = $shingle_ranger3
	wait .5

	$shingle_ranger1 turnto $shingle_ranger2
	$shingle_ranger1 waittill turndone

	$shingle_ranger1 turnto NULL
	wait 2

	$shingle_ranger3 takedamage
	//println "KILL RANGER 1"
	$shingle_ranger3 thread bhit 40
	wait .3

	//println "KILL RANGER 2"
	$shingle_ranger3 thread bhit 40
	wait .5

	//println "KILL RANGER FINAL!"
	$shingle_ranger3 thread bhit 20000
	wait 1

	$shingle_ranger1 exec coop_mod/replace.scr::turnto	//chrissstrahl - coop replacement
	$shingle_ranger1 waittill turndone

	// add objective
	waitthread global/objectives.scr::add_objectives 6 2 "Get to the trench." $mg42_bunker_target.origin
	waitthread global/objectives.scr::current_objectives 6

	local.ent = spawn script_origin
	local.ent.origin =  $trench_ranger.origin + ( -5 5 0)
	$trench_ranger thread gluer local.ent

	// remove the sergeant that made it to the crater
	$shingle_ranger2 takedamage
	$shingle_ranger2 thread bhit 20000


	// wait for the player to get near the captain before continuing
	local.count = 0

	local.dist = exec coop_mod/replace.scr::origin $shingle_ranger1	//chrissstrahl - coop compatible - get closest player to ranger
	while ((vector_length (local.dist - $shingle_ranger1.origin) > 192) && (vector_length (local.dist - $craters_cover1_target.origin) > 200) && (level.flags[craters] == 0)){
		$shingle_ranger1 say dfr_scripted_M3L1_073a_1  //powell get over here!!
		$shingle_ranger1 waittill saydone
		wait (3 + randomfloat(1))
		local.dist = exec coop_mod/replace.scr::origin $shingle_ranger1	//chrissstrahl - coop compatible
	}

	if (level.flags[craters] == 0){
		local.closestPlayer = exec coop_mod/replace.scr::player_closestTo $craters_cover1_target //chrissstrahl - coop compatible
		if (vector_length (local.closestPlayer.origin - $craters_cover1_target.origin) > 200){
			$shingle_ranger1 turnto local.closestPlayer
			$shingle_ranger1 waittill turndone

			if(local.closestPlayer == NULL){	//chrissstrahl - coop
				local.closestPlayer = exec coop_mod/replace.scr::player_closestTo $shingle_ranger1 //chrissstrahl - coop compatible
			}

			$shingle_ranger1 turnto NULL
			$shingle_ranger1 lookat local.closestPlayer	//chrissstrahl - coop
			wait .5

			$shingle_ranger1 say dfr_scripted_M3L1_104a_2  //powell, stick to those impact craters..
			$shingle_ranger1 waittill saydone
			wait .5

			$shingle_ranger1 lookat NULL
			wait .2

			$shingle_ranger1 lookat	$craters_cover3_target
			wait 1

			$shingle_ranger1 say dfr_scripted_M3L1_101a_2  //covering fire!!
			wait .75

			$shingle_ranger1 lookat	NULL

			$shingle_ranger1 runto $shingle_ranger1_12_aimpoint
			$shingle_ranger1 waittill movedone
			wait .2

			$shingle_ranger1 waitthread ai_shoot_volley NIL $mg42_middle1
			wait .2

			// let the player pass
			$sequence_12_playerclip2 notsolid

			$shingle_ranger1 say dfr_scripted_M3L1_102a_2  //go go, get moving.....
			wait 1

			$shingle_ranger1 runto $t480
			$shingle_ranger1 waittill movedone
			wait .2

			if(local.closestPlayer == NULL){	//chrissstrahl - coop
				local.closestPlayer = exec coop_mod/replace.scr::player_closestTo $shingle_ranger1 //chrissstrahl - coop compatible
			}
			$shingle_ranger1 turnto local.closestPlayer	//chrissstrahl - coop
			$shingle_ranger1 waittill turndone
		}
	}
	$shingle_ranger1 turnto NULL
}end

// spawn a reinforcement wave of guys to run to the shingle and dies
//=========================================================================
spawn_shingle_reinforcement_wave:{
//=========================================================================
	spawn "models/human/dday_29th_private" targetname "shingle_reinforcement_wave1" gun "m1 garand"
	spawn "models/human/dday_29th_private" targetname "shingle_reinforcement_wave2" gun "m1 garand"
	spawn "models/human/dday_ranger_private" targetname "shingle_reinforcement_wave5" gun "m1 garand"
	spawn "models/human/dday_ranger_private" targetname "shingle_reinforcement_wave6" gun "bar"
	spawn "models/human/dday_29th_private" targetname "shingle_reinforcement_wave11" gun "m1 garand"
	spawn "models/human/dday_ranger_private" targetname "shingle_reinforcement_wave12" gun "m1 garand"
	spawn "models/human/dday_29th_private" targetname "shingle_reinforcement_wave13" gun "bar"
	spawn "models/human/dday_29th_private" targetname "shingle_reinforcement_wave14" gun "m1 garand"

	$shingle_reinforcement_wave1 thread ai_friendly_setup NIL 1
	$shingle_reinforcement_wave2 thread ai_friendly_setup NIL 1
	$shingle_reinforcement_wave5 thread ai_friendly_setup NIL 1
	$shingle_reinforcement_wave6 thread ai_friendly_setup NIL 1
	$shingle_reinforcement_wave11 thread ai_friendly_setup NIL 1
	$shingle_reinforcement_wave12 thread ai_friendly_setup NIL 1
	$shingle_reinforcement_wave13 thread ai_friendly_setup NIL 1
	$shingle_reinforcement_wave14 thread ai_friendly_setup NIL 1

	$shingle_reinforcement_wave1.origin = $shingle_wave_spawn1.origin
	$shingle_reinforcement_wave2.origin = $shingle_wave_spawn2.origin
	$shingle_reinforcement_wave5.origin = $shingle_wave_spawn5.origin
	$shingle_reinforcement_wave6.origin = $shingle_wave_spawn6.origin
	$shingle_reinforcement_wave11.origin = $shingle_wave_spawn11.origin
	$shingle_reinforcement_wave12.origin = $shingle_wave_spawn12.origin
	$shingle_reinforcement_wave13.origin = $shingle_wave_spawn13.origin
	$shingle_reinforcement_wave14.origin = $shingle_wave_spawn14.origin

	$shingle_reinforcement_wave1 turnto $mg42_middle1
	$shingle_reinforcement_wave2 turnto $mg42_middle1
	$shingle_reinforcement_wave5 turnto $mg42_middle1
	$shingle_reinforcement_wave6 turnto $mg42_middle1
	$shingle_reinforcement_wave11 turnto $mg42_middle1
	$shingle_reinforcement_wave12 turnto $mg42_middle1
	$shingle_reinforcement_wave13 turnto $mg42_middle1
	$shingle_reinforcement_wave14 turnto $mg42_middle1

	thread ai_add_todo $shingle_reinforcement_wave1 level.m3l1a_sequence "move_mg_death" $shingle_wave1_path_8 NIL 5.75
	thread ai_add_todo $shingle_reinforcement_wave2 level.m3l1a_sequence "move_mg_death" $shingle_wave2_path_8 NIL 6.25
	thread ai_add_todo $shingle_reinforcement_wave5 level.m3l1a_sequence "move_mortar_death" $shingle_wave5_path_8 NIL 6.5
	thread ai_add_todo $shingle_reinforcement_wave6 level.m3l1a_sequence "move_mg_death" $shingle_wave6_path_8 NIL 6.75
	thread ai_add_todo $shingle_reinforcement_wave11 level.m3l1a_sequence "move_mg_death" $shingle_wave11_path_8 NIL 6.25
	thread ai_add_todo $shingle_reinforcement_wave12 level.m3l1a_sequence "move_mortar_death" $shingle_wave12_path_8 NIL 5
	thread ai_add_todo $shingle_reinforcement_wave13 level.m3l1a_sequence "move_mg_death" $shingle_wave13_path_8 NIL 7
	thread ai_add_todo $shingle_reinforcement_wave14 level.m3l1a_sequence "move_mg_death" $shingle_wave14_path_8 NIL 7.25

	wait 8.5
}end


//************************************************
//************************************************
// AI movement sequences
//************************************************

// sequence 1, center branch - starting area off boat
//=========================================================================
player_sequence_1_center:{
//=========================================================================
	println "\n\n\n\nStuffing Sequence 1 - Center Branch"

	level.m3l1a_sequence = 1
	level.m3l1a_sequence_branch = "center"
	level.m3l1a_sequence_isupdating = 1

	thread ai_add_todo $higgins3_ranger1 level.m3l1a_sequence "move"
	thread ai_add_todo $higgins3_ranger2 level.m3l1a_sequence "move"

	thread ai_add_todo $higgins5_ranger1 level.m3l1a_sequence "move"
	wait .75

	thread ai_add_todo $higgins1_ranger7 level.m3l1a_sequence "move"
	thread ai_add_todo $higgins1_ranger6 level.m3l1a_sequence "move"
	thread ai_add_todo $higgins1_ranger8 level.m3l1a_sequence "move"

	thread ai_add_todo $higgins3_ranger3 level.m3l1a_sequence "move"

	thread ai_add_todo $higgins5_ranger3 level.m3l1a_sequence "move"
	wait .75

	thread ai_add_todo $higgins1_ranger9 level.m3l1a_sequence "move"
	thread ai_add_todo $higgins1_ranger10 level.m3l1a_sequence "move"
	wait .5

	thread ai_add_todo $higgins3_ranger4 level.m3l1a_sequence "move"
	thread ai_add_todo $higgins3_ranger5 level.m3l1a_sequence "move"

	thread ai_add_todo $higgins5_ranger5 level.m3l1a_sequence "move"

	// add extra sequences
	thread ai_add_todo $higgins1_ranger7 level.m3l1a_sequence "sequence"  NIL ai_shoot_volley
	thread ai_add_todo $higgins3_ranger1 level.m3l1a_sequence "sequence"  NIL ai_shoot_volley
	thread ai_add_todo $higgins5_ranger1 level.m3l1a_sequence "sequence"  NIL ai_shoot_volley

	level.m3l1a_sequence_isupdating = 0
}end

// sequence 2, center branch - shore line
//=========================================================================
player_sequence_2_center:{
//=========================================================================
	//[200] Smithy - use nottriggerable and delete for extra safety...
	$player_sequence_2_left nottriggerable
	$player_sequence_2_left delete
	$player_sequence_2_right nottriggerable
	$player_sequence_2_right delete
	$player_sequence_2_center nottriggerable
	$player_sequence_2_center delete

	println "\n\n\n\nSequence 2 - Center Branch"

	while (level.m3l1a_sequence_isupdating == 1){
		println "SEQUENCE 2 CENTER: waiting to update"
		wait .2
	}

	level.m3l1a_sequence = 2
	level.m3l1a_sequence_branch = "center"
	level.m3l1a_sequence_isupdating = 1

	thread ai_add_todo $higgins1_ranger10 level.m3l1a_sequence "sequence" NIL "higgins1_ranger10_2_center_speak"
	wait 3

	thread ai_add_todo $higgins3_ranger1 level.m3l1a_sequence "move"
	thread ai_add_todo $higgins3_ranger2 level.m3l1a_sequence "move"

	thread ai_add_todo $higgins5_ranger1 level.m3l1a_sequence "move"
	wait .75

	thread ai_add_todo $higgins3_ranger3 level.m3l1a_sequence "move"
	thread ai_add_todo $higgins3_ranger4 level.m3l1a_sequence "move"

	thread ai_add_todo $higgins5_ranger3 level.m3l1a_sequence "move"
	wait 1

	thread ai_add_todo $higgins3_ranger5 level.m3l1a_sequence "move"

	thread ai_add_todo $higgins5_ranger5 level.m3l1a_sequence "move"


	// move the guys in the sequence
	thread ai_add_todo $higgins1_ranger6 level.m3l1a_sequence "move"
	thread ai_add_todo $higgins1_ranger7 level.m3l1a_sequence "move"
	thread ai_add_todo $higgins1_ranger8 level.m3l1a_sequence "move"
	thread ai_add_todo $higgins1_ranger9 level.m3l1a_sequence "move"
	thread ai_add_todo $higgins1_ranger10 level.m3l1a_sequence "move"

	// add extra sequences
	thread ai_add_todo $higgins1_ranger8 level.m3l1a_sequence "sequence"  NIL ai_shoot_volley
	thread ai_add_todo $higgins5_ranger5 level.m3l1a_sequence "sequence"  NIL ai_shoot_volley
	thread ai_add_todo $higgins3_ranger3 level.m3l1a_sequence "sequence"  NIL ai_shoot_volley

	level.m3l1a_sequence_isupdating = 0
}end

// sequence 2, right branch - shore line
//=========================================================================
player_sequence_2_right:{
//=========================================================================
	//[200] Smithy - use nottriggerable and delete for extra safety...
	$player_sequence_2_left nottriggerable
	$player_sequence_2_left delete
	$player_sequence_2_right nottriggerable
	$player_sequence_2_right delete
	$player_sequence_2_center nottriggerable
	$player_sequence_2_center delete

	println "\n\n\n\nSequence 2 - Right Branch"

	while (level.m3l1a_sequence_isupdating == 1){
		println "SEQUENCE 2 RIGHT: waiting to update"
		wait .2
	}

	level.m3l1a_sequence = 2
	level.m3l1a_sequence_branch = "right"
	level.m3l1a_sequence_isupdating = 1

	thread ai_add_todo $higgins5_ranger5 level.m3l1a_sequence "sequence" NIL "higgins5_ranger5_2_right_speak"
	wait 3

	thread ai_add_todo $higgins1_ranger6 level.m3l1a_sequence "move"

	thread ai_add_todo $higgins3_ranger1 level.m3l1a_sequence "move"
	thread ai_add_todo $higgins3_ranger2 level.m3l1a_sequence "move"
	wait .5

	thread ai_add_todo $higgins1_ranger8 level.m3l1a_sequence "move"
	thread ai_add_todo $higgins1_ranger10 level.m3l1a_sequence "move"

	thread ai_add_todo $higgins3_ranger3 level.m3l1a_sequence "move"
	thread ai_add_todo $higgins3_ranger4 level.m3l1a_sequence "move"
	wait .5

	thread ai_add_todo $higgins3_ranger5 level.m3l1a_sequence "move"


	// move the AI that are in the sequence
	thread ai_add_todo $higgins5_ranger1 level.m3l1a_sequence "move"
	thread ai_add_todo $higgins5_ranger3 level.m3l1a_sequence "move"
	thread ai_add_todo $higgins5_ranger5 level.m3l1a_sequence "move"

	thread ai_add_todo $higgins1_ranger7 level.m3l1a_sequence "move"
	thread ai_add_todo $higgins1_ranger9 level.m3l1a_sequence "move"

	// add extra sequences
	thread ai_add_todo $higgins1_ranger8 level.m3l1a_sequence "sequence"  NIL ai_shoot_volley
	thread ai_add_todo $higgins5_ranger5 level.m3l1a_sequence "sequence"  NIL ai_shoot_volley
	thread ai_add_todo $higgins3_ranger3 level.m3l1a_sequence "sequence"  NIL ai_shoot_volley

	level.m3l1a_sequence_isupdating = 0
}end

// sequence 2, left branch - shore line
//=========================================================================
player_sequence_2_left:{
//=========================================================================
	//[200] Smithy - use nottriggerable and delete for extra safety...
	$player_sequence_2_left nottriggerable
	$player_sequence_2_left delete
	$player_sequence_2_right nottriggerable
	$player_sequence_2_right delete
	$player_sequence_2_center nottriggerable
	$player_sequence_2_center delete

	println "\n\n\n\nSequence 2 - Left Branch"

	while (level.m3l1a_sequence_isupdating == 1){
		println "SEQUENCE 2 LEFT: waiting to update"
		wait .2
	}

	level.m3l1a_sequence = 2
	level.m3l1a_sequence_branch = "left"
	level.m3l1a_sequence_isupdating = 1

	thread ai_add_todo $higgins3_ranger5 level.m3l1a_sequence "sequence" NIL "higgins3_ranger5_2_left_speak"
	wait 3

	thread ai_add_todo $higgins1_ranger6 level.m3l1a_sequence "move"
	thread ai_add_todo $higgins1_ranger7 level.m3l1a_sequence "move"

	thread ai_add_todo $higgins5_ranger1 level.m3l1a_sequence "move"
	thread ai_add_todo $higgins5_ranger3 level.m3l1a_sequence "move"
	wait .3

	thread ai_add_todo $higgins1_ranger8 level.m3l1a_sequence "move"
	thread ai_add_todo $higgins1_ranger9 level.m3l1a_sequence "move"
	wait .3

	thread ai_add_todo $higgins1_ranger10 level.m3l1a_sequence "move"

	thread ai_add_todo $higgins3_ranger2 level.m3l1a_sequence "move"
	wait .3

	thread ai_add_todo $higgins3_ranger4 level.m3l1a_sequence "move"

	thread ai_add_todo $higgins5_ranger5 level.m3l1a_sequence "move"

	// make the guys in the sequence move
	thread ai_add_todo $higgins3_ranger1 level.m3l1a_sequence "move"
	thread ai_add_todo $higgins3_ranger3 level.m3l1a_sequence "move"
	thread ai_add_todo $higgins3_ranger5 level.m3l1a_sequence "move"

	// add extra sequences
	thread ai_add_todo $higgins1_ranger8 level.m3l1a_sequence "sequence"  NIL ai_shoot_volley
	thread ai_add_todo $higgins5_ranger5 level.m3l1a_sequence "sequence"  NIL ai_shoot_volley
	thread ai_add_todo $higgins3_ranger3 level.m3l1a_sequence "sequence"  NIL ai_shoot_volley

	level.m3l1a_sequence_isupdating = 0
}end

// sequence 3, center branch - clearing first ramps
//=========================================================================
player_sequence_3_center:{
//=========================================================================
	//[200] Smithy - use nottriggerable and delete for extra safety...
	$player_sequence_3_left nottriggerable
	$player_sequence_3_left delete
	$player_sequence_3_right nottriggerable
	$player_sequence_3_right delete
	$player_sequence_3_center nottriggerable
	$player_sequence_3_center delete

	println "\n\n\n\nSequence 3 - Center Branch"

	while (level.m3l1a_sequence_isupdating == 1){
		println "SEQUENCE 3 CENTER: waiting to update"
		wait .2
	}

	level.m3l1a_sequence = 3
	level.m3l1a_sequence_branch = "center"
	level.m3l1a_sequence_isupdating = 1

	// spawn the right engineer in for the sequence
	spawn "models/human/dday_engineer" targetname "right_engineer" gun "colt 45"
	$right_engineer thread ai_friendly_setup NIL 1
	$right_engineer notsolid
	$right_engineer holster
	$right_engineer surface hedgebomb "+nodraw"
	$right_engineer.origin = $right_engineer_spawn.origin

	$right_engineer_spawn remove
	$right_engineer solid

	thread ai_add_todo $higgins1_ranger6 level.m3l1a_sequence "move"
	thread ai_add_todo $higgins1_ranger7 level.m3l1a_sequence "move"
	thread ai_add_todo $higgins1_ranger8 level.m3l1a_sequence "move"
	thread ai_add_todo $higgins1_ranger9 level.m3l1a_sequence "move"
	thread ai_add_todo $higgins1_ranger10 level.m3l1a_sequence "move"

	thread ai_add_todo $higgins3_ranger1 level.m3l1a_sequence "move_crouch"
	thread ai_add_todo $higgins3_ranger2 level.m3l1a_sequence "move_crouch"
	thread ai_add_todo $higgins3_ranger3 level.m3l1a_sequence "move_crouch"
	thread ai_add_todo $higgins3_ranger5 level.m3l1a_sequence "move_crouch"

	// add extra sequences
	thread ai_add_todo $higgins1_ranger8 level.m3l1a_sequence "sequence"  NIL ai_shoot_volley
	thread ai_add_todo $higgins1_ranger9 level.m3l1a_sequence "sequence"  NIL ai_shoot_volley
	thread ai_add_todo $higgins3_ranger2 level.m3l1a_sequence "sequence"  NIL ai_shoot_volley 1

	level.m3l1a_sequence_isupdating = 0
}end

// sequence 3, right branch - clearing first ramps
//=========================================================================
player_sequence_3_right:{
//=========================================================================
	//[200] Smithy - use nottriggerable and delete for extra safety...
	$player_sequence_3_left nottriggerable
	$player_sequence_3_left delete
	$player_sequence_3_right nottriggerable
	$player_sequence_3_right delete
	$player_sequence_3_center nottriggerable
	$player_sequence_3_center delete

	println "\n\n\n\nSequence 3 - Right Branch"

	while (level.m3l1a_sequence_isupdating == 1){
		println "SEQUENCE 3 RIGHT: waiting to update"
		wait .2
	}

	level.m3l1a_sequence = 3
	level.m3l1a_sequence_branch = "right"
	level.m3l1a_sequence_isupdating = 1

	// spawn the right engineer in for the sequence
	spawn "models/human/dday_engineer" targetname "right_engineer" gun "colt 45"
	$right_engineer thread ai_friendly_setup NIL 1
	$right_engineer notsolid
	$right_engineer holster
	$right_engineer surface hedgebomb "+nodraw"
	$right_engineer.origin = $right_engineer_spawn.origin

	$right_engineer_spawn remove
	$right_engineer solid

	thread ai_add_todo $higgins1_ranger6 level.m3l1a_sequence "move"
	thread ai_add_todo $higgins1_ranger7 level.m3l1a_sequence "move"
	thread ai_add_todo $higgins1_ranger8 level.m3l1a_sequence "move"
	thread ai_add_todo $higgins1_ranger9 level.m3l1a_sequence "move"
	thread ai_add_todo $higgins1_ranger10 level.m3l1a_sequence "move"

	thread ai_add_todo $higgins3_ranger1 level.m3l1a_sequence "move_crouch"
	thread ai_add_todo $higgins3_ranger2 level.m3l1a_sequence "move_crouch"
	thread ai_add_todo $higgins3_ranger3 level.m3l1a_sequence "move_crouch"
	thread ai_add_todo $higgins3_ranger5 level.m3l1a_sequence "move_crouch"

	// add extra sequences
	thread ai_add_todo $higgins1_ranger9 level.m3l1a_sequence "sequence"  NIL ai_shoot_volley
	thread ai_add_todo $higgins1_ranger6 level.m3l1a_sequence "sequence"  NIL ai_shoot_volley
	thread ai_add_todo $higgins3_ranger2 level.m3l1a_sequence "sequence"  NIL ai_shoot_volley 1

	level.m3l1a_sequence_isupdating = 0
}end

// sequence 3, left branch - clearing first ramps
//=========================================================================
player_sequence_3_left:{
//=========================================================================
	//[200] Smithy - use nottriggerable and delete for extra safety...
	$player_sequence_3_left nottriggerable
	$player_sequence_3_left delete
	$player_sequence_3_right nottriggerable
	$player_sequence_3_right delete
	$player_sequence_3_center nottriggerable
	$player_sequence_3_center delete

	println "\n\n\n\nSequence 3 - Left Branch"

	while (level.m3l1a_sequence_isupdating == 1){
		println "SEQUENCE 3 LEFT: waiting to update"
		wait .2
	}

	level.m3l1a_sequence = 3
	level.m3l1a_sequence_branch = "left"
	level.m3l1a_sequence_isupdating = 1

	// spawn the left engineer in for the sequence
	spawn "models/human/dday_engineer" targetname "left_engineer" gun "colt 45"
	$left_engineer waitthread ai_friendly_setup NIL 1
	$left_engineer notsolid
	$left_engineer holster
	$left_engineer surface hedgebomb "+nodraw"
	$left_engineer.origin = $left_engineer_spawn.origin

	$left_engineer_spawn remove
	$left_engineer solid

	thread ai_add_todo $higgins1_ranger6 level.m3l1a_sequence "move"
	thread ai_add_todo $higgins1_ranger7 level.m3l1a_sequence "move"
	thread ai_add_todo $higgins1_ranger8 level.m3l1a_sequence "move"
	thread ai_add_todo $higgins1_ranger9 level.m3l1a_sequence "move"
	thread ai_add_todo $higgins1_ranger10 level.m3l1a_sequence "move"

	thread ai_add_todo $higgins3_ranger1 level.m3l1a_sequence "move_crouch"
	thread ai_add_todo $higgins3_ranger2 level.m3l1a_sequence "move_crouch"
	thread ai_add_todo $higgins3_ranger3 level.m3l1a_sequence "move_crouch"
	thread ai_add_todo $higgins3_ranger5 level.m3l1a_sequence "move_crouch"

	// add extra sequences
	thread ai_add_todo $higgins1_ranger8 level.m3l1a_sequence "sequence"  NIL ai_shoot_volley
	thread ai_add_todo $higgins3_ranger3 level.m3l1a_sequence "sequence"  NIL ai_shoot_volley 1
	thread ai_add_todo $higgins1_ranger9 level.m3l1a_sequence "sequence"  NIL ai_shoot_volley

	level.m3l1a_sequence_isupdating = 0
}end

// sequence 4, center branch - clearing first ramps
//=========================================================================
player_sequence_4_center:{
//=========================================================================
	//[200] Smithy - use nottriggerable and delete for extra safety...
	$player_sequence_4_left nottriggerable
	$player_sequence_4_left delete
	$player_sequence_4_right nottriggerable
	$player_sequence_4_right delete
	$player_sequence_4_center nottriggerable
	$player_sequence_4_center delete

	println "\n\n\n\nSequence 4 - Center Branch"

	while (level.m3l1a_sequence_isupdating == 1){
		println "SEQUENCE 4 CENTER: waiting to update"
		wait .2
	}

	level.m3l1a_sequence = 4
	level.m3l1a_sequence_branch = "center"
	level.m3l1a_sequence_isupdating = 1

	thread ai_add_todo $higgins1_ranger6 level.m3l1a_sequence "move_crouch"
	thread ai_add_todo $higgins1_ranger7 level.m3l1a_sequence "move_crouch"
	thread ai_add_todo $higgins1_ranger8 level.m3l1a_sequence "move_crouch"
	thread ai_add_todo $higgins1_ranger9 level.m3l1a_sequence "move_crouch"
	thread ai_add_todo $higgins1_ranger10 level.m3l1a_sequence "move_crouch"

	thread ai_add_todo $higgins3_ranger4 level.m3l1a_sequence "move_crouch"

	thread ai_add_todo $higgins5_ranger1 level.m3l1a_sequence "move_crouch"
	thread ai_add_todo $higgins5_ranger3 level.m3l1a_sequence "move_crouch"
	thread ai_add_todo $higgins5_ranger5 level.m3l1a_sequence "move_crouch"

	// do the left engineer sequence if he's alive
	if (isalive $left_engineer){
		thread ai_add_todo $left_engineer level.m3l1a_sequence "sequence" NIL "sequence_4_left_engineer"
	}

	// move and kill the right engineer
	thread ai_add_todo $right_engineer level.m3l1a_sequence "move_mg_death" $sequence_4_right_engineer_path1 NIL NIL NIL 2

	// add extra sequences
	thread ai_add_todo $higgins1_ranger8 level.m3l1a_sequence "sequence"  NIL ai_shoot_volley 1
	thread ai_add_todo $higgins1_ranger9 level.m3l1a_sequence "sequence"  NIL ai_shoot_volley 1
	wait 4

	// move the scripted sequence guys
	thread ai_add_todo $higgins5_ranger3 level.m3l1a_sequence "move_crouch" $higgins5_ranger3_path_4_scripted1
	thread ai_add_todo $higgins1_ranger7 level.m3l1a_sequence "move_crouch" $higgins1_ranger7_path_4_scripted1

	level.m3l1a_sequence_isupdating = 0
}end

// sequence 4, right branch - clearing first ramps, hedgehog
//=========================================================================
player_sequence_4_right:{
//=========================================================================
	//[200] Smithy - use nottriggerable and delete for extra safety...
	$player_sequence_4_left nottriggerable
	$player_sequence_4_left delete
	$player_sequence_4_right nottriggerable
	$player_sequence_4_right delete
	$player_sequence_4_center nottriggerable
	$player_sequence_4_center delete

	println "\n\n\n\nSequence 4 - Right Branch"

	while (level.m3l1a_sequence_isupdating == 1){
		println "SEQUENCE 4 RIGHT: waiting to update"
		wait .2
	}

	level.m3l1a_sequence = 4
	level.m3l1a_sequence_branch = "right"
	level.m3l1a_sequence_isupdating = 1

	// if the engineer and main guy are alive, play the sequence
	if (isalive $higgins5_ranger3 && (isalive $right_engineer)){
		thread ai_add_todo $higgins5_ranger3 level.m3l1a_sequence "sequence" NIL "higgins5_ranger3_4_right_engineer"
	}
	else{
		thread ai_add_todo $higgins5_ranger3 level.m3l1a_sequence "move_crouch"
		wait .4

		thread ai_add_todo $higgins1_ranger7 level.m3l1a_sequence "move_crouch"
		wait .3

		thread ai_add_todo $right_engineer level.m3l1a_sequence "move_mg_death" $sequence_4_right_engineer_path1 NIL NIL NIL 2
	}

	// move and kill the left engineer
	thread ai_add_todo $left_engineer level.m3l1a_sequence "move_mortar_death" $sequence_4_left_engineer_path2 NIL NIL NIL 3
	wait .4

	thread ai_add_todo $higgins1_ranger6 level.m3l1a_sequence "move_crouch"
	thread ai_add_todo $higgins1_ranger8 level.m3l1a_sequence "move_crouch"
	thread ai_add_todo $higgins1_ranger9 level.m3l1a_sequence "move_crouch"
	thread ai_add_todo $higgins1_ranger10 level.m3l1a_sequence "move_crouch"
	wait .2

	thread ai_add_todo $higgins3_ranger4 level.m3l1a_sequence "move_crouch"
	wait .75

	thread ai_add_todo $higgins5_ranger1 level.m3l1a_sequence "move_crouch"
	thread ai_add_todo $higgins5_ranger5 level.m3l1a_sequence "move_crouch"

	// add extra sequences
	thread ai_add_todo $higgins1_ranger10 level.m3l1a_sequence "sequence"  NIL ai_shoot_volley 1
	thread ai_add_todo $higgins5_ranger1 level.m3l1a_sequence "sequence"  NIL ai_shoot_volley 1

	// move the scripted sequence guys
	thread ai_add_todo $higgins5_ranger3 level.m3l1a_sequence "move_crouch" $higgins5_ranger3_path_4_scripted1
	thread ai_add_todo $higgins1_ranger7 level.m3l1a_sequence "move_crouch" $higgins1_ranger7_path_4_scripted1

	level.m3l1a_sequence_isupdating = 0
}end

// sequence 4, left branch - clearing first ramps hedgehog
//=========================================================================
player_sequence_4_left:{
//=========================================================================
	//[200] Smithy - use nottriggerable and delete for extra safety...
	$player_sequence_4_left nottriggerable
	$player_sequence_4_left delete
	$player_sequence_4_right nottriggerable
	$player_sequence_4_right delete
	$player_sequence_4_center nottriggerable
	$player_sequence_4_center delete

	println "\n\n\n\nSequence 4 - Left Branch"

	while (level.m3l1a_sequence_isupdating == 1){
		println "SEQUENCE 4 LEFT: waiting to update"
		wait .2
	}

	level.m3l1a_sequence = 4
	level.m3l1a_sequence_branch = "left"
	level.m3l1a_sequence_isupdating = 1

	// engineer thread
	if (isalive $left_engineer){
		thread ai_add_todo $left_engineer level.m3l1a_sequence "sequence" NIL "sequence_4_left_engineer"
	}

	thread ai_add_todo $right_engineer level.m3l1a_sequence "move_mortar_death" $sequence_4_right_engineer_path1 NIL NIL NIL 3

	thread ai_add_todo $higgins1_ranger6 level.m3l1a_sequence "move_crouch"
	thread ai_add_todo $higgins1_ranger7 level.m3l1a_sequence "move_crouch"
	thread ai_add_todo $higgins1_ranger8 level.m3l1a_sequence "move_crouch"
	thread ai_add_todo $higgins1_ranger9 level.m3l1a_sequence "move_crouch"
	thread ai_add_todo $higgins1_ranger10 level.m3l1a_sequence "move_crouch"

	thread ai_add_todo $higgins3_ranger4 level.m3l1a_sequence "move_crouch"

	thread ai_add_todo $higgins5_ranger1 level.m3l1a_sequence "move_crouch"
	thread ai_add_todo $higgins5_ranger3 level.m3l1a_sequence "move_crouch"
	thread ai_add_todo $higgins5_ranger5 level.m3l1a_sequence "move_crouch"

	// add extra sequences
	thread ai_add_todo $higgins3_ranger4 level.m3l1a_sequence "sequence"  NIL ai_shoot_volley 1
	wait 4

	// move the scripted sequence guys
	thread ai_add_todo $higgins5_ranger3 level.m3l1a_sequence "move_crouch" $higgins5_ranger3_path_4_scripted1
	thread ai_add_todo $higgins1_ranger7 level.m3l1a_sequence "move_crouch" $higgins1_ranger7_path_4_scripted1

	level.m3l1a_sequence_isupdating = 0
}end

// sequence 5, center branch - clearing second ramps
//=========================================================================
player_sequence_5_center:{
//=========================================================================
	//[200] Smithy - use nottriggerable and delete for extra safety...
	$player_sequence_5_left nottriggerable
	$player_sequence_5_left delete
	$player_sequence_5_right nottriggerable
	$player_sequence_5_right delete
	$player_sequence_5_center nottriggerable
	$player_sequence_5_center delete

	println "\n\n\n\nSequence 5 - Center Branch"

	// spawn the radio guy in the center
	spawn "models/human/dday_29th_private_radio" targetname "center_radioman" gun "none" angle "90"
	$center_radioman waitthread ai_friendly_setup NIL 1
	$center_radioman.origin = (192.00 640.00 -456.00)
	$center_radioman thread sequence_5_center_radioman

	// spawn the right medic and patient, execute thread
	spawn "models/human/dday_29th_private_patient" targetname "right_patient" gun "none" angles "0 0 0"
	$right_patient waitthread ai_friendly_setup NIL 1
	$right_patient notsolid
	$right_patient.origin = (640.00 -384.00 -472.00)
	$right_patient anim patient01

	spawn "models/human/dday_ranger_medic" targetname "right_medic" gun "none" angles "0 90 0"
	$right_medic waitthread ai_friendly_setup NIL 1
	$right_medic notsolid
	$right_medic.origin = (592.00 -404.00 -472.00)
	$right_medic anim medic01
	thread sequence_5_medic $right_medic $right_patient "right"
	$right_medic solid

	// spawn the left medic and patient, execute thread
	spawn "models/human/dday_29th_private_patient" targetname "left_patient" gun "none" angles "0 0 0"
	$left_patient waitthread ai_friendly_setup NIL 1
	$left_patient notsolid
	$left_patient.origin = ( -552.00 -240.00 -472.00)
	$left_patient anim patient01

	spawn "models/human/dday_ranger_medic" targetname "left_medic" gun "none" angles "0 90 0"
	$left_medic waitthread ai_friendly_setup NIL 1
	$left_medic notsolid
	$left_medic.origin = ( -600.00 -260.00 -472.00)
	$left_medic anim medic01
	thread sequence_5_medic $left_medic $left_patient "left"
	$left_medic solid

	// spawn left mr. freak out dude
	spawn "models/human/dday_29th_private" targetname "left_freaky" gun "none" angle "90"
	$left_freaky waitthread ai_friendly_setup NIL 1
	$left_freaky.origin = ( -768.00 400.00 -464.00)
	$left_freaky anim hedge_shake03
	$left_freaky thread sequence_5_freaky "left"

	// spawn right mr. freak out dude
	spawn "models/human/dday_29th_private" targetname "right_freaky" gun "none" angle "90"
	$right_freaky waitthread ai_friendly_setup NIL 1
	$right_freaky.origin = (1200.00 264.00 -464.00)
	$right_freaky anim hedge_shake03
	$right_freaky thread sequence_5_freaky "right"

	while (level.m3l1a_sequence_isupdating == 1){
		println "SEQUENCE 5 CENTER: waiting to update"
		wait .2
	}

	level.m3l1a_sequence = 5
	level.m3l1a_sequence_branch = "center"
	level.m3l1a_sequence_isupdating = 1

	if (isalive $higgins1_ranger10 && isalive $higgins1_ranger8){
		thread ai_add_todo $higgins1_ranger10 level.m3l1a_sequence "sequence" NIL "higgins1_ranger10_5_center_injure"
	}else{
		thread ai_add_todo $higgins1_ranger8 level.m3l1a_sequence "move_crouch"
	}

	if !(isalive $left_engineer){
		thread ai_add_todo $higgins3_ranger1 level.m3l1a_sequence "move_crouch"
		thread ai_add_todo $higgins3_ranger2 level.m3l1a_sequence "move_crouch"
		thread ai_add_todo $higgins3_ranger3 level.m3l1a_sequence "move_crouch"
		thread ai_add_todo $higgins3_ranger5 level.m3l1a_sequence "move_crouch"
	}

	thread ai_add_todo $higgins1_ranger6 level.m3l1a_sequence "move_crouch"
	thread ai_add_todo $higgins1_ranger7 level.m3l1a_sequence "move_crouch"
	thread ai_add_todo $higgins1_ranger9 level.m3l1a_sequence "move_crouch"

	thread ai_add_todo $higgins3_ranger4 level.m3l1a_sequence "move_crouch"

	thread ai_add_todo $higgins5_ranger1 level.m3l1a_sequence "move_crouch"
	thread ai_add_todo $higgins5_ranger3 level.m3l1a_sequence "move_crouch"
	thread ai_add_todo $higgins5_ranger5 level.m3l1a_sequence "move_crouch"

	// add extra sequences
	thread ai_add_todo $higgins3_ranger1 level.m3l1a_sequence "sequence"  NIL ai_shoot_volley 1
	thread ai_add_todo $higgins1_ranger6 level.m3l1a_sequence "sequence"  NIL ai_shoot_volley 1
	thread ai_add_todo $higgins5_ranger3 level.m3l1a_sequence "sequence"  NIL ai_shoot_volley 1
	wait 3

	if !(isalive $left_engineer){
		thread ai_add_todo $higgins3_ranger1 level.m3l1a_sequence "move_crouch" $higgins3_ranger1_path_5_scripted1
		thread ai_add_todo $higgins3_ranger2 level.m3l1a_sequence "move_crouch" $higgins3_ranger2_path_5_scripted1
		thread ai_add_todo $higgins3_ranger3 level.m3l1a_sequence "move_crouch" $higgins3_ranger3_path_5_scripted1
		thread ai_add_todo $higgins3_ranger5 level.m3l1a_sequence "move_crouch" $higgins3_ranger5_path_5_scripted1
	}

	level.m3l1a_sequence_isupdating = 0
}end

// sequence 5, right branch - clearing second ramps
//=========================================================================
player_sequence_5_right:{
//=========================================================================
	//[200] Smithy - use nottriggerable and delete for extra safety...
	$player_sequence_5_left nottriggerable
	$player_sequence_5_left delete
	$player_sequence_5_right nottriggerable
	$player_sequence_5_right delete
	$player_sequence_5_center nottriggerable
	$player_sequence_5_center delete

	println "\n\n\n\nSequence 5 - right Branch"

	// spawn the radio guy in the center
	spawn "models/human/dday_29th_private_radio" targetname "center_radioman" gun "none" angle "90"
	$center_radioman waitthread ai_friendly_setup NIL 1
	$center_radioman.origin = (192.00 640.00 -456.00)
	$center_radioman thread sequence_5_center_radioman

	// spawn the right medic and patient, execute thread
	spawn "models/human/dday_29th_private_patient" targetname "right_patient" gun "none" angles "0 0 0"
	$right_patient waitthread ai_friendly_setup NIL 1
	$right_patient notsolid
	$right_patient.origin = (640.00 -384.00 -472.00)
	$right_patient anim patient01

	spawn "models/human/dday_ranger_medic" targetname "right_medic" gun "none" angles "0 90 0"
	$right_medic waitthread ai_friendly_setup NIL 1
	$right_medic notsolid
	$right_medic.origin = (592.00 -404.00 -472.00)
	$right_medic anim medic01
	thread sequence_5_medic $right_medic $right_patient "right"
	$right_medic solid

	// spawn right mr. freak out dude
	spawn "models/human/dday_29th_private" targetname "right_freaky" gun "none" angle "90"
	$right_freaky waitthread ai_friendly_setup NIL 1
	$right_freaky.origin = (1200.00 264.00 -464.00)
	$right_freaky anim hedge_shake03
	$right_freaky thread sequence_5_freaky "right"

	while (level.m3l1a_sequence_isupdating == 1){
		println "SEQUENCE 5 RIGHT: waiting to update"
		wait .2
	}

	level.m3l1a_sequence = 5
	level.m3l1a_sequence_branch = "right"
	level.m3l1a_sequence_isupdating = 1

	thread ai_add_todo $higgins1_ranger6 level.m3l1a_sequence "move_crouch"
	thread ai_add_todo $higgins1_ranger7 level.m3l1a_sequence "move_crouch"
	thread ai_add_todo $higgins1_ranger8 level.m3l1a_sequence "move_crouch"
	thread ai_add_todo $higgins1_ranger9 level.m3l1a_sequence "move_crouch"
	thread ai_add_todo $higgins1_ranger10 level.m3l1a_sequence "move_crouch"

	if !(isalive $left_engineer){
		thread ai_add_todo $higgins3_ranger1 level.m3l1a_sequence "move_crouch"
		thread ai_add_todo $higgins3_ranger2 level.m3l1a_sequence "move_crouch"
		thread ai_add_todo $higgins3_ranger3 level.m3l1a_sequence "move_crouch"
		thread ai_add_todo $higgins3_ranger5 level.m3l1a_sequence "move_crouch"
	}

	thread ai_add_todo $higgins3_ranger4 level.m3l1a_sequence "move_crouch"

	thread ai_add_todo $higgins5_ranger1 level.m3l1a_sequence "move_crouch"
	thread ai_add_todo $higgins5_ranger3 level.m3l1a_sequence "move_crouch"
	thread ai_add_todo $higgins5_ranger5 level.m3l1a_sequence "move_crouch"

	// add extra sequences
	thread ai_add_todo $higgins1_ranger7 level.m3l1a_sequence "sequence"  NIL ai_shoot_volley 1
	thread ai_add_todo $higgins1_ranger8 level.m3l1a_sequence "sequence"  NIL ai_shoot_volley 1
	thread ai_add_todo $higgins3_ranger4 level.m3l1a_sequence "sequence"  NIL ai_shoot_volley 1
	wait 3

	if !(isalive $left_engineer){
		thread ai_add_todo $higgins3_ranger1 level.m3l1a_sequence "move_crouch" $higgins3_ranger1_path_5_scripted1
		thread ai_add_todo $higgins3_ranger2 level.m3l1a_sequence "move_crouch" $higgins3_ranger2_path_5_scripted1
		thread ai_add_todo $higgins3_ranger3 level.m3l1a_sequence "move_crouch" $higgins3_ranger3_path_5_scripted1
		thread ai_add_todo $higgins3_ranger5 level.m3l1a_sequence "move_crouch" $higgins3_ranger5_path_5_scripted1
	}

	level.m3l1a_sequence_isupdating = 0
}end

// sequence 5, left branch - clearing second ramps
//=========================================================================
player_sequence_5_left:{
//=========================================================================
	//[200] Smithy - use nottriggerable and delete for extra safety...
	$player_sequence_5_left nottriggerable
	$player_sequence_5_left delete
	$player_sequence_5_right nottriggerable
	$player_sequence_5_right delete
	$player_sequence_5_center nottriggerable
	$player_sequence_5_center delete

	println "\n\n\n\nSequence 5 - Left Branch"

	// spawn the radio guy in the center, execute thread
	spawn "models/human/dday_29th_private_radio" targetname "center_radioman" gun "none" angle "90"
	$center_radioman waitthread ai_friendly_setup NIL 1
	$center_radioman.origin = (192.00 640.00 -456.00)
	$center_radioman thread sequence_5_center_radioman

	// spawn the left medic and patient, execute thread
	spawn "models/human/dday_29th_private_patient" targetname "left_patient" gun "none" angles "0 0 0"
	$left_patient waitthread ai_friendly_setup NIL 1
	$left_patient notsolid
	$left_patient.origin = ( -552.00 -240.00 -472.00)
	$left_patient anim patient01

	spawn "models/human/dday_ranger_medic" targetname "left_medic" gun "none" angles "0 90 0"
	$left_medic waitthread ai_friendly_setup NIL 1
	$left_medic notsolid
	$left_medic.origin = ( -600.00 -260.00 -472.00)
	$left_medic anim medic01
	thread sequence_5_medic $left_medic $left_patient "left"
	$left_medic solid

	// spawn left mr. freak out dude
	spawn "models/human/dday_29th_private" targetname "left_freaky" gun "none" angle "90"
	$left_freaky waitthread ai_friendly_setup NIL 1
	$left_freaky.origin = ( -768.00 400.00 -464.00)
	$left_freaky anim hedge_shake03
	$left_freaky thread sequence_5_freaky "left"

	while (level.m3l1a_sequence_isupdating == 1){
		println "SEQUENCE 5 LEFT: waiting to update"
		wait .2
	}

	level.m3l1a_sequence = 5
	level.m3l1a_sequence_branch = "left"
	level.m3l1a_sequence_isupdating = 1

	thread ai_add_todo $higgins1_ranger6 level.m3l1a_sequence "move_crouch"
	thread ai_add_todo $higgins1_ranger7 level.m3l1a_sequence "move_crouch"
	thread ai_add_todo $higgins1_ranger8 level.m3l1a_sequence "move_crouch"
	thread ai_add_todo $higgins1_ranger9 level.m3l1a_sequence "move_crouch"
	thread ai_add_todo $higgins1_ranger10 level.m3l1a_sequence "move_crouch"

	if !(isalive $left_engineer){
		thread ai_add_todo $higgins3_ranger1 level.m3l1a_sequence "move_crouch"
		thread ai_add_todo $higgins3_ranger2 level.m3l1a_sequence "move_crouch"
		thread ai_add_todo $higgins3_ranger3 level.m3l1a_sequence "move_crouch"
		thread ai_add_todo $higgins3_ranger5 level.m3l1a_sequence "move_crouch"
	}

	thread ai_add_todo $higgins3_ranger4 level.m3l1a_sequence "move_crouch"

	thread ai_add_todo $higgins5_ranger1 level.m3l1a_sequence "move_crouch"
	thread ai_add_todo $higgins5_ranger3 level.m3l1a_sequence "move_crouch"
	thread ai_add_todo $higgins5_ranger5 level.m3l1a_sequence "move_crouch"

	// add extra sequences
	thread ai_add_todo $higgins3_ranger4 level.m3l1a_sequence "sequence"  NIL ai_shoot_volley 1
	thread ai_add_todo $higgins1_ranger10 level.m3l1a_sequence "sequence"  NIL ai_shoot_volley 1
	wait 3

	if !(isalive $left_engineer){
		thread ai_add_todo $higgins3_ranger1 level.m3l1a_sequence "move_crouch" $higgins3_ranger1_path_5_scripted1
		thread ai_add_todo $higgins3_ranger2 level.m3l1a_sequence "move_crouch" $higgins3_ranger2_path_5_scripted1
		thread ai_add_todo $higgins3_ranger3 level.m3l1a_sequence "move_crouch" $higgins3_ranger3_path_5_scripted1
		thread ai_add_todo $higgins3_ranger5 level.m3l1a_sequence "move_crouch" $higgins3_ranger5_path_5_scripted1
	}

	thread ai_add_todo $higgins3_ranger3 level.m3l1a_sequence "sequence"  NIL ai_shoot_volley 1

	level.m3l1a_sequence_isupdating = 0
}end

// sequence 6, right branch - moving to center of mortar puzzle
//=========================================================================
player_sequence_6_right:{
//=========================================================================
	//[200] Smithy - use nottriggerable and delete for extra safety...
	$player_sequence_6_left nottriggerable
	$player_sequence_6_left delete
	$player_sequence_6_right nottriggerable
	$player_sequence_6_right delete

	println "\n\n\n\nSequence 6 - Right Branch"

	while (level.m3l1a_sequence_isupdating == 1){
		println "SEQUENCE 6 RIGHT: waiting to update"
		wait .2
	}

	level.m3l1a_sequence = 6
	level.m3l1a_sequence_branch = "right"
	level.m3l1a_sequence_isupdating = 1

	thread ai_add_todo $higgins1_ranger6 level.m3l1a_sequence "move_crouch"
	thread ai_add_todo $higgins1_ranger7 level.m3l1a_sequence "move_crouch"
	thread ai_add_todo $higgins1_ranger8 level.m3l1a_sequence "move_crouch"
	thread ai_add_todo $higgins1_ranger9 level.m3l1a_sequence "move_crouch"
	thread ai_add_todo $higgins1_ranger10 level.m3l1a_sequence "move_crouch" NIL "higgins1_ranger10_6_speak"

	thread ai_add_todo $higgins3_ranger1 level.m3l1a_sequence "move_crouch"
	thread ai_add_todo $higgins3_ranger2 level.m3l1a_sequence "move_crouch"
	thread ai_add_todo $higgins3_ranger3 level.m3l1a_sequence "move_crouch"
	thread ai_add_todo $higgins3_ranger4 level.m3l1a_sequence "move_crouch"
	thread ai_add_todo $higgins3_ranger5 level.m3l1a_sequence "move_crouch"

	thread ai_add_todo $higgins5_ranger1 level.m3l1a_sequence "move_crouch"
	thread ai_add_todo $higgins5_ranger3 level.m3l1a_sequence "move_crouch"
	thread ai_add_todo $higgins5_ranger5 level.m3l1a_sequence "move_crouch"
	wait 1

	// add extra sequences
	thread ai_add_todo $higgins5_ranger3 level.m3l1a_sequence "sequence"  NIL ai_shoot_volley 1
	thread ai_add_todo $higgins1_ranger9 level.m3l1a_sequence "sequence"  NIL ai_shoot_volley 1
	thread ai_add_todo $higgins3_ranger4 level.m3l1a_sequence "sequence"  NIL ai_shoot_volley 1

	// randomly decide to mortar some guys
	local.choice = randomint 3
	if (local.choice == 0){
		thread sequence_6_right_mortar
	}

	// spawn the guys for the shingle wave
	waitthread sequence_6_spawn_shingle

	// have several of the shingle guys run to their hedgehogs
	thread ai_add_todo $shingle_wave5 level.m3l1a_sequence "move_crouch"
	wait 1

	thread ai_add_todo $shingle_wave6 level.m3l1a_sequence "move_crouch"
	wait 2

	thread ai_add_todo $shingle_wave9 level.m3l1a_sequence "move_crouch"
	wait .5

	thread ai_add_todo $shingle_wave10 level.m3l1a_sequence "move_crouch"
	thread ai_add_todo $shingle_wave12 level.m3l1a_sequence "move_crouch"
	wait 1

	thread ai_add_todo $shingle_wave13 level.m3l1a_sequence "move_crouch"

	level.m3l1a_sequence_isupdating = 0
}end

// sequence 6, left branch - moving to center of mortar puzzle
//=========================================================================
player_sequence_6_left:{
//=========================================================================
	//[200] Smithy - use nottriggerable and delete for extra safety...
	$player_sequence_6_left nottriggerable
	$player_sequence_6_left delete
	$player_sequence_6_right nottriggerable
	$player_sequence_6_right delete

	println "\n\n\n\nSequence 6 - Left Branch"

	while (level.m3l1a_sequence_isupdating == 1){
		println "SEQUENCE 6 LEFT: waiting to update"
		wait .2
	}

	level.m3l1a_sequence = 6
	level.m3l1a_sequence_branch = "left"
	level.m3l1a_sequence_isupdating = 1

	thread ai_add_todo $higgins1_ranger6 level.m3l1a_sequence "move_crouch"
	thread ai_add_todo $higgins1_ranger7 level.m3l1a_sequence "move_crouch"
	thread ai_add_todo $higgins1_ranger8 level.m3l1a_sequence "move_crouch"
	thread ai_add_todo $higgins1_ranger9 level.m3l1a_sequence "move_crouch"
	thread ai_add_todo $higgins1_ranger10 level.m3l1a_sequence "move_crouch" NIL "higgins1_ranger10_6_speak"

	thread ai_add_todo $higgins3_ranger1 level.m3l1a_sequence "move_crouch"
	thread ai_add_todo $higgins3_ranger2 level.m3l1a_sequence "move_crouch"
	thread ai_add_todo $higgins3_ranger3 level.m3l1a_sequence "move_crouch"
	thread ai_add_todo $higgins3_ranger4 level.m3l1a_sequence "move_crouch"
	thread ai_add_todo $higgins3_ranger5 level.m3l1a_sequence "move_crouch"

	thread ai_add_todo $higgins5_ranger1 level.m3l1a_sequence "move_crouch"
	thread ai_add_todo $higgins5_ranger3 level.m3l1a_sequence "move_crouch"
	thread ai_add_todo $higgins5_ranger5 level.m3l1a_sequence "move_crouch"
	wait 1

	// add extra sequences
	thread ai_add_todo $higgins3_ranger5 level.m3l1a_sequence "sequence"  NIL ai_shoot_volley 1
	thread ai_add_todo $higgins3_ranger2 level.m3l1a_sequence "sequence"  NIL ai_shoot_volley 1
	thread ai_add_todo $higgins1_ranger7 level.m3l1a_sequence "sequence"  NIL ai_shoot_volley 1

	// randomly decide to mortar some guys
	local.choice = randomint 3
	if (local.choice == 0){
		thread sequence_6_left_mortar
	}

	// spawn the guys for the shingle wave
	waitthread sequence_6_spawn_shingle

	// have several of the shingle guys run to their hedgehogs
	thread ai_add_todo $shingle_wave5 level.m3l1a_sequence "move_crouch"
	wait 1

	thread ai_add_todo $shingle_wave6 level.m3l1a_sequence "move_crouch"
	wait 2

	thread ai_add_todo $shingle_wave9 level.m3l1a_sequence "move_crouch"
	wait .5

	thread ai_add_todo $shingle_wave10 level.m3l1a_sequence "move_crouch"
	thread ai_add_todo $shingle_wave12 level.m3l1a_sequence "move_crouch"
	wait 1

	thread ai_add_todo $shingle_wave13 level.m3l1a_sequence "move_crouch"

	level.m3l1a_sequence_isupdating = 0
}end

// sequence 7, center branch - clearing the mortar puzzle
//=========================================================================
player_sequence_7_center:{
//=========================================================================
	//[200] Smithy - use nottriggerable and delete for extra safety...
	$player_sequence_7_left nottriggerable
	$player_sequence_7_left delete
	$player_sequence_7_right nottriggerable
	$player_sequence_7_right delete
	$player_sequence_7_center nottriggerable
	$player_sequence_7_center delete

	println "\n\n\n\nSequence 7 - Center Branch"

	while (level.m3l1a_sequence_isupdating == 1){
		println "SEQUENCE 7 CENTER: waiting to update"
		wait .2
	}

	level.m3l1a_sequence = 7
	level.m3l1a_sequence_branch = "center"
	level.m3l1a_sequence_isupdating = 1

	thread ai_add_todo $higgins1_ranger6 level.m3l1a_sequence "move_mg_death" NIL NIL 4
	thread ai_add_todo $higgins1_ranger7 level.m3l1a_sequence "move_crouch"
	thread ai_add_todo $higgins1_ranger8 level.m3l1a_sequence "move_mg_death" NIL NIL 3
	thread ai_add_todo $higgins1_ranger9 level.m3l1a_sequence "move_crouch"
	thread ai_add_todo $higgins1_ranger10 level.m3l1a_sequence "move_crouch"

	thread ai_add_todo $higgins3_ranger1 level.m3l1a_sequence "move_mg_death" NIL NIL 4.5
	thread ai_add_todo $higgins3_ranger2 level.m3l1a_sequence "move_mg_death" NIL NIL 3.5
	thread ai_add_todo $higgins3_ranger3 level.m3l1a_sequence "move_crouch"
	thread ai_add_todo $higgins3_ranger4 level.m3l1a_sequence "move_crouch"
	thread ai_add_todo $higgins3_ranger5 level.m3l1a_sequence "move_crouch"

	thread ai_add_todo $higgins5_ranger1 level.m3l1a_sequence "move_crouch"
	thread ai_add_todo $higgins5_ranger3 level.m3l1a_sequence "move_crouch"
	thread ai_add_todo $higgins5_ranger5 level.m3l1a_sequence "move_crouch"

	// kill the radioman from sequence 5
	if (isalive $center_radioman){
			$center_radioman.isinsequence = 0
			$center_radioman takedamage
			$center_radioman thread ai_mg_death
	}

	// get rid of the medics and patients
	if (isalive $right_patient){
			$right_patient.isinsequence = 0
			$right_patient takedamage
			$right_patient remove
	}

	if (isalive $right_medic){
			$right_medic.isinsequence = 0
			$right_medic takedamage
			$right_medic remove
	}

	if (isalive $left_patient){
			$left_patient.isinsequence = 0
			$left_patient takedamage
			$left_patient remove
	}

	if (isalive $left_medic){
			$left_medic.isinsequence = 0
			$left_medic takedamage
			$left_medic remove
	}

	// get rid of the freaky guys
	if (isalive $right_freaky){
			$right_freaky.isinsequence = 0
			$right_freaky takedamage
			$right_freaky thread ai_mg_death
	}

	if (isalive $left_freaky){
			$left_freaky.isinsequence = 0
			$left_freaky takedamage
			$left_freaky thread ai_mg_death
	}

	// spawn the guys for the shingle wave
	thread sequence_7_spawn_shingle

	// make guys take pot-shots
	thread ai_add_todo $shingle_wave17 level.m3l1a_sequence "sequence"  NIL ai_shoot_volley 1
	wait .4

	thread ai_add_todo $shingle_wave4 level.m3l1a_sequence "sequence"  NIL ai_shoot_volley 1
	wait 2

	thread ai_add_todo $shingle_wave13 level.m3l1a_sequence "sequence"  NIL ai_shoot_volley 1
	wait .2

	thread ai_add_todo $shingle_wave6 level.m3l1a_sequence "sequence"  NIL ai_shoot_volley 1

	thread ai_add_todo $shingle_wave9 level.m3l1a_sequence "move_mg_death" $shingle_wave9_path_8 NIL 3
	wait 1

	thread ai_add_todo $shingle_wave6 level.m3l1a_sequence "move_mg_death" $shingle_wave6_path_8 NIL 2.5

	// do a check for when the player gets close to say something
	thread sequence_7_shingle_chatter

	level.m3l1a_sequence_isupdating = 0
}end

// sequence 7, right branch - clearing the mortar puzzle
//=========================================================================
player_sequence_7_right:{
//=========================================================================
	//[200] Smithy - use nottriggerable and delete for extra safety...
	$player_sequence_7_left nottriggerable
	$player_sequence_7_left delete
	$player_sequence_7_right nottriggerable
	$player_sequence_7_right delete
	$player_sequence_7_center nottriggerable
	$player_sequence_7_center delete

	println "\n\n\n\nSequence 7 - Right Branch"

	while (level.m3l1a_sequence_isupdating == 1){
		println "SEQUENCE 7 RIGHT: waiting to update"
		wait .2
	}

	level.m3l1a_sequence = 7
	level.m3l1a_sequence_branch = "right"
	level.m3l1a_sequence_isupdating = 1

	thread ai_add_todo $higgins1_ranger6 level.m3l1a_sequence "move_mg_death" NIL NIL 4
	thread ai_add_todo $higgins1_ranger7 level.m3l1a_sequence "move_crouch"
	thread ai_add_todo $higgins1_ranger8 level.m3l1a_sequence "move_mg_death" NIL NIL 3
	thread ai_add_todo $higgins1_ranger9 level.m3l1a_sequence "move_crouch"
	thread ai_add_todo $higgins1_ranger10 level.m3l1a_sequence "move_crouch"

	thread ai_add_todo $higgins3_ranger1 level.m3l1a_sequence "move_mg_death" NIL NIL 4.5
	thread ai_add_todo $higgins3_ranger2 level.m3l1a_sequence "move_mg_death" NIL NIL 3.5
	thread ai_add_todo $higgins3_ranger3 level.m3l1a_sequence "move_crouch"
	thread ai_add_todo $higgins3_ranger4 level.m3l1a_sequence "move_crouch"
	thread ai_add_todo $higgins3_ranger5 level.m3l1a_sequence "move_crouch"

	thread ai_add_todo $higgins5_ranger1 level.m3l1a_sequence "move_crouch"
	thread ai_add_todo $higgins5_ranger3 level.m3l1a_sequence "move_crouch"
	thread ai_add_todo $higgins5_ranger5 level.m3l1a_sequence "move_crouch"

	// kill the radioman from sequence 5
	if (isalive $center_radioman){
			$center_radioman.isinsequence = 0
			$center_radioman takedamage
			$center_radioman thread ai_mg_death
	}

	// get rid of the medics and patients
	if (isalive $right_patient){
			$right_patient.isinsequence = 0
			$right_patient takedamage
			$right_patient remove
	}

	if (isalive $right_medic){
			$right_medic.isinsequence = 0
			$right_medic takedamage
			$right_medic remove
	}

	if (isalive $left_patient){
			$left_patient.isinsequence = 0
			$left_patient takedamage
			$left_patient remove
	}

	if (isalive $left_medic){
			$left_medic.isinsequence = 0
			$left_medic takedamage
			$left_medic remove
	}

	// get rid of the freaky guys
	if (isalive $right_freaky){
			$right_freaky.isinsequence = 0
			$right_freaky takedamage
			$right_freaky thread ai_mg_death
	}

	if (isalive $left_freaky){
			$left_freaky.isinsequence = 0
			$left_freaky takedamage
			$left_freaky thread ai_mg_death
	}

	// spawn the guys for the shingle wave
	thread sequence_7_spawn_shingle

	// make guys take pot-shots
	thread ai_add_todo $shingle_wave17 level.m3l1a_sequence "sequence"  NIL ai_shoot_volley 1
	wait .4

	thread ai_add_todo $shingle_wave16 level.m3l1a_sequence "sequence"  NIL ai_shoot_volley 1
	wait 2

	thread ai_add_todo $shingle_wave18 level.m3l1a_sequence "sequence"  NIL ai_shoot_volley 1
	wait .3

	thread ai_add_todo $shingle_wave14 level.m3l1a_sequence "sequence"  NIL ai_shoot_volley 1
	wait 1

	thread ai_add_todo $shingle_wave14 level.m3l1a_sequence "move_mg_death" $shingle_wave14_path_8 NIL 3.75
	wait 1

	thread ai_add_todo $shingle_wave18 level.m3l1a_sequence "move_mg_death" $shingle_wave18_path_8 NIL 2.5

	// do a check for when the player gets close to say something
	thread sequence_7_shingle_chatter

	level.m3l1a_sequence_isupdating = 0
}end

// sequence 7, left branch - clearing mortar puzzle
//=========================================================================
player_sequence_7_left:{
//=========================================================================
	//[200] Smithy - use nottriggerable and delete for extra safety...
	$player_sequence_7_left nottriggerable
	$player_sequence_7_left delete
	$player_sequence_7_right nottriggerable
	$player_sequence_7_right delete
	$player_sequence_7_center nottriggerable
	$player_sequence_7_center delete

	println "\n\n\n\nSequence 7 - Left Branch"

	while (level.m3l1a_sequence_isupdating == 1){
		println "SEQUENCE 7 LEFT: waiting to update"
		wait .2
	}

	level.m3l1a_sequence = 7
	level.m3l1a_sequence_branch = "left"
	level.m3l1a_sequence_isupdating = 1

	thread ai_add_todo $higgins1_ranger6 level.m3l1a_sequence "move_mg_death" NIL NIL 4
	thread ai_add_todo $higgins1_ranger7 level.m3l1a_sequence "move_crouch"
	thread ai_add_todo $higgins1_ranger8 level.m3l1a_sequence "move_mg_death" NIL NIL 3
	thread ai_add_todo $higgins1_ranger9 level.m3l1a_sequence "move_crouch"
	thread ai_add_todo $higgins1_ranger10 level.m3l1a_sequence "move_crouch"

	thread ai_add_todo $higgins3_ranger1 level.m3l1a_sequence "move_mg_death" NIL NIL 4.5
	thread ai_add_todo $higgins3_ranger2 level.m3l1a_sequence "move_mg_death" NIL NIL 3.5
	thread ai_add_todo $higgins3_ranger3 level.m3l1a_sequence "move_crouch"
	thread ai_add_todo $higgins3_ranger4 level.m3l1a_sequence "move_crouch"
	thread ai_add_todo $higgins3_ranger5 level.m3l1a_sequence "move_crouch"

	thread ai_add_todo $higgins5_ranger1 level.m3l1a_sequence "move_crouch"
	thread ai_add_todo $higgins5_ranger3 level.m3l1a_sequence "move_crouch"
	thread ai_add_todo $higgins5_ranger5 level.m3l1a_sequence "move_crouch"

	// kill the radioman from sequence 5
	if (isalive $center_radioman){
			$center_radioman.isinsequence = 0
			$center_radioman takedamage
			$center_radioman thread ai_mg_death
	}

	// get rid of the medics and patients
	if (isalive $right_patient){
			$right_patient.isinsequence = 0
			$right_patient takedamage
			$right_patient remove
	}

	if (isalive $right_medic){
			$right_medic.isinsequence = 0
			$right_medic takedamage
			$right_medic remove
	}

	if (isalive $left_patient){
			$left_patient.isinsequence = 0
			$left_patient takedamage
			$left_patient remove
	}

	if (isalive $left_medic){
			$left_medic.isinsequence = 0
			$left_medic takedamage
			$left_medic remove
	}

	// get rid of the freaky guys
	if (isalive $right_freaky){
			$right_freaky.isinsequence = 0
			$right_freaky takedamage
			$right_freaky thread ai_mg_death
	}

	if (isalive $left_freaky){
			$left_freaky.isinsequence = 0
			$left_freaky takedamage
			$left_freaky thread ai_mg_death
	}

	// spawn the guys for the shingle wave
	thread sequence_7_spawn_shingle

	// make guys take pot-shots
	// make guys take pot-shots
	thread ai_add_todo $shingle_wave1 level.m3l1a_sequence "sequence"  NIL ai_shoot_volley 1
	wait .4

	thread ai_add_todo $shingle_wave4 level.m3l1a_sequence "sequence"  NIL ai_shoot_volley 1
	wait 2

	thread ai_add_todo $shingle_wave17 level.m3l1a_sequence "sequence"  NIL ai_shoot_volley 1
	wait .3

	thread ai_add_todo $shingle_wave10 level.m3l1a_sequence "sequence"  NIL ai_shoot_volley 1

	thread ai_add_todo $shingle_wave3 level.m3l1a_sequence "move_mg_death" $shingle_wave3_path_8 NIL 3
	wait 1

	thread ai_add_todo $shingle_wave8 level.m3l1a_sequence "move_mg_death" $shingle_wave8_path_8 NIL 2.5

	// do a check for when the player gets close to say something
	thread sequence_7_shingle_chatter

	level.m3l1a_sequence_isupdating = 0
}end

// sequence 8, center branch - mass exedous to shingle
//=========================================================================
player_sequence_8_center:{
//=========================================================================
	//[200] Smithy - use nottriggerable and delete for extra safety...
	$player_sequence_8_left nottriggerable
	$player_sequence_8_left delete
	$player_sequence_8_right nottriggerable
	$player_sequence_8_right delete
	$player_sequence_8_center nottriggerable
	$player_sequence_8_center delete

	println "\n\n\n\nSequence 8 - Center Branch"

	while (level.m3l1a_sequence_isupdating == 1){
		println "SEQUENCE 8 CENTER: waiting to update"
		wait .2
	}

	level.m3l1a_sequence = 8
	level.m3l1a_sequence_branch = "center"
	level.m3l1a_sequence_isupdating = 1

	thread ai_add_todo $higgins5_ranger1 level.m3l1a_sequence "move_mortar_death" NIL NIL 8
	thread ai_add_todo $higgins5_ranger3 level.m3l1a_sequence "move_mg_death" NIL NIL 5.75
	thread ai_add_todo $higgins5_ranger5 level.m3l1a_sequence "move_mg_death" NIL NIL 8.75
	thread ai_add_todo $higgins1_ranger7 level.m3l1a_sequence "move_mg_death" NIL NIL 6.25
	thread ai_add_todo $higgins3_ranger4 level.m3l1a_sequence "move_mg_death" NIL NIL 7
	wait 1

	thread ai_add_todo $higgins3_ranger3 level.m3l1a_sequence "move_mg_death" NIL NIL 6.75
	thread ai_add_todo $higgins3_ranger5 level.m3l1a_sequence "move_mortar_death" NIL NIL 6
	thread ai_add_todo $higgins1_ranger9 level.m3l1a_sequence "move_mg_death" NIL NIL 6.5
	thread ai_add_todo $higgins1_ranger10 level.m3l1a_sequence "move_mortar_death" NIL NIL 7.25
	wait 1

	thread ai_add_todo $shingle_wave1 level.m3l1a_sequence "move_mortar_death" NIL NIL 7.25
	thread ai_add_todo $shingle_wave2 level.m3l1a_sequence "move_mg_death" NIL NIL 6.75
	thread ai_add_todo $shingle_wave3 level.m3l1a_sequence "move_mortar_death" NIL NIL 6
	thread ai_add_todo $shingle_wave4 level.m3l1a_sequence "move_prone"
	thread ai_add_todo $shingle_wave5 level.m3l1a_sequence "move_prone"
	thread ai_add_todo $shingle_wave6 level.m3l1a_sequence "move_prone"
	thread ai_add_todo $shingle_wave9 level.m3l1a_sequence "move_prone"
	thread ai_add_todo $shingle_wave10 level.m3l1a_sequence "move_prone"
	thread ai_add_todo $shingle_wave11 level.m3l1a_sequence "move_mortar_death" NIL NIL 8
	wait 1

	thread ai_add_todo $shingle_wave12 level.m3l1a_sequence "move_mg_death" NIL NIL 6.25
	thread ai_add_todo $shingle_wave13 level.m3l1a_sequence "move_prone"
	thread ai_add_todo $shingle_wave14 level.m3l1a_sequence "move_mg_death" NIL NIL 7.25
	wait 1.5

	thread ai_add_todo $shingle_wave7 level.m3l1a_sequence "move_prone"
	thread ai_add_todo $shingle_wave8 level.m3l1a_sequence "move_mg_death" NIL NIL 3.5
	thread ai_add_todo $shingle_wave15 level.m3l1a_sequence "move_mg_death" NIL NIL 4
	thread ai_add_todo $shingle_wave16 level.m3l1a_sequence "move_prone"
	thread ai_add_todo $shingle_wave17 level.m3l1a_sequence "move_prone"
	thread ai_add_todo $shingle_wave18 level.m3l1a_sequence "move_prone"

	level.m3l1a_sequence_isupdating = 0
}end

// sequence 8, right branch - mass exedous to shingle
//=========================================================================
player_sequence_8_right:{
//=========================================================================
	//[200] Smithy - use nottriggerable and delete for extra safety...
	$player_sequence_8_left nottriggerable
	$player_sequence_8_left delete
	$player_sequence_8_right nottriggerable
	$player_sequence_8_right delete
	$player_sequence_8_center nottriggerable
	$player_sequence_8_center delete

	println "\n\n\n\nSequence 8 - Right Branch"

	while (level.m3l1a_sequence_isupdating == 1){
		println "SEQUENCE 8 RIGHT: waiting to update"
		wait .2
	}

	level.m3l1a_sequence = 8
	level.m3l1a_sequence_branch = "right"
	level.m3l1a_sequence_isupdating = 1

	thread ai_add_todo $higgins5_ranger1 level.m3l1a_sequence "move_mg_death" NIL NIL 6.25
	thread ai_add_todo $higgins5_ranger3 level.m3l1a_sequence "move_mg_death" NIL NIL 5.75
	thread ai_add_todo $higgins5_ranger5 level.m3l1a_sequence "move_mortar_death" NIL NIL 7
	thread ai_add_todo $higgins1_ranger7 level.m3l1a_sequence "move_mg_death" NIL NIL 6
	thread ai_add_todo $higgins3_ranger4 level.m3l1a_sequence "move_mg_death" NIL NIL 7
	wait 1

	thread ai_add_todo $higgins3_ranger3 level.m3l1a_sequence "move_mg_death" NIL NIL 7.25
	thread ai_add_todo $higgins3_ranger5 level.m3l1a_sequence "move_mortar_death" NIL NIL 6
	thread ai_add_todo $higgins1_ranger9 level.m3l1a_sequence "move_mg_death" NIL NIL 6.5
	thread ai_add_todo $higgins1_ranger10 level.m3l1a_sequence "move_mg_death" NIL NIL 6
	wait 1

	thread ai_add_todo $shingle_wave1 level.m3l1a_sequence "move_prone"
	thread ai_add_todo $shingle_wave2 level.m3l1a_sequence "move_prone"
	thread ai_add_todo $shingle_wave3 level.m3l1a_sequence "move_prone"
	thread ai_add_todo $shingle_wave4 level.m3l1a_sequence "move_mortar_death" NIL NIL 6
	thread ai_add_todo $shingle_wave5 level.m3l1a_sequence "move_mg_death" NIL NIL 8
	thread ai_add_todo $shingle_wave6 level.m3l1a_sequence "move_mortar_death" NIL NIL 7.5
	thread ai_add_todo $shingle_wave9 level.m3l1a_sequence "move_prone"
	thread ai_add_todo $shingle_wave10 level.m3l1a_sequence "move_mg_death" NIL NIL 7.25
	thread ai_add_todo $shingle_wave11 level.m3l1a_sequence "move_prone"
	wait 1

	thread ai_add_todo $shingle_wave12 level.m3l1a_sequence "move_mg_death" NIL NIL 6
	thread ai_add_todo $shingle_wave13 level.m3l1a_sequence "move_prone"
	thread ai_add_todo $shingle_wave14 level.m3l1a_sequence "move_prone"
	wait 1.5

	thread ai_add_todo $shingle_wave7 level.m3l1a_sequence "move_mg_death" NIL NIL 5
	thread ai_add_todo $shingle_wave8 level.m3l1a_sequence "move_prone"
	thread ai_add_todo $shingle_wave15 level.m3l1a_sequence "move_mg_death" NIL NIL 3.5
	thread ai_add_todo $shingle_wave15 level.m3l1a_sequence "move_prone"
	thread ai_add_todo $shingle_wave17 level.m3l1a_sequence "move_mg_death" NIL NIL 4.75
	thread ai_add_todo $shingle_wave18 level.m3l1a_sequence "move_prone"

	level.m3l1a_sequence_isupdating = 0
}end

// sequence 8, left branch - mass exedous to shingle
//=========================================================================
player_sequence_8_left:{
//=========================================================================
	//[200] Smithy - use nottriggerable and delete for extra safety...
	$player_sequence_8_left nottriggerable
	$player_sequence_8_left delete
	$player_sequence_8_right nottriggerable
	$player_sequence_8_right delete
	$player_sequence_8_center nottriggerable
	$player_sequence_8_center delete

	println "\n\n\n\nSequence 8 - Left Branch"

	while (level.m3l1a_sequence_isupdating == 1){
		println "SEQUENCE 8 LEFT: waiting to update"
		wait .2
	}

	level.m3l1a_sequence = 8
	level.m3l1a_sequence_branch = "left"
	level.m3l1a_sequence_isupdating = 1

	thread ai_add_todo $higgins5_ranger1 level.m3l1a_sequence "move_mortar_death" NIL NIL 6
	thread ai_add_todo $higgins5_ranger3 level.m3l1a_sequence "move_mortar_death" NIL NIL 5
	thread ai_add_todo $higgins5_ranger5 level.m3l1a_sequence "move_mg_death" NIL NIL 6.5
	thread ai_add_todo $higgins1_ranger7 level.m3l1a_sequence "move_mg_death" NIL NIL 6
	thread ai_add_todo $higgins3_ranger4 level.m3l1a_sequence "move_mortar_death" NIL NIL 7.5
	wait 1

	thread ai_add_todo $higgins3_ranger3 level.m3l1a_sequence "move_mg_death" NIL NIL 6.75
	thread ai_add_todo $higgins3_ranger5 level.m3l1a_sequence "move_mg_death" NIL NIL 5
	thread ai_add_todo $higgins1_ranger9 level.m3l1a_sequence "move_mg_death" NIL NIL 6.5
	thread ai_add_todo $higgins1_ranger10 level.m3l1a_sequence "move_mg_death" NIL NIL 6.25
	wait 1

	thread ai_add_todo $shingle_wave1 level.m3l1a_sequence "move_prone"
	thread ai_add_todo $shingle_wave2 level.m3l1a_sequence "move_prone"
	thread ai_add_todo $shingle_wave3 level.m3l1a_sequence "move_prone"
	thread ai_add_todo $shingle_wave4 level.m3l1a_sequence "move_mg_death" NIL NIL 5
	thread ai_add_todo $shingle_wave5 level.m3l1a_sequence "move_prone"
	thread ai_add_todo $shingle_wave6 level.m3l1a_sequence "move_mg_death" NIL NIL 7
	thread ai_add_todo $shingle_wave9 level.m3l1a_sequence "move_prone"
	thread ai_add_todo $shingle_wave10 level.m3l1a_sequence "move_mortar_death" NIL NIL 6
	thread ai_add_todo $shingle_wave11 level.m3l1a_sequence "move_mg_death" NIL NIL 5.75
	wait 1

	thread ai_add_todo $shingle_wave12 level.m3l1a_sequence "move_prone"
	thread ai_add_todo $shingle_wave13 level.m3l1a_sequence "move_mg_death" NIL NIL 6.5
	thread ai_add_todo $shingle_wave14 level.m3l1a_sequence "move_prone"
	wait 1.5

	thread ai_add_todo $shingle_wave7 level.m3l1a_sequence "move_prone"
	thread ai_add_todo $shingle_wave8 level.m3l1a_sequence "move_prone"
	thread ai_add_todo $shingle_wave15 level.m3l1a_sequence "move_prone"
	thread ai_add_todo $shingle_wave16 level.m3l1a_sequence "move_prone"
	thread ai_add_todo $shingle_wave17 level.m3l1a_sequence "move_mg_death" NIL NIL 4.75
	thread ai_add_todo $shingle_wave18 level.m3l1a_sequence "move_mortar_death" NIL NIL 4

	level.m3l1a_sequence_isupdating = 0
}end


//*************************************************************************************
//*************************************************************************************
//
// AI THREADS
// naming convenction for AI is
//
//*************************************************************************************
//*************************************************************************************

//  mg42_middle1 gunner death
//=========================================================================
mg42_middle1_death:{
//=========================================================================
	self waittill death
	wait 5

	// nuke the gunner, and set the spawn value to restart the gunners
	$mg42_middle1_gunner remove
	$mg42_middle1.spawn = 1

	trigger $mg42_middle1_waittrigger
}end

//  mg42_middle2 gunner death
//=========================================================================
mg42_middle2_death:{
//=========================================================================
	self waittill death
	wait 5

	// nuke the gunner, and set the spawn value to restart the gunners
	$mg42_middle2_gunner remove
	$mg42_middle2.spawn = 1

	trigger $mg42_middle2_waittrigger
}end

//  Higgins boat mortar crouch
//=========================================================================
higgins1_crouch:{
//=========================================================================
	$higgins1_ranger1 anim higgins_ride_crouch01
	$higgins1_ranger5 anim higgins_ride_crouch05
	wait .2

	$higgins1_ranger2 anim higgins_ride_crouch02
	$higgins1_ranger6 anim higgins_ride_crouch04
	wait .1

	$higgins1_ranger3 anim higgins_ride_crouch03
	$higgins1_ranger7 anim higgins_ride_crouch02
	wait .15

	$higgins1_ranger4 anim higgins_ride_crouch04
	$higgins1_ranger8 anim higgins_ride_crouch03
	wait .2

	$higgins1_ranger9 anim higgins_ride_crouch05
	$higgins1_ranger10 anim higgins_ride_crouch03
}end

//  Higgins boat mortar look
//=========================================================================
higgins1_look:{
//=========================================================================
	$higgins1_ranger1 anim higgins_ride_look01
	$higgins1_ranger4 anim higgins_ride_look04
	wait .2

	$higgins1_ranger2 anim higgins_ride_look02
	$higgins1_ranger5 anim higgins_ride_look05
	wait .15

	$higgins1_ranger3 anim higgins_ride_look03
	$higgins1_ranger6 anim higgins_ride_look04
	wait .1

	$higgins1_ranger7 anim higgins_ride_look02
	$higgins1_ranger8 anim higgins_ride_look03
	wait .2

	$higgins1_ranger9 anim higgins_ride_look05
	$higgins1_ranger10 anim higgins_ride_look03
	wait 1.1

	$higgins1_ranger1 anim higgins_ride_crouch01
	$higgins1_ranger5 anim higgins_ride_crouch05
	wait .2

	$higgins1_ranger2 anim higgins_ride_crouch02
	$higgins1_ranger6 anim higgins_ride_crouch04
	wait .15

	$higgins1_ranger3 anim higgins_ride_crouch03
	$higgins1_ranger7 anim higgins_ride_crouch02
	wait .1

	$higgins1_ranger4 anim higgins_ride_crouch04
	$higgins1_ranger8 anim higgins_ride_crouch03
	wait .2

	$higgins1_ranger9 anim higgins_ride_crouch05
	$higgins1_ranger10 anim higgins_ride_crouch03
}end

//  Higgins boat mortar flinch
//=========================================================================
higgins1_flinch:{
//=========================================================================
	$higgins1_ranger1 upperanim higgins_ride_flinch01
	$higgins1_ranger4 upperanim higgins_ride_flinch04
	wait .2

	$higgins1_ranger2 upperanim higgins_ride_flinch02
	$higgins1_ranger5 upperanim higgins_ride_flinch05
	wait .15

	$higgins1_ranger3 upperanim higgins_ride_flinch03
	$higgins1_ranger6 upperanim higgins_ride_flinch04
	wait .1

	$higgins1_ranger7 upperanim higgins_ride_flinch02
	$higgins1_ranger8 upperanim higgins_ride_flinch03
	wait .2

	$higgins1_ranger9 upperanim higgins_ride_flinch05
	$higgins1_ranger10 upperanim higgins_ride_flinch03
}end

//  Higgins boat ready
//=========================================================================
higgins1_ready:{
//=========================================================================
	$higgins1_ranger1 exec global/stand.scr
	$higgins1_ranger5 exec global/stand.scr
	wait .2

	$higgins1_ranger2 exec global/stand.scr
	$higgins1_ranger6 exec global/stand.scr
	wait .15

	$higgins1_ranger3 exec global/stand.scr
	$higgins1_ranger7 exec global/stand.scr
	wait .1

	$higgins1_ranger4 exec global/stand.scr
	$higgins1_ranger8 exec global/stand.scr
	wait .2

	$higgins1_ranger9 exec global/stand.scr
	$higgins1_ranger10 exec global/stand.scr
}end

// ai fodder guy main thread
//=========================================================================
ai_fodder:{
//=========================================================================
	//println "AI FODDER: starting thread for: " self

	// grab the guys values and delete him
	local.spawn_targetname = self.targetname
	//println "AI FODDER: spawn_targetname: " local.spawn_targetname
	local.spawn_model = self.model
	//println "AI FODDER: spawn_model: " local.spawn_model
	local.spawn_weapon = self.weapon
	//println "AI FODDER: spawn_weapon: " local.spawn_weapon
	local.spawn_origin = self.origin
	//println "AI FODDER: spawn_origin: " local.spawn_origin
	local.spawn_angle = 90
	//println "AI FODDER: spawn_angle: " local.spawn_angle
	local.spawn_number = self.number

	self remove

	// wait to start
	$ai_fodder_waittrigger waittill trigger

	//println "AI FODDER: " local.spawn_targetname " fodder thread has begun"

	ai_fodder_loop:
	//println "FODDER: local.fodder_check: " (getcvar(g_ddayfodderguys))

	switch (local.spawn_number)
	{
		case 1:
			if (getcvar(g_ddayfodderguys) != "2"){
				//println "FODDER: skipping guy 1"
				goto ai_fodder_skip
			}
			break

		case 2:
			if (getcvar(g_ddayfodderguys) == "0"){
				//println "FODDER: skipping guy 2"
                goto ai_fodder_skip
			}
			break

		case 3:
			if (getcvar(g_ddayfodderguys) != "2"){
				//println "FODDER: skipping guy 3"
                goto ai_fodder_skip
			}
			break

		case 4:
			if (getcvar(g_ddayfodderguys) != "2"){
				//println "FODDER: skipping guy 4"
                goto ai_fodder_skip
			}
			break

		case 5:
			if (getcvar(g_ddayfodderguys) == "0"){
				//println "FODDER: skipping guy 5"
                goto ai_fodder_skip
			}
			break

		case 6:
			if (getcvar(g_ddayfodderguys) != "2"){
				//println "FODDER: skipping guy 6"
                goto ai_fodder_skip
			}
			break

		case 7:
			if (getcvar(g_ddayfodderguys) != "2"){
				//println "FODDER: skipping guy 7"
                goto ai_fodder_skip
			}
			break

		case 8:
			if (getcvar(g_ddayfodderguys) == "0"){
				//println "FODDER: skipping guy 8"
                goto ai_fodder_skip
			}
			break

		case 9:
			if (getcvar(g_ddayfodderguys) != "2"){
				//println "FODDER: skipping guy 9"
                goto ai_fodder_skip
			}
			break
	}


	if(level.gametype == 0){	//chrissstrahl - sp
		while ($player.viewangles[1] < 30 && $player.viewangles[1] > 150){
			//println "AI FODDER: player's current viewangles[1]: " $player.viewangles[1] " :waiting for him to look away!!!"
			wait .5
		}
	}else{
	}

	// spawn the guy in and send him on his merry way
	spawn local.spawn_model targetname local.spawn_targetname gun local.spawn_weapon angle local.spawn_angle

	local.dead_dork = $(local.spawn_targetname)
	local.dead_dork exec global/disable_ai.scr
	local.dead_dork.origin = local.spawn_origin
	local.dead_dork exec global/setgroundtype.scr "water"
	local.dead_dork dontdropweapons

	//println "AI FODDER: spawned guy: " local.dead_dork " : at location: " local.dead_dork.origin

	// pick the path he's to walk on
	local.choice = (randomint 2 + 1)
	local.dead_dork_path = $(local.dead_dork.targetname + "_path")[local.choice]
	local.dead_dork_pathext = $(local.dead_dork.targetname + "_path_ext")[local.dead_dork_path.ext_index]

	//println "AI FODDER: " local.dead_dork " : picking path: " local.dead_dork_path " : index: " local.choice

	// send him on his merry way awaiting to merrily get ferschnukered
	//local.dead_dork runto local.dead_dork_path

	local.dead_dork thread ai_fodder_takepath local.dead_dork_path local.dead_dork_pathext

	//println "AI FODDER: " local.dead_dork " is running his path"

// check to see if it's time to kill the guy, or if he died already
//=========================================================================
	ai_fodder_loopcheck:
//=========================================================================

	if !(isalive local.dead_dork){
		//println "AI FODDER: " local.dead_dork " has been killed"
		goto ai_fodder_dead
	}

	//println "AI FODDER: " local.dead_dork " is alive still"

	//chrissstrahl - coop mod
	local.player = exec coop_mod/replace.scr::player_closestTo local.dead_dork
	while(local.player == NULL){
		wait 2
		local.player = exec coop_mod/replace.scr::player_closestTo local.dead_dork //[200] Smithy - fixes this loop getting caught
	}

	//[205] chrissstrahl - fix NULL
	if (local.dead_dork && local.dead_dork.origin[1] < (local.player.origin[1] + (randomint 256 + 256)) && local.dead_dork.origin[1] < 2560){	//chrissstrahl - coop
		//println "AI FODDER: " local.dead_dork " is not in the right place to die yet: " local.dead_dork.origin[1] " : player: " $player.origin[1]
		wait 1
		goto ai_fodder_loopcheck
	}

	//println "AI FODDER: " local.dead_dork " time to die"

	//chrissstrahl - coop mod
	local.player = exec coop_mod/replace.scr::player_closestTo local.dead_dork
	while(local.player == NULL){
		wait 2
		local.player = exec coop_mod/replace.scr::player_closestTo local.dead_dork //[200] Smithy - fixes this loop getting caught
	}

	// neutralize the fodder    -  but wait, I don't want neutral...I want dead!!!
	//[205] chrissstrahl - fix NULL
	if(local.dead_dork){
		if (vector_length(local.dead_dork.origin - local.player.origin) > 768 && randomint 3 == 0){	//chrissstrahl - coop
			//println "AI FODDER: " local.dead_dork " will die by mortar blast....< -1024 means water: " local.dead_dork.origin[1]
			if (local.dead_dork.origin[1] > -1024){
				local.type = NIL
			}else{
				local.type = "water"
			}
			local.dead_dork waitthread ai_mortar_death local.type
		}
		else{
			//println "AI FODDER: " local.dead_dork " will die by mgs"
			local.dead_dork waitthread ai_mg_death
		}
	}


// the dead fodder is dead, hurry.....no go on.......do it again....
//=========================================================================
	ai_fodder_dead:
//=========================================================================

	//println "AI FODDER: " local.dead_dork " has died, clearing targetname"
	if(local.dead_dork != NULL){	//chrissstrahl - stop console spam
		local.dead_dork.targetname = ""
	}

//=========================================================================
	ai_fodder_skip:
//=========================================================================

	if (level.m3l1a_sequence < 11){
		//println "AI FODDER: " local.spawn_targetname " player is still in respawn area, loop"
		wait (randomint 4 + 4)
		goto ai_fodder_loop
	}
//=========================================================================
	ai_fodder_end:
//=========================================================================
}end

//  ai fodder guy takepath
//=========================================================================
	ai_fodder_takepath local.path local.path_ext:{
//=========================================================================
	self runto local.path
	self waittill movedone

	self runto local.path_ext
}end


//*************************************************************************************
//*************************************************************************************
//
// FUNCTION THREADS
//
//*************************************************************************************
//*************************************************************************************

//***************************************************
//***************************************************
//***			AI RELATED FUNCTIONS
//***************************************************
//***************************************************

// AI setup routine
// <$targetname> ai_friendly_setup [groundtype] [startcrouched]
//=========================================================================
ai_friendly_setup local.groundtype local.crouch:{
//=========================================================================
	// set all values that the AI is supposed to have when they start
	self exec global/disable_ai.scr

	// tell him not to drop his weapons
	self dontdropweapons

	// set all his variables
	self.index = 0
	self.isbusy = 0
	self.isinsequence = 0
	self.script_damage = 0
	self.isupdating = 0
	self.avoidplayer = 0

	// set his emotion
	local.choice = randomint 4

	if (local.choice == 0){
		//println "EMOTION: " self " will have a determined emotion"
		self.emotion = "emotion_determined"
	}
	else{
		self.emotion = "emotion_fear"
	}

	// set a death thread to detect if the player has damaged the AI
	//b2self thread ai_friendly_pain
	self thread ai_friendly_death

	// execute an execute todo thread for this guy
	self thread ai_execute_todo

	// set the groundtype
	if (local.groundtype != NIL){
		self exec global/setgroundtype.scr local.groundtype
	}
	else{
		self exec global/setgroundtype.scr "beach"
	}

	// does he start crouched
	if (local.crouch == 1){
		self exec global/crouch.scr
	}
	else if (local.crouch == 2){
		//TEMP TEMP TEMP
		self exec global/prone.scr
		//self exec global/crouch.scr
	}
}end

//  friendly AI pain thread, used to detect if player has hurt the AI
//  <$targetname> ai_friendly_pain
//=========================================================================
ai_friendly_pain:{
//=========================================================================
	self waittill pain

	if (self.script_damage == 1 || level.script_damage == 1){
		goto ai_friendly_death
	}

	iprintlnbold_noloc("DEV: Playa hurt friendly, nazi spy !!!")//chrissstrahl - see if that even works in coop
	println "\n\nYOU HURT A FRIENDLY!!!!  YOU LOSE MISSION!!!"
	//missionfailed

	goto ai_friendly_death
}end

//  friendly AI death threads, used to detect if player has hurt the AI
//  <$targetname> ai_friendly_death
//=========================================================================
ai_friendly_death:{
//=========================================================================
	self waittill death

	//println "AI DEATH: " self " has just died!!  Boo Hoo!!"

	// make sure he wasn't in the process of updating before proceeding
	while (self.isupdating == 1){
	//	println "AI DEATH: " self " is updating....holding"
		wait .5
	}

	// clear his stack
	self.isupdating = 1

	self.nextsequence = NIL
	self.nextaction = NIL
	self.nextmove = NIL
	self.nextthread = NIL
	self.nextthread_parm1 = NIL
	self.nextthread_parm2 = NIL
	self.nextthread_parm3 = NIL
	self.nextthread_parm4 = NIL

	self.isupdating = 0

	// reset that he's no longer busy or in a sequence
	self.isbusy = 0
	self.isinsequence = 0
	self.index = 0

	// trigger him one last time to end his execute todo thread
	trigger self

	// reset his targetname so if it's a re-spawning character there are no confilcts
	self.targetname = ""
}end

// Add something to an AI's todo stack
// <$targetname> ai_add_todo
//=========================================================================
ai_add_todo local.ai local.passsequence local.passaction local.passmove local.passthread local.passthread_parm1 local.passthread_parm2 local.passthread_parm3 local.passthread_parm4:{
//=========================================================================
	// if he's dead, exit
	if !(isalive local.ai){
	//	println "AI ADD TODO: " local.ai " is dead, aborting add_todo task"
		goto ai_add_todo_end
	}

	// if he's already in the process of updating his stack, hold till he's done
	while (local.ai.isupdating == 1){
	//	println "AI ADD TODO: " local.ai " is currently updating, waiting to add to stack"
		wait .5
	}

	local.ai.isupdating = 1

	//println "AI ADD TODO: " local.ai " updating todo list with new task"

	// up the index
	local.ai.index ++
	//println "AI ADD TODO: " local.ai " adding to his index: " self.index

	// pass the parameters
	local.ai.nextsequence[local.ai.index] = local.passsequence
	//println "AI ADD TODO: " local.ai " passing sequence: " local.passsequence
	local.ai.nextaction[local.ai.index] = local.passaction
	//println "AI ADD TODO: " local.ai " passing action: " local.passaction
	local.ai.nextmove[local.ai.index] = local.passmove
	//println "AI ADD TODO: " local.ai " passing move: " local.passmove
	local.ai.nextthread[local.ai.index] = local.passthread
	//println "AI ADD TODO: " local.ai " passing thread: " local.passthread
	local.ai.nextthread_parm1[local.ai.index] = local.passthread_parm1
	//println "AI ADD TODO: " local.ai " passing thread parm1: " local.passthread_parm1
	local.ai.nextthread_parm2[local.ai.index] = local.passthread_parm2
	//println "AI ADD TODO: " local.ai " passing thread parm2: " local.passthread_parm2
	local.ai.nextthread_parm3[local.ai.index] = local.passthread_parm3
	//println "AI ADD TODO: " local.ai " passing thread parm3: " local.passthread_parm3
	local.ai.nextthread_parm4[local.ai.index] = local.passthread_parm4
	//println "AI ADD TODO: " local.ai " passing thread parm4: " local.passthread_parm4

	trigger local.ai

	local.ai.isupdating = 0
//=========================================================================
	ai_add_todo_end:
//=========================================================================
}end

// exectue the AI's todo stack
// <$targetname> ai_execute_todo
//=========================================================================
ai_execute_todo:{
//=========================================================================

//=========================================================================
	ai_execute_todo_reset:
//=========================================================================
	self waittill trigger
	//println "AI EXE TODO: " self " has been activated to process stack!"

//=========================================================================
	ai_execute_todo_loop:
//=========================================================================

	// if he's dead, exit
	if (!(isalive self) || self.targetname == ""){
	//	println "AI EXE TODO: " self " is dead, aborting todo execute thread"
		end
	}

	while (self.isbusy != 0 || self.isinsequence != 0){
	//	println "AI EXE TODO: " self " is busy, waiting to process stack"
		wait 1
	}
	waitframe

	// check to see if the AI needs to take a path
	if (self.nextaction[1] == "move"){
	//	println "AI EXE TODO: " self " move command requested"
		self.isbusy = 1
		// if a path was set, use it, else default
		if (self.nextmove[1] == NIL){
			local.path = $(self.targetname + "_path_" + self.nextsequence[1])
			if (self.nextthread_parm3[1] != NIL){
				local.aimat = self.nextthread_parm3[1]
			}
			else{
				local.aimat = $mg42_middle1
			}
		}else{
			local.path = self.nextmove[1]
			if (self.nextthread_parm3[1] != NIL){
                		local.aimat = self.nextthread_parm3[1]
			}else{
				local.aimat = $mg42_middle1
			}
		}

	//	println "AI EXE TODO: " self " trying to take path: " local.path
		self waitthread takepath local.path local.aimat
	//	println "AI EXE TODO: " self " finished moving on path: " local.path
		self.isbusy = 0
	}
	else if (self.nextaction[1] == "move_crouch"){
		//	println "AI EXE TODO: " self " move the go crouch comman selected"
		self.isbusy = 1
		// if a path was set, use it, else default
		if (self.nextmove[1] == NIL){
			local.path = $(self.targetname + "_path_" + self.nextsequence[1])
			if (self.nextthread_parm3[1] != NIL){
				local.aimat = self.nextthread_parm3[1]
			}
			else{
				local.aimat = $mg42_middle1
			}
		}else{
			local.path = self.nextmove[1]
			if (self.nextthread_parm3[1] != NIL){
				local.aimat = self.nextthread_parm3[1]
			}else{
				local.aimat = $mg42_middle1
			}
		}

		//	println "AI EXE TODO: " self " trying to take path and then crouch at: " local.path
		self waitthread takepath local.path local.aimat

		// make him crouch
		self exec global/crouch.scr
		//	println "AI EXE TODO: " self " finished moving on path and has crouched: " local.path
		self.isbusy = 0
	}
	else if (self.nextaction[1] == "move_prone"){
		//	println "AI EXE TODO: " self " move then go prone command  selected"
		self.isbusy = 1
		// if a path was set, use it, else default
		if (self.nextmove[1] == NIL)
			{
			local.path = $(self.targetname + "_path_" + self.nextsequence[1])
			if (self.nextthread_parm3[1] != NIL){
				local.aimat = self.nextthread_parm3[1]
			}else{
				local.aimat = $mg42_middle1
			}
		}
		else{
			local.path = self.nextmove[1]
			if (self.nextthread_parm3[1] != NIL){
				local.aimat = self.nextthread_parm3[1]
			}else{
				local.aimat = $mg42_middle1
			}
		}

		//	println "AI EXE TODO: " self " trying to take path and then prone at: " local.path
		self waitthread takepath local.path local.aimat

		// make him go prone  TEMP TEMP TEMP
		self exec global/prone.scr
		//self exec global/crouch.scr
		//	println "AI EXE TODO: " self " finished moving on path and has gone prone: " local.path
		self.isbusy = 0
	}
	else if (self.nextaction[1] == "move_mg_death"){
		//	println "AI EXE TODO: " self " move then death by mg command requested"
		self.isbusy = 1
		// if a path was set, use it, else default
		if (self.nextmove[1] == NIL){
			local.path = $(self.targetname + "_path_" + self.nextsequence[1])
			if (self.nextthread_parm3[1] != NIL){
				local.aimat = self.nextthread_parm3[1]
			}else{
				local.aimat = $mg42_middle1
			}
		}
		else{
			local.path = self.nextmove[1]
			if (self.nextthread_parm3[1] != NIL){
				local.aimat = self.nextthread_parm3[1]
			}else{
				local.aimat = $mg42_middle1
			}
		}

	//	println "AI EXE TODO: " self " trying to take path: " local.path
		self thread takepath local.path local.aimat

		//[203] chrissstrahl - prevent console spam
		local.waitTimez = self.nextthread_parm1[1]
		if(local.waitTimez == NIL){ local.waitTimez = 0.1 }
		wait local.waitTimez
		
		self waitthread ai_mg_death
		self.isbusy = 0
	}
	else if (self.nextaction[1] == "move_mortar_death"){
		//	println "AI EXE TODO: " self " move then death by mortar command requested"
		self.isbusy = 1
		// if a path was set, use it, else default
		if (self.nextmove[1] == NIL){
			local.path = $(self.targetname + "_path_" + self.nextsequence[1])
			if (self.nextthread_parm3[1] != NIL){
				local.aimat = self.nextthread_parm3[1]
			}else{
				local.aimat = $mg42_middle1
			}
		}
		else{
			local.path = self.nextmove[1]
			if (self.nextthread_parm3[1] != NIL){
				local.aimat = self.nextthread_parm3[1]
			}else{
				local.aimat = $mg42_middle1
			}
		}

		//	println "AI EXE TODO: " self " trying to take path: " local.path
		self thread takepath local.path local.aimat

		//[203] chrissstrahl - prevent console spam
		local.waitTimez = self.nextthread_parm1[1]
		if(local.waitTimez == NIL){ local.waitTimez = 0.1 }
		wait local.waitTimez
		
		self waitthread ai_mortar_death self.nextthread_parm2[1]

		if(self != NULL){ //chrissstrahl - prevent console error
			self.isbusy = 0
		}
	}

	// if he's dead, exit
	if !(isalive self){
	//	println "AI EXE TODO: " self " was killed after processing stack, aborting"
		end
	}

	// check if he needs to run a thread
	if (self.nextthread[1] != NIL){
		// check to see whether to pass all the parms or just the 4th
		if (self.nextaction[1] == "sequence"){
			//	println "AI EXE TODO: " self " trying to launch thread: " self.nextthread[1] " : parm1 : " self.nextthread_parm1[1]
			self.isinsequence = 1
			self waitthread self.nextthread[1] self.nextthread_parm1[1] self.nextthread_parm2[1] self.nextthread_parm3[1] self.nextthread_parm4[1]
			//	println "AI EXE TODO: " self " finished running thread: " self.nextthread[1]
			self.isinsequence = 0
		}else{
			//	println "AI EXE TODO: " self " trying to launch thread: " self.nextthread[1]
			self.isinsequence = 1
			self waitthread self.nextthread[1] self.nextthread_parm4[1]
			//	println "AI EXE TODO: " self " finished running thread: " self.nextthread[1]
			self.isinsequence = 0
		}
	}
	waitframe

	// if he's already in the process of updating his stack, hold till he's done
	while (self.isupdating == 1){
	//	println "AI EXE TODO: " self " is currently updating, waiting to bump his stack"
		wait .25
	}

	self.isupdating = 1

	// cycle any remaing commands down an index, reset the index
	//println "AI EXE TODO: " self " updating stack, cycling"
	for (local.i = 1 ; local.i < self.index ; local.i ++)
	{
		//	println "AI EXE STACK BUMP: " self " replacing index: " local.i " : with index: " (local.i + 1)
		//	println "AI EXE STACK BUMP: " self " replacing nextsequence(" local.i "): " self.nextsequence[1] " : with(" (local.i + 1) "): " self.nextsequence[(local.i + 1)]
		self.nextsequence[local.i] = self.nextsequence[(local.i + 1)]
		//	println "AI EXE STACK BUMP: " self " replacing nextaction(" local.i "): " self.nextaction[1] " : with(" (local.i + 1) "): " self.nextaction[(local.i + 1)]
		self.nextaction[local.i] = self.nextaction[(local.i + 1)]
		//	println "AI EXE STACK BUMP: " self " replacing nextmove(" local.i "): " self.nextmove[1] " : with(" (local.i + 1) "): " self.nextmove[(local.i + 1)]
		self.nextmove[local.i] = self.nextmove[(local.i + 1)]
		//	println "AI EXE STACK BUMP: " self " replacing nextthread(" local.i "): " self.nextthread[1] " : with(" (local.i + 1) "): " self.nextthread[(local.i + 1)]
		self.nextthread[local.i] = self.nextthread[(local.i + 1)]
		//	println "AI EXE STACK BUMP: " self " replacing parm1(" local.i "): " self.nextthread_parm1[1] " : with(" (local.i + 1) "): " self.nextthread_parm1[(local.i + 1)]
		self.nextthread_parm1[local.i] = self.nextthread_parm1[(local.i + 1)]
		//	println "AI EXE STACK BUMP: " self " replacing parm2(" local.i "): " self.nextthread_parm2[1] " : with(" (local.i + 1) "): " self.nextthread_parm2[(local.i + 1)]
		self.nextthread_parm2[local.i] = self.nextthread_parm2[(local.i + 1)]
		//	println "AI EXE STACK BUMP: " self " replacing parm3(" local.i "): " self.nextthread_parm3[1] " : with(" (local.i + 1) "): " self.nextthread_parm3[(local.i + 1)]
		self.nextthread_parm3[local.i] = self.nextthread_parm3[(local.i + 1)]
		//	println "AI EXE STACK BUMP: " self " replacing parm4(" local.i "): " self.nextthread_parm4[1] " : with(" (local.i + 1) "): " self.nextthread_parm4[(local.i + 1)]
		self.nextthread_parm4[local.i] = self.nextthread_parm4[(local.i + 1)]
	}

	// clear out the current index
	//println "AI EXE TODO: " self " clearing last stack entry"
	self.nextsequence[self.index] = NIL
	self.nextaction[self.index] = NIL
	self.nextmove[self.index] = NIL
	self.nextthread[self.index] = NIL
	self.nextthread_parm1[self.index] = NIL
	self.nextthread_parm2[self.index] = NIL
	self.nextthread_parm3[self.index] = NIL
	self.nextthread_parm4[self.index] = NIL

	// reduce the index by one
	self.index --

	// if there's still more on the stack todo, continue processing
	if (self.index != 0){
	//	println "AI EXE TODO: " self " has more on his stack todo, loop again, current index is: " self.index
		self.isupdating = 0
		goto ai_execute_todo_loop
	}

	//println "AI EXE TODO: " self " has finished his stack, going to wait for trigger again"
	self.isupdating = 0

	goto ai_execute_todo_reset
	//println "AI EXE TODO: " self " is dead and aborting out of his execute todo stack!!"
}end

// make an AI take a specified path
// <$targetname> ai_takepath <name of path> [what to aim at when done]
//=========================================================================
takepath local.path local.aimat:{
//=========================================================================
	// run the path Meeestah
	//println "AI TAKEPATH: " self " taking path: " local.path
	self exec global/moveto.scr anim/run.scr local.path
	self waittill movedone

	self turnto local.aimat
	wait .75

	self turnto NULL
	//println "AI TAKEPATH: " self " has finished taking path: " local.path
}end

// shooting routine for the AI
// <$targetname_of_ai> ai_shoot_volley <target to aim at> [optional crouch when done]
//=========================================================================
ai_shoot_volley local.crouch local.target:{
//=========================================================================
	// if he's dead, quit out
	if !(isalive self){
		end
	}

	// make the ai stand up
	self exec global/stand.scr

	// pick number of shotst
	local.shots = ((randomint 3) + 5)
	// check to see if a target was passed, else use the default
	if (local.target == NIL){
		local.target = $shingle_waittrigger
	}

	//println "AI SHOOT VOLLEY: " self " is supposed to be aiming at: " local.target

	self exec global/aimat.scr local.target
	wait 1

	for (local.i = 1 ; local.i <= local.shots ; local.i ++){
		self exec global/shoot.scr
		wait (randomfloat .3 + .15)
	}

	self exec global/aimat.scr NULL
	//println "AI SHOOT VOLLEY: " self " is resetting aim back to NULL"
	//println "AI SHOOT VOLLEY: " self " local.crouch is: " local.crouch

	if (local.crouch != NIL){
		self exec global/crouch.scr
		//println "AI SHOOT VOLLEY: " self " is supposed to crouch down after firing!"
	}
}end

// killing an AI with gunfire
// <$targetname_of_ai> ai_mg_death
//=========================================================================
ai_mg_death:{
//=========================================================================
	if !(isalive self){
		end
	}

	// set variable to tell that this guy is shooting a volley
	local.shots = ((randomint 2) + 2)

	for (local.i = 1 ; local.i <= local.shots ; local.i ++){
		self thread bhit 20 -1
		wait (randomfloat .3 + .15)
	}

	self thread bhit 1000 -1
}end

// killing an AI with mortar
// <$targetname_of_ai> ai_mortar_death [water, mine | default dirt]
//=========================================================================
ai_mortar_death local.type:{
//=========================================================================
	if !(isalive self){
		goto ai_mortar_death_end
	}

	// set the guys death animation
	self exec global/setdeathanim.scr death_mortar

	// set the type of mortar
	if (local.type == "water"){
		local.spawn_type = "models/animate/fx_mortar_water"
	}
	else if (local.type == "mine"){
		local.spawn_type = "models/animate/fx_explosion_mine"
	}
	else{
		local.spawn_type = "models/animate/fx_mortar_dirt"
	}

	// set the origin and targetname
	local.spawn_origin = self.origin
	local.spawn_origin[2] += 32
	local.spawn_mortar = (self.targetname + "_mortar")

	// spawn the item
	spawn local.spawn_type targetname local.spawn_mortar
	local.spawn_mortar = $(self.targetname + "_mortar")

	// reset the items origin
	local.spawn_mortar.origin = local.spawn_origin

	// call the mortar
	local.spawn_mortar waitthread mortar_call 1
	wait 2

	local.spawn_mortar remove
//=========================================================================
	ai_mortar_death_end:
//=========================================================================
}end

//  bullet hit command
//  <target> bhit [damage| 40 default] [body location| default is chest, -1 is random] [direction| vector] [force to apply| 15 default]
//=========================================================================
bhit local.damage local.location local.direction local.force:{
//=========================================================================
	if (local.damage == NIL || local.damage == 0){
		local.damage = 40
	}

	if (local.location == NIL){
		local.location = 3
	}
	else if (local.location == -1){
		local.temp = (randomint 17 + 1)
		local.location = local.temp
	}

	if (local.direction == NIL || local.direction == 0){
		local.direction = (0 -1 0)
	}

	if (local.force == NIL){
		local.force = 15
	}

	//chrissstrahl - no idea what was going on here
	//if(self.targetname == "player"){
		//iprintlnbold_noloc("is player")
	//}

	// set the characters script_damage variable so the player doesn't lose the level
	self.script_damage = 1

	// damage the target
	self exec global/bullethit.scr local.direction local.damage local.force local.location

	self playsound snd_bh_flesh

	self.script_damage = 0
}end


//***************************************************
//***************************************************
//***			NON-AI RELATED FUNCTIONS
//***************************************************
//***************************************************

// move object
// move_object <distance to move to|vector> <time to take>
//=========================================================================
move_object local.distance local.time:{
//=========================================================================
	// calculate how many moves it will have to make based on once/server frame
	local.index = local.time / .05

	// calculate the distance per move per axis
	local.move_distance_x = local.distance[0] / local.index
	local.move_distance_y = local.distance[1] / local.index
	local.move_distance_z = local.distance[2] / local.index

	// move the object every sever frame
	for (local.i = 0 ; local.i <= local.time ; local.i += .05){
		local.newx = self.origin[0] + local.move_distance_x
		local.newy = self.origin[1] + local.move_distance_y
		local.newz = self.origin[2] + local.move_distance_z

		// set the new origin
		self.origin = (local.newx local.newy local.newz)
		waitframe
	}
}end

//  mortar call in
// <mortar> mortar_call [play leadin sound| any value for no]
//=========================================================================
mortar_call local.leadin:{
//=========================================================================
	local.distance = 999//chrissstrahl

	if (local.leadin == NIL){
		//chrissstrahl - keep sp handle
		if(level.gametype == 0){
			$player playsound arty_leadin wait
			$player waittill sounddone
			local.distance = vector_length (self.origin - $player.origin)
		}
		//chrissstrahl - handle for mp/coop
		else{
			//self playsound arty_leadin wait
			self thread coop_mod/replace.scr::playsound_wait "arty_leadin" //[200] Smithy - make sound callback work in coop (also inadvertantly fixes mortars as callback error was preventing thread continuing from here)			
			self waittill sounddone
		}
	}

	self anim start

	//chrissstrahl - only jitter small, because it affects all players
	if ( $player.size > 1 || local.distance >= 513){ // beyond 512, small shake
		thread jitter_small
	}
	else if (local.distance >= 193){ // between 193 and 512, medium shake
		thread jitter_medium
	}
	else if (local.distance >= 97){ // between 97 and 192, large jitter, hurt the player if he's not in cover
		thread jitter_large
	}
	else{ // under 97, large jitter, kill the player regardless of cover
		thread jitter_large
	}

	radiusdamage self.origin 1000 192
}end

// jitter effect from mgs
// jitter_mg [delay]
//=========================================================================
jitter_mg local.time:{
//=========================================================================
	if (local.time){
		wait local.time
	}

	//chrissstrahl - don't do jitter the mg if there are multiple players, because it affects all
	if($player.size > 1){ end }

	waitexec global/earthquake.scr .5 1 0 0
	waitexec global/earthquake.scr .3 1 0 0
}end

// jitter effect from mgs in cover
// jitter_mg_cover [delay]
//=========================================================================
jitter_mg_cover local.time:{
//=========================================================================
	if (local.time){
		wait local.time
	}

	//chrissstrahl - don't do jitter the mg if there are multiple players, because it affects all
	if($player.size > 1){ end }

	waitexec global/earthquake.scr .3 .5 0 0
	waitexec global/earthquake.scr .3 .2 0 0
}end

// jitter effect from mgs in cover
// jitter_small [delay]
//=========================================================================
jitter_small local.time:{
//=========================================================================
	if (local.time){
		wait local.time
	}

	//chrissstrahl - don't do jitter the mg if there are multiple players, because it affects all
	if($player.size > 1){ end }

	waitexec global/earthquake.scr .3 1 0 0
	waitexec global/earthquake.scr .3 .75 0 0
	waitexec global/earthquake.scr 1.25 .3 0 0
}end

// jitter medium effect
// jitter_medium [delay]
//=========================================================================
jitter_medium local.time:{
//=========================================================================
	if (local.time){
		wait local.time
	}

	//chrissstrahl - don't do jitter the mg if there are multiple players, because it affects all
	if($player.size > 1){ end }

	waitexec global/earthquake.scr .23 2 0 0
	waitexec global/earthquake.scr 1 1 0 0
	waitexec global/earthquake.scr 1.25 .3 0 1
}end

// jitter large effect
// jitter_large [delay]
//=========================================================================
jitter_large local.time:{
//=========================================================================
	if (local.time){
		wait local.time
	}

	//chrissstrahl - don't do jitter the mg if there are multiple players, because it affects all
	if($player.size > 1){ end }

	waitexec global/earthquake.scr .25 3 0 0
	waitexec global/earthquake.scr .4 1.25 0 0
	waitexec global/earthquake.scr 1 .75 0 0
	waitexec global/earthquake.scr 1.25 .3 0 1
}end

// jitter effect from being next to artillery
// jitter_artillery [delay]
//=========================================================================
jitter_artillery local.time:{
//=========================================================================
	if (local.time){
		wait local.time
	}

	//chrissstrahl - don't do jitter the mg if there are multiple players, because it affects all
	if($player.size > 1){ end }

	waitexec global/earthquake.scr .23 3 0 0
}end

//[200] chrissstrahl - adjusted function for update
//chrissstrahl - set when player is spawning
//this var is used as a timelock to prevent saving of player respawn while in cover
//makeing sure that saving the current player location is only possible every y secounds
//otherwise it would be to easy to go from cover to cover then respawn at the last cover
//make sure the var is set and make sure it is reset on each spawn,
//so that the player needs to stay alive for some time before his progress is being saved
//=========================================================================
coop_playerJustSpawned:{
//=========================================================================
	local.player = parm.other
	if(local.player == NULL || local.player == $world){ end }
	local.player.flags["coverRespawnManageTime"] = level.time
}end

//[202][hotfix] Smithy
//============================================================================
coop_startBoatSpawnManager:{
//============================================================================	
	if (level.thread["coop_startBoatSpawnManager"]){ end }
	
	level.thread["coop_startBoatSpawnManager"] = local
	
	//iprintlnbold_noloc("starting coop_startBoatSpawnManager")
		
	if ($boatCamera){
		$boatCamera delete //start the number of cams at 0
	}
	
	//spawn any cameras we need for players that may have spawned before the handler started
	waitthread coop_startBoatCameras
	thread coop_maintainBoatCameras
	
	//the main spawn handler during the scene
	while (1){
		level waittill playerspawn
		println("ADDING PLAYER TO CAM (playerspawn)")
		group.player = parm.other
		
		group.player hide
		group.player notsolid	
		//group.player.viewangles = $boat.angles
		//group.player.viewangles += ( 0 18 0 )	
		
		if (!group.player.isSpectator){ 				
			thread coop_spawnBoatCamera
			thread coop_startBoatCamera
		}
	}	
}end

//[202][hotfix] Smithy - stop the Boat scene spawn handler
//============================================================================
coop_stopBoatSpawnManager:{
//============================================================================
	if (level.thread["coop_startBoatSpawnManager"]){ level.thread["coop_startBoatSpawnManager"] delete }		
	if (level.thread["coop_maintainBoatCameras"]){ level.thread["coop_maintainBoatCameras"] delete }
	thread coop_stopBoatCameras
}end

//============================================================================
coop_startBoatCameras:{
//============================================================================
	for (local.i = 1; local.i <= $player.size; local.i++){
		group.player = $player[local.i]
		if (!group.player.boatCamera){
			println("ADDING PLAYER TO CAM (coop_startBoatSpawnManager)")
			thread coop_spawnBoatCamera
			thread coop_startBoatCamera
		}
	}
}end

//============================================================================
coop_stopBoatCameras:{
//============================================================================
	cueplayer
	$boatCamera delete
}end

//[202][hotfix] Smithy - spawn a camera for a player and set it up in Boat
//============================================================================
coop_spawnBoatCamera:
//============================================================================	
	if (!group.player.boatCamera){
		local.cam = spawn Camera targetname boatCamera 	//give them all the same name so they are handled in the targetname array
		local.cam showquakes 1
		local.cam.origin = $higgins1_playerspot.origin + (0 0 85)
		local.cam bind $higgins1_playerspot
		local.cam.player = group.player
		group.player.boatCamera = local.cam
		group.player.oldViewAngles = group.player.viewangles		
	}
end

//[202][hotfix] Smithy - make them look through their Boat camera
//============================================================================
coop_startBoatCamera:{
//============================================================================	
	if (group.player.boatCamera && !group.player.inBoatCamera){
		group.player.inBoatCamera = game.true
			
		local.name = ("boatCamera_" + group.player.entnum)
		local.cam = group.player.boatCamera
		local.cam targetname local.name
		//local.cam.angles = $boat gettagangles driver_seat
		
		local.camerause = spawn trigger_camerause target local.name	
		local.camerause doUse group.player
		local.camerause delete
		
		//[202] Smithy - set targetname back to original so it gets added back to the array
		local.cam targetname "boatCamera"
	}
}end

//[202][hotfix] Smithy - make them look through their Boat camera
//============================================================================
coop_stopBoatCamera:{
//============================================================================	
	if (group.player.boatCamera && group.player.inBoatCamera){
		group.player.inBoatCamera = game.false
			
		local.name = ("boatCamera_" + group.player.entnum)
		local.cam = group.player.boatCamera
		local.cam targetname local.name
		
		local.camerause = spawn trigger_camerause target local.name	
		local.camerause doUse group.player
		local.camerause delete
		
		//[202] Smithy - set targetname back to original so it gets added back to the array
		local.cam targetname "boatCamera"
	}
}end

//[202][hotfix] Smithy
//=========================================================================
coop_maintainBoatCameras:{
//=========================================================================
	if (level.thread["coop_maintainBoatCameras"]){ end }
	level.thread["coop_maintainBoatCameras"] = local
		
	while (1) {
		//loop over all cameras
		for (local.i = 1; local.i <= $boatCamera.size; local.i++){
			local.cam = $boatCamera[local.i]
			group.player = local.cam.player

			
			if (isAlive group.player && !group.player.isSpectator){
				if (!group.player.inBoatCamera){
					//println "STARTING Boat CAM"
					thread coop_startBoatCamera					
				}			
			}else{
				if (group.player && group.player.inBoatCamera){
					thread coop_stopBoatCamera
				}
				local.cam waitthread game.replace::delete
				local.i = 0 								
				continue
			}
			
			//handle his camera view
			local.cam.angles = group.player.viewangles		
		}
		waitframe
	}
}end
