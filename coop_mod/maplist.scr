//[201] Smithy - used to populate the coop_mapsList array to check for next/previous map (and any other future properties we may want to give a map)
main:{
if(level.cMTE_coop_maplist){if(!level.cMTE){level.cMTE=0}; level.cMTE++; println( "-#-#- thread maplist/main->"+level.cMTE+"" )} //[202] chrissstrahl - this is to debug the coop mod thread handling
	local.maps = makeArray
		training //[202] Chrissstrahl
		briefing/briefing1
		m1l1
		m1l2a
		m1l2b
		m1l3a
		m1l3b
		m1l3c
		briefing/briefing2
		m2l1
		m2l2a
		m2l2b
		m2l2c
		m2l3
		briefing/briefing3
		m3l1a
		m3l1b
		m3l2
		m3l3
		briefing/briefing4
		m4l1
		m4l2
		m4l3
		briefing/briefing5
		m5l1a
		m5l1b
		m5l2a
		m5l2b
		m5l3
		briefing/briefing6
		m6l1a
		m6l1b
		m6l1c
		m6l2a
		m6l2b
		m6l3a
		m6l3b	
		m6l3d //[202][hotfix] Smithy - yep, the original devs got 3d and 3c mixed up smh...
		m6l3c
		m6l3e
		m4l0 //[201] Smithy
		//TODO: add SH maps when we come to it (when we are old and senile :^D)
		//briefing/briefinge1 //[201] chrissstrahl - this is just a video, so we skip it alltogether it created more issues than it is worth
		e1l1
		e1l2
		e1l3
		e1l4
		e2l1
		e2l2
		//TODO: add more BT maps here when we come to it
	endArray

	level.coop_mapList["maps"] = local.maps 											//might as well add all the maps in
																						//get number of maps with level.coop_mapList["maps"].size
																						//get map 1 with level.coop_mapList["maps"][1][1]
																						//get map 6 with level.coop_mapList["maps"][6][1] 
	for (local.i = 1; local.i <= local.maps.size; local.i++){
		
		local.map = local.maps[local.i][1]
		
		level.coop_mapList[local.map]["position"] = local.i 							//set the position - might be useful?
		
		if (local.i < local.maps.size){
			level.coop_mapList[local.map]["nextMap"] = local.maps[local.i + 1][1] 		//if we aren't at end, set next map to next in list
		}else if (local.i == local.maps.size){
			level.coop_mapList[local.map]["nextMap"] = local.maps[1][1] 		  		//if we are at the end, set it as the first map again
		}		
						
		if (local.i > 1){
			level.coop_mapList[local.map]["previousMap"] = local.maps[local.i - 1][1] 	//if we aren't the first map, set previous map
		}else{
			level.coop_mapList[local.map]["previousMap"] = "" 						  	//if we are the first map, there isn't a previous map (just copied what we do with level.coopPrevMap)
		}
	}
	
	//[201] Smithy - might as well populate these for future use - so we no longer need to add them to top of future map scripts
	if (!level.coopPrevMap){
		level.coopPrevMap = level.coop_mapList[level.coop_mapname]["previousMap"]
	}	
	if (!level.coopNextMap){
		level.coopNextMap = level.coop_mapList[level.coop_mapname]["nextMap"]
	}
			
	thread debug
}end


//[201] Smithy - for checking it is correct - can be removed when we are confident the map list is complete and in the right order
debug:{
if(level.cMTE_coop_maplist){if(!level.cMTE){level.cMTE=0}; level.cMTE++; println( "-#-#- thread maplist/debug->"+level.cMTE+"" )} //[202] chrissstrahl - this is to debug the coop mod thread handling
	wait 5
	
	println "Next map is: " level.coop_mapList[level.coop_mapname]["nextMap"]
	println "Previous map is: " level.coop_mapList[level.coop_mapname]["previousMap"]	
}end