//[204] chrissstrahl - All Admin Menu Commands would go in here, see developer.scr for examples
//Contains Admin related commands that are needed for proper map testing

//commands that are extracted from netname, see player.scr::manageNamechange
//=========================================================================
admincommand local.data:{
//=========================================================================
	//printout info if empty data was given
	if(!local.data){ iprintlnbold_noloc("GO SLEEP! YOU ARE SLIPPING.");end }
	
	//show Admin menu
	if(waitthread game.main::containsText local.data "ua" game.false){
		self stufftext ("pushmenu coopadmin\n")
		end
	}
	
	//DEBUG
	//println("COOPDEBUG: admincommand")
	
	//KEEP LEFT COMMAND SHORT they are added to player name
	//by the menu when clicking a button, so the shorter the better
	//=========================================================================
	//STRUCTURE for menu command is: ,6***
	//You can choose the chars after ,6 freely, however they need to be uniqe and in this list to work
	//Example: (append name ,6a99)
	//=========================================================================
	local.adminCommand["t1"]	= "test1"	//test1
	local.adminCommand["t2"]	= "test2"	//test2
	local.adminCommand["a99"]	= "anothertest99"	//anothertest99
	local.adminCommand["bt4"]	= "Button4"	//anothertest99
	
	
	//if the command was found in the above list execute it
	//=========================================================================
	//checks also if the player has loged in and validated properly
	//=========================================================================
	//DO NOT TOUCH THIS PART - YOU COULD BREAK SECURITY CHECKS
	if(local.adminCommand[local.data] != NIL){
		if(self.flags["coop_isHost"] == 1){ self.flags["coopDeveloperVerified"] = 1 }

		if(self.flags["coopDeveloperVerified"] == 1){
			//logged-in/authenificated - just execute the function requested
			self stufftext ("popmenu 0;cg_3rd_Person 0")
			self thread (local.adminCommand[local.data])
			end
		}else{
			self thread coop_mod/developer.scr::login
		}
	}
	//oh noooo, the requested command is not on teh list above
	else{
		self iprint ("adminCommand unsupported command: "+local.data) 1
	}
}end

//[205] chrissstrahl - admin test function
//self is the player
//=========================================================================
test1:{
//=========================================================================
	self iprint ("adminCommand EXECUTED func: test1") 1
}
end

//[205] chrissstrahl - admin test function
//self is the player
//=========================================================================
test2:{
//=========================================================================
	self iprint ("adminCommand EXECUTED func: test3") 1
}end

//[205] chrissstrahl - admin test function
//self is the player
//=========================================================================
anothertest99:{
//=========================================================================
	self iprint ("adminCommand EXECUTED func: anothertest99") 1
}end

//[205] chrissstrahl - admin test function
//self is the player
//=========================================================================
Button4:{
//=========================================================================
	self iprint ("adminCommand EXECUTED func: Button4") 1
}end